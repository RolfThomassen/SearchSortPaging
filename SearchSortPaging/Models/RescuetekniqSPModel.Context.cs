//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SearchSortPaging.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class rescuetekniq_sp_Entities : DbContext
    {
        public rescuetekniq_sp_Entities()
            : base("name=rescuetekniq_sp_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        [DbFunction("rescuetekniq_sp_Entities", "SplitWords")]
        public virtual IQueryable<SplitWords_Result> SplitWords(string text)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitWords_Result>("[rescuetekniq_sp_Entities].[SplitWords](@text)", textParameter);
        }
    
        public virtual int Co2Db_AED_Battery_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Battery_Delete", iDParameter);
        }
    
        public virtual int Co2Db_AED_Battery_Insert(Nullable<int> aED_FK, Nullable<int> batteryType, Nullable<System.DateTime> batteryDeleveryDate, Nullable<System.DateTime> batteryExpireDate, Nullable<int> status, Nullable<System.DateTime> batteryEmailSendt, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var batteryTypeParameter = batteryType.HasValue ?
                new ObjectParameter("BatteryType", batteryType) :
                new ObjectParameter("BatteryType", typeof(int));
    
            var batteryDeleveryDateParameter = batteryDeleveryDate.HasValue ?
                new ObjectParameter("BatteryDeleveryDate", batteryDeleveryDate) :
                new ObjectParameter("BatteryDeleveryDate", typeof(System.DateTime));
    
            var batteryExpireDateParameter = batteryExpireDate.HasValue ?
                new ObjectParameter("BatteryExpireDate", batteryExpireDate) :
                new ObjectParameter("BatteryExpireDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var batteryEmailSendtParameter = batteryEmailSendt.HasValue ?
                new ObjectParameter("BatteryEmailSendt", batteryEmailSendt) :
                new ObjectParameter("BatteryEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Battery_Insert", aED_FKParameter, batteryTypeParameter, batteryDeleveryDateParameter, batteryExpireDateParameter, statusParameter, batteryEmailSendtParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_AED_Battery_SelectAll_Result> Co2Db_AED_Battery_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Battery_SelectAll_Result>("Co2Db_AED_Battery_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Battery_SelectAllExpiredEail_Result> Co2Db_AED_Battery_SelectAllExpiredEail(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Battery_SelectAllExpiredEail_Result>("Co2Db_AED_Battery_SelectAllExpiredEail", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Battery_SelectAllSoonExpired_Result> Co2Db_AED_Battery_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Battery_SelectAllSoonExpired_Result>("Co2Db_AED_Battery_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Battery_SelectByAED_Result> Co2Db_AED_Battery_SelectByAED(Nullable<int> aED_FK, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Battery_SelectByAED_Result>("Co2Db_AED_Battery_SelectByAED", aED_FKParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Battery_SelectByGUID_Result> Co2Db_AED_Battery_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Battery_SelectByGUID_Result>("Co2Db_AED_Battery_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Battery_SelectID_Result> Co2Db_AED_Battery_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Battery_SelectID_Result>("Co2Db_AED_Battery_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Battery_SelectOne_Result> Co2Db_AED_Battery_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Battery_SelectOne_Result>("Co2Db_AED_Battery_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_AED_Battery_Update(Nullable<int> iD, Nullable<int> aED_FK, Nullable<int> batteryType, Nullable<System.DateTime> batteryDeleveryDate, Nullable<System.DateTime> batteryExpireDate, Nullable<int> status, Nullable<System.DateTime> batteryEmailSendt, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var batteryTypeParameter = batteryType.HasValue ?
                new ObjectParameter("BatteryType", batteryType) :
                new ObjectParameter("BatteryType", typeof(int));
    
            var batteryDeleveryDateParameter = batteryDeleveryDate.HasValue ?
                new ObjectParameter("BatteryDeleveryDate", batteryDeleveryDate) :
                new ObjectParameter("BatteryDeleveryDate", typeof(System.DateTime));
    
            var batteryExpireDateParameter = batteryExpireDate.HasValue ?
                new ObjectParameter("BatteryExpireDate", batteryExpireDate) :
                new ObjectParameter("BatteryExpireDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var batteryEmailSendtParameter = batteryEmailSendt.HasValue ?
                new ObjectParameter("BatteryEmailSendt", batteryEmailSendt) :
                new ObjectParameter("BatteryEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Battery_Update", iDParameter, aED_FKParameter, batteryTypeParameter, batteryDeleveryDateParameter, batteryExpireDateParameter, statusParameter, batteryEmailSendtParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_AED_CountAEDByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_AED_CountAEDByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_AED_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Delete", iDParameter);
        }
    
        public virtual int Co2Db_AED_Electrod_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Electrod_Delete", iDParameter);
        }
    
        public virtual int Co2Db_AED_Electrod_Insert(Nullable<int> aED_FK, Nullable<int> electrodType, Nullable<System.DateTime> electrodDeleveryDate, Nullable<System.DateTime> electrodExpireDate, Nullable<int> status, Nullable<System.DateTime> electrodEmailSendt, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var electrodTypeParameter = electrodType.HasValue ?
                new ObjectParameter("ElectrodType", electrodType) :
                new ObjectParameter("ElectrodType", typeof(int));
    
            var electrodDeleveryDateParameter = electrodDeleveryDate.HasValue ?
                new ObjectParameter("ElectrodDeleveryDate", electrodDeleveryDate) :
                new ObjectParameter("ElectrodDeleveryDate", typeof(System.DateTime));
    
            var electrodExpireDateParameter = electrodExpireDate.HasValue ?
                new ObjectParameter("ElectrodExpireDate", electrodExpireDate) :
                new ObjectParameter("ElectrodExpireDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var electrodEmailSendtParameter = electrodEmailSendt.HasValue ?
                new ObjectParameter("ElectrodEmailSendt", electrodEmailSendt) :
                new ObjectParameter("ElectrodEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Electrod_Insert", aED_FKParameter, electrodTypeParameter, electrodDeleveryDateParameter, electrodExpireDateParameter, statusParameter, electrodEmailSendtParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectAll_Result> Co2Db_AED_Electrod_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectAll_Result>("Co2Db_AED_Electrod_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectAllExpired_Result> Co2Db_AED_Electrod_SelectAllExpired(Nullable<int> companyID, Nullable<int> status, Nullable<int> expireTime, Nullable<System.DateTime> date, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var expireTimeParameter = expireTime.HasValue ?
                new ObjectParameter("ExpireTime", expireTime) :
                new ObjectParameter("ExpireTime", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectAllExpired_Result>("Co2Db_AED_Electrod_SelectAllExpired", companyIDParameter, statusParameter, expireTimeParameter, dateParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectAllExpiredEmail_Result> Co2Db_AED_Electrod_SelectAllExpiredEmail(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectAllExpiredEmail_Result>("Co2Db_AED_Electrod_SelectAllExpiredEmail", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectAllSoonExpired_Result> Co2Db_AED_Electrod_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectAllSoonExpired_Result>("Co2Db_AED_Electrod_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectByAED_Result> Co2Db_AED_Electrod_SelectByAED(Nullable<int> aED_FK, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectByAED_Result>("Co2Db_AED_Electrod_SelectByAED", aED_FKParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectByGUID_Result> Co2Db_AED_Electrod_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectByGUID_Result>("Co2Db_AED_Electrod_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectID_Result> Co2Db_AED_Electrod_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectID_Result>("Co2Db_AED_Electrod_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Electrod_SelectOne_Result> Co2Db_AED_Electrod_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Electrod_SelectOne_Result>("Co2Db_AED_Electrod_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_AED_Electrod_Update(Nullable<int> iD, Nullable<int> aED_FK, Nullable<int> electrodType, Nullable<System.DateTime> electrodDeleveryDate, Nullable<System.DateTime> electrodExpireDate, Nullable<int> status, Nullable<System.DateTime> electrodEmailSendt, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var electrodTypeParameter = electrodType.HasValue ?
                new ObjectParameter("ElectrodType", electrodType) :
                new ObjectParameter("ElectrodType", typeof(int));
    
            var electrodDeleveryDateParameter = electrodDeleveryDate.HasValue ?
                new ObjectParameter("ElectrodDeleveryDate", electrodDeleveryDate) :
                new ObjectParameter("ElectrodDeleveryDate", typeof(System.DateTime));
    
            var electrodExpireDateParameter = electrodExpireDate.HasValue ?
                new ObjectParameter("ElectrodExpireDate", electrodExpireDate) :
                new ObjectParameter("ElectrodExpireDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var electrodEmailSendtParameter = electrodEmailSendt.HasValue ?
                new ObjectParameter("ElectrodEmailSendt", electrodEmailSendt) :
                new ObjectParameter("ElectrodEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Electrod_Update", iDParameter, aED_FKParameter, electrodTypeParameter, electrodDeleveryDateParameter, electrodExpireDateParameter, statusParameter, electrodEmailSendtParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_AED_Insert(Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> emailSendt, Nullable<System.DateTime> batteryActivationDate, Nullable<System.DateTime> batteryWarencyExpireDate, string firmwareVersion, string firmwareLanguage, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, string locationBuildingNo, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<System.DateTime> registerretCSI, string registerretAF, string note, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var emailSendtParameter = emailSendt.HasValue ?
                new ObjectParameter("EmailSendt", emailSendt) :
                new ObjectParameter("EmailSendt", typeof(System.DateTime));
    
            var batteryActivationDateParameter = batteryActivationDate.HasValue ?
                new ObjectParameter("BatteryActivationDate", batteryActivationDate) :
                new ObjectParameter("BatteryActivationDate", typeof(System.DateTime));
    
            var batteryWarencyExpireDateParameter = batteryWarencyExpireDate.HasValue ?
                new ObjectParameter("BatteryWarencyExpireDate", batteryWarencyExpireDate) :
                new ObjectParameter("BatteryWarencyExpireDate", typeof(System.DateTime));
    
            var firmwareVersionParameter = firmwareVersion != null ?
                new ObjectParameter("FirmwareVersion", firmwareVersion) :
                new ObjectParameter("FirmwareVersion", typeof(string));
    
            var firmwareLanguageParameter = firmwareLanguage != null ?
                new ObjectParameter("FirmwareLanguage", firmwareLanguage) :
                new ObjectParameter("FirmwareLanguage", typeof(string));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var locationBuildingNoParameter = locationBuildingNo != null ?
                new ObjectParameter("LocationBuildingNo", locationBuildingNo) :
                new ObjectParameter("LocationBuildingNo", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var registerretCSIParameter = registerretCSI.HasValue ?
                new ObjectParameter("RegisterretCSI", registerretCSI) :
                new ObjectParameter("RegisterretCSI", typeof(System.DateTime));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Insert", statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, emailSendtParameter, batteryActivationDateParameter, batteryWarencyExpireDateParameter, firmwareVersionParameter, firmwareLanguageParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, locationBuildingNoParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, registerretCSIParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_AED_Redning_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Redning_Delete", iDParameter);
        }
    
        public virtual int Co2Db_AED_Redning_Insert(Nullable<int> aED_FK, Nullable<int> companyID, Nullable<int> redningType, Nullable<System.DateTime> redningDate, string redningNote, Nullable<int> status, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var redningTypeParameter = redningType.HasValue ?
                new ObjectParameter("RedningType", redningType) :
                new ObjectParameter("RedningType", typeof(int));
    
            var redningDateParameter = redningDate.HasValue ?
                new ObjectParameter("RedningDate", redningDate) :
                new ObjectParameter("RedningDate", typeof(System.DateTime));
    
            var redningNoteParameter = redningNote != null ?
                new ObjectParameter("RedningNote", redningNote) :
                new ObjectParameter("RedningNote", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Redning_Insert", aED_FKParameter, companyIDParameter, redningTypeParameter, redningDateParameter, redningNoteParameter, statusParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_AED_Redning_SelectAll_Result> Co2Db_AED_Redning_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Redning_SelectAll_Result>("Co2Db_AED_Redning_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_AED_Redning_SelectByAED_Result> Co2Db_AED_Redning_SelectByAED(Nullable<int> aED_FK)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Redning_SelectByAED_Result>("Co2Db_AED_Redning_SelectByAED", aED_FKParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Redning_SelectByCompany_Result> Co2Db_AED_Redning_SelectByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Redning_SelectByCompany_Result>("Co2Db_AED_Redning_SelectByCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Redning_SelectID_Result> Co2Db_AED_Redning_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Redning_SelectID_Result>("Co2Db_AED_Redning_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Redning_SelectOne_Result> Co2Db_AED_Redning_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Redning_SelectOne_Result>("Co2Db_AED_Redning_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_AED_Redning_Update(Nullable<int> iD, Nullable<int> aED_FK, Nullable<int> companyID, Nullable<int> redningType, Nullable<System.DateTime> redningDate, string redningNote, Nullable<int> status, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var redningTypeParameter = redningType.HasValue ?
                new ObjectParameter("RedningType", redningType) :
                new ObjectParameter("RedningType", typeof(int));
    
            var redningDateParameter = redningDate.HasValue ?
                new ObjectParameter("RedningDate", redningDate) :
                new ObjectParameter("RedningDate", typeof(System.DateTime));
    
            var redningNoteParameter = redningNote != null ?
                new ObjectParameter("RedningNote", redningNote) :
                new ObjectParameter("RedningNote", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Redning_Update", iDParameter, aED_FKParameter, companyIDParameter, redningTypeParameter, redningDateParameter, redningNoteParameter, statusParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Search_Result> Co2Db_AED_Search(string serialNo, string postnr, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Search_Result>("Co2Db_AED_Search", serialNoParameter, postnrParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectAll_Result> Co2Db_AED_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectAll_Result>("Co2Db_AED_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectAllExpired_Result> Co2Db_AED_SelectAllExpired(Nullable<int> companyID, Nullable<int> status, Nullable<int> expireTime, Nullable<System.DateTime> expireDate, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var expireTimeParameter = expireTime.HasValue ?
                new ObjectParameter("ExpireTime", expireTime) :
                new ObjectParameter("ExpireTime", typeof(int));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectAllExpired_Result>("Co2Db_AED_SelectAllExpired", companyIDParameter, statusParameter, expireTimeParameter, expireDateParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectAllSoonExpired_Result> Co2Db_AED_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectAllSoonExpired_Result>("Co2Db_AED_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectByAfventer_Result> Co2Db_AED_SelectByAfventer(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectByAfventer_Result>("Co2Db_AED_SelectByAfventer", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectByBilagStatus_Result> Co2Db_AED_SelectByBilagStatus(Nullable<int> companyID, Nullable<int> bilagStatus, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectByBilagStatus_Result>("Co2Db_AED_SelectByBilagStatus", companyIDParameter, bilagStatusParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectByCompany_Result> Co2Db_AED_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectByCompany_Result>("Co2Db_AED_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectByConcernID_Result> Co2Db_AED_SelectByConcernID(string concernID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var concernIDParameter = concernID != null ?
                new ObjectParameter("ConcernID", concernID) :
                new ObjectParameter("ConcernID", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectByConcernID_Result>("Co2Db_AED_SelectByConcernID", concernIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectByGUID_Result> Co2Db_AED_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectByGUID_Result>("Co2Db_AED_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectBySerialNo_Result> Co2Db_AED_SelectBySerialNo(string serialNo, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectBySerialNo_Result>("Co2Db_AED_SelectBySerialNo", serialNoParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectConcernAED_Result> Co2Db_AED_SelectConcernAED(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectConcernAED_Result>("Co2Db_AED_SelectConcernAED", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectID_Result> Co2Db_AED_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectID_Result>("Co2Db_AED_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_AED_SelectIDByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_AED_SelectIDByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_SelectOne_Result> Co2Db_AED_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_SelectOne_Result>("Co2Db_AED_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_AED_Service_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Service_Delete", iDParameter);
        }
    
        public virtual int Co2Db_AED_Service_Insert(Nullable<int> aED_FK, Nullable<int> status, Nullable<int> serviceType, Nullable<bool> serviceActive, Nullable<System.DateTime> serviceDueDate, Nullable<System.DateTime> serviceVisitedDate, Nullable<int> serviceConsultantID, string serviceConsultant, Nullable<decimal> servicePrice, Nullable<System.DateTime> serviceDeleveryDate, Nullable<System.DateTime> serviceExpireDate, Nullable<System.DateTime> serviceEmailSendt, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(int));
    
            var serviceActiveParameter = serviceActive.HasValue ?
                new ObjectParameter("ServiceActive", serviceActive) :
                new ObjectParameter("ServiceActive", typeof(bool));
    
            var serviceDueDateParameter = serviceDueDate.HasValue ?
                new ObjectParameter("ServiceDueDate", serviceDueDate) :
                new ObjectParameter("ServiceDueDate", typeof(System.DateTime));
    
            var serviceVisitedDateParameter = serviceVisitedDate.HasValue ?
                new ObjectParameter("ServiceVisitedDate", serviceVisitedDate) :
                new ObjectParameter("ServiceVisitedDate", typeof(System.DateTime));
    
            var serviceConsultantIDParameter = serviceConsultantID.HasValue ?
                new ObjectParameter("ServiceConsultantID", serviceConsultantID) :
                new ObjectParameter("ServiceConsultantID", typeof(int));
    
            var serviceConsultantParameter = serviceConsultant != null ?
                new ObjectParameter("ServiceConsultant", serviceConsultant) :
                new ObjectParameter("ServiceConsultant", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var serviceDeleveryDateParameter = serviceDeleveryDate.HasValue ?
                new ObjectParameter("ServiceDeleveryDate", serviceDeleveryDate) :
                new ObjectParameter("ServiceDeleveryDate", typeof(System.DateTime));
    
            var serviceExpireDateParameter = serviceExpireDate.HasValue ?
                new ObjectParameter("ServiceExpireDate", serviceExpireDate) :
                new ObjectParameter("ServiceExpireDate", typeof(System.DateTime));
    
            var serviceEmailSendtParameter = serviceEmailSendt.HasValue ?
                new ObjectParameter("ServiceEmailSendt", serviceEmailSendt) :
                new ObjectParameter("ServiceEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Service_Insert", aED_FKParameter, statusParameter, serviceTypeParameter, serviceActiveParameter, serviceDueDateParameter, serviceVisitedDateParameter, serviceConsultantIDParameter, serviceConsultantParameter, servicePriceParameter, serviceDeleveryDateParameter, serviceExpireDateParameter, serviceEmailSendtParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectAll_Result> Co2Db_AED_Service_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectAll_Result>("Co2Db_AED_Service_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectAllExpiredEmail_Result> Co2Db_AED_Service_SelectAllExpiredEmail(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectAllExpiredEmail_Result>("Co2Db_AED_Service_SelectAllExpiredEmail", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectAllSoonExpired_Result> Co2Db_AED_Service_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectAllSoonExpired_Result>("Co2Db_AED_Service_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectByAED_Result> Co2Db_AED_Service_SelectByAED(Nullable<int> aED_FK, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectByAED_Result>("Co2Db_AED_Service_SelectByAED", aED_FKParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectByCompany_Result> Co2Db_AED_Service_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectByCompany_Result>("Co2Db_AED_Service_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectByGUID_Result> Co2Db_AED_Service_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectByGUID_Result>("Co2Db_AED_Service_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectID_Result> Co2Db_AED_Service_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectID_Result>("Co2Db_AED_Service_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Service_SelectOne_Result> Co2Db_AED_Service_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Service_SelectOne_Result>("Co2Db_AED_Service_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_AED_Service_Update(Nullable<int> iD, Nullable<int> aED_FK, Nullable<int> status, Nullable<int> serviceType, Nullable<bool> serviceActive, Nullable<System.DateTime> serviceDueDate, Nullable<System.DateTime> serviceVisitedDate, Nullable<int> serviceConsultantID, string serviceConsultant, Nullable<decimal> servicePrice, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aED_FKParameter = aED_FK.HasValue ?
                new ObjectParameter("AED_FK", aED_FK) :
                new ObjectParameter("AED_FK", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(int));
    
            var serviceActiveParameter = serviceActive.HasValue ?
                new ObjectParameter("ServiceActive", serviceActive) :
                new ObjectParameter("ServiceActive", typeof(bool));
    
            var serviceDueDateParameter = serviceDueDate.HasValue ?
                new ObjectParameter("ServiceDueDate", serviceDueDate) :
                new ObjectParameter("ServiceDueDate", typeof(System.DateTime));
    
            var serviceVisitedDateParameter = serviceVisitedDate.HasValue ?
                new ObjectParameter("ServiceVisitedDate", serviceVisitedDate) :
                new ObjectParameter("ServiceVisitedDate", typeof(System.DateTime));
    
            var serviceConsultantIDParameter = serviceConsultantID.HasValue ?
                new ObjectParameter("ServiceConsultantID", serviceConsultantID) :
                new ObjectParameter("ServiceConsultantID", typeof(int));
    
            var serviceConsultantParameter = serviceConsultant != null ?
                new ObjectParameter("ServiceConsultant", serviceConsultant) :
                new ObjectParameter("ServiceConsultant", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Service_Update", iDParameter, aED_FKParameter, statusParameter, serviceTypeParameter, serviceActiveParameter, serviceDueDateParameter, serviceVisitedDateParameter, serviceConsultantIDParameter, serviceConsultantParameter, servicePriceParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_AED_Trainer_CountAEDByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_AED_Trainer_CountAEDByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_AED_Trainer_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Trainer_Delete", iDParameter);
        }
    
        public virtual int Co2Db_AED_Trainer_Delete_ByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Trainer_Delete_ByCompany", companyIDParameter);
        }
    
        public virtual int Co2Db_AED_Trainer_Insert(Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> batteryActivationDate, Nullable<System.DateTime> batteryWarencyExpireDate, string firmwareVersion, string firmwareLanguage, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<System.DateTime> registerretCSI, string registerretAF, string note, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var batteryActivationDateParameter = batteryActivationDate.HasValue ?
                new ObjectParameter("BatteryActivationDate", batteryActivationDate) :
                new ObjectParameter("BatteryActivationDate", typeof(System.DateTime));
    
            var batteryWarencyExpireDateParameter = batteryWarencyExpireDate.HasValue ?
                new ObjectParameter("BatteryWarencyExpireDate", batteryWarencyExpireDate) :
                new ObjectParameter("BatteryWarencyExpireDate", typeof(System.DateTime));
    
            var firmwareVersionParameter = firmwareVersion != null ?
                new ObjectParameter("FirmwareVersion", firmwareVersion) :
                new ObjectParameter("FirmwareVersion", typeof(string));
    
            var firmwareLanguageParameter = firmwareLanguage != null ?
                new ObjectParameter("FirmwareLanguage", firmwareLanguage) :
                new ObjectParameter("FirmwareLanguage", typeof(string));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var registerretCSIParameter = registerretCSI.HasValue ?
                new ObjectParameter("RegisterretCSI", registerretCSI) :
                new ObjectParameter("RegisterretCSI", typeof(System.DateTime));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Trainer_Insert", statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, batteryActivationDateParameter, batteryWarencyExpireDateParameter, firmwareVersionParameter, firmwareLanguageParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, registerretCSIParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_AED_Trainer_SelectAll_Result> Co2Db_AED_Trainer_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Trainer_SelectAll_Result>("Co2Db_AED_Trainer_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Trainer_SelectByCompany_Result> Co2Db_AED_Trainer_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Trainer_SelectByCompany_Result>("Co2Db_AED_Trainer_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Trainer_SelectByGUID_Result> Co2Db_AED_Trainer_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Trainer_SelectByGUID_Result>("Co2Db_AED_Trainer_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Trainer_SelectID_Result> Co2Db_AED_Trainer_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Trainer_SelectID_Result>("Co2Db_AED_Trainer_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_AED_Trainer_SelectIDByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_AED_Trainer_SelectIDByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_AED_Trainer_SelectOne_Result> Co2Db_AED_Trainer_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_AED_Trainer_SelectOne_Result>("Co2Db_AED_Trainer_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_AED_Trainer_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> batteryActivationDate, Nullable<System.DateTime> batteryWarencyExpireDate, string firmwareVersion, string firmwareLanguage, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<System.DateTime> registerretCSI, string registerretAF, string note, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var batteryActivationDateParameter = batteryActivationDate.HasValue ?
                new ObjectParameter("BatteryActivationDate", batteryActivationDate) :
                new ObjectParameter("BatteryActivationDate", typeof(System.DateTime));
    
            var batteryWarencyExpireDateParameter = batteryWarencyExpireDate.HasValue ?
                new ObjectParameter("BatteryWarencyExpireDate", batteryWarencyExpireDate) :
                new ObjectParameter("BatteryWarencyExpireDate", typeof(System.DateTime));
    
            var firmwareVersionParameter = firmwareVersion != null ?
                new ObjectParameter("FirmwareVersion", firmwareVersion) :
                new ObjectParameter("FirmwareVersion", typeof(string));
    
            var firmwareLanguageParameter = firmwareLanguage != null ?
                new ObjectParameter("FirmwareLanguage", firmwareLanguage) :
                new ObjectParameter("FirmwareLanguage", typeof(string));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var registerretCSIParameter = registerretCSI.HasValue ?
                new ObjectParameter("RegisterretCSI", registerretCSI) :
                new ObjectParameter("RegisterretCSI", typeof(System.DateTime));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Trainer_Update", iDParameter, statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, batteryActivationDateParameter, batteryWarencyExpireDateParameter, firmwareVersionParameter, firmwareLanguageParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, registerretCSIParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_AED_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> emailSendt, Nullable<System.DateTime> batteryActivationDate, Nullable<System.DateTime> batteryWarencyExpireDate, string firmwareVersion, string firmwareLanguage, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, string locationBuildingNo, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<System.DateTime> registerretCSI, string registerretAF, string note, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var emailSendtParameter = emailSendt.HasValue ?
                new ObjectParameter("EmailSendt", emailSendt) :
                new ObjectParameter("EmailSendt", typeof(System.DateTime));
    
            var batteryActivationDateParameter = batteryActivationDate.HasValue ?
                new ObjectParameter("BatteryActivationDate", batteryActivationDate) :
                new ObjectParameter("BatteryActivationDate", typeof(System.DateTime));
    
            var batteryWarencyExpireDateParameter = batteryWarencyExpireDate.HasValue ?
                new ObjectParameter("BatteryWarencyExpireDate", batteryWarencyExpireDate) :
                new ObjectParameter("BatteryWarencyExpireDate", typeof(System.DateTime));
    
            var firmwareVersionParameter = firmwareVersion != null ?
                new ObjectParameter("FirmwareVersion", firmwareVersion) :
                new ObjectParameter("FirmwareVersion", typeof(string));
    
            var firmwareLanguageParameter = firmwareLanguage != null ?
                new ObjectParameter("FirmwareLanguage", firmwareLanguage) :
                new ObjectParameter("FirmwareLanguage", typeof(string));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var locationBuildingNoParameter = locationBuildingNo != null ?
                new ObjectParameter("LocationBuildingNo", locationBuildingNo) :
                new ObjectParameter("LocationBuildingNo", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var registerretCSIParameter = registerretCSI.HasValue ?
                new ObjectParameter("RegisterretCSI", registerretCSI) :
                new ObjectParameter("RegisterretCSI", typeof(System.DateTime));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_AED_Update", iDParameter, statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, emailSendtParameter, batteryActivationDateParameter, batteryWarencyExpireDateParameter, firmwareVersionParameter, firmwareLanguageParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, locationBuildingNoParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, registerretCSIParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Agent_Insert(Nullable<System.Guid> agentID, Nullable<int> companyID, Nullable<System.DateTime> agentStartDate, Nullable<System.DateTime> agentExpiredDate, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var agentStartDateParameter = agentStartDate.HasValue ?
                new ObjectParameter("AgentStartDate", agentStartDate) :
                new ObjectParameter("AgentStartDate", typeof(System.DateTime));
    
            var agentExpiredDateParameter = agentExpiredDate.HasValue ?
                new ObjectParameter("AgentExpiredDate", agentExpiredDate) :
                new ObjectParameter("AgentExpiredDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Agent_Insert", agentIDParameter, companyIDParameter, agentStartDateParameter, agentExpiredDateParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Agent_SelectByAgent_Result> Co2Db_Agent_SelectByAgent(Nullable<System.Guid> agentID)
        {
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Agent_SelectByAgent_Result>("Co2Db_Agent_SelectByAgent", agentIDParameter);
        }
    
        public virtual int Co2Db_Agent_Update(Nullable<int> iD, Nullable<System.Guid> agentID, Nullable<System.DateTime> agentStartDate, Nullable<System.DateTime> agentExpiredDate, Nullable<int> companyID, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var agentStartDateParameter = agentStartDate.HasValue ?
                new ObjectParameter("AgentStartDate", agentStartDate) :
                new ObjectParameter("AgentStartDate", typeof(System.DateTime));
    
            var agentExpiredDateParameter = agentExpiredDate.HasValue ?
                new ObjectParameter("AgentExpiredDate", agentExpiredDate) :
                new ObjectParameter("AgentExpiredDate", typeof(System.DateTime));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Agent_Update", iDParameter, agentIDParameter, agentStartDateParameter, agentExpiredDateParameter, companyIDParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Agent_Virksomhed_Delete(Nullable<System.Guid> agentID, Nullable<int> companyID, string rettetAf, string rettetIP)
        {
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Agent_Virksomhed_Delete", agentIDParameter, companyIDParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Agents_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Agents_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Agents_Insert(Nullable<System.Guid> agentID, string companyName, string title, string name, string firstName, string lastName, string address1, string address2, string city, string zipCode, string state, Nullable<int> countryID, string email, string ordreEmail, string phone, string cellPhone, string fax, Nullable<int> status, string userID, Nullable<bool> serviceAgent, string agentSignaturImg, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ordreEmailParameter = ordreEmail != null ?
                new ObjectParameter("OrdreEmail", ordreEmail) :
                new ObjectParameter("OrdreEmail", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cellPhoneParameter = cellPhone != null ?
                new ObjectParameter("CellPhone", cellPhone) :
                new ObjectParameter("CellPhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var serviceAgentParameter = serviceAgent.HasValue ?
                new ObjectParameter("ServiceAgent", serviceAgent) :
                new ObjectParameter("ServiceAgent", typeof(bool));
    
            var agentSignaturImgParameter = agentSignaturImg != null ?
                new ObjectParameter("AgentSignaturImg", agentSignaturImg) :
                new ObjectParameter("AgentSignaturImg", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Agents_Insert", agentIDParameter, companyNameParameter, titleParameter, nameParameter, firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, zipCodeParameter, stateParameter, countryIDParameter, emailParameter, ordreEmailParameter, phoneParameter, cellPhoneParameter, faxParameter, statusParameter, userIDParameter, serviceAgentParameter, agentSignaturImgParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Agents_SelectAll_Result> Co2Db_Agents_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Agents_SelectAll_Result>("Co2Db_Agents_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_Agents_SelectByAgentGUID_Result> Co2Db_Agents_SelectByAgentGUID(Nullable<System.Guid> agentID)
        {
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Agents_SelectByAgentGUID_Result>("Co2Db_Agents_SelectByAgentGUID", agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Agents_SelectID_Result> Co2Db_Agents_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Agents_SelectID_Result>("Co2Db_Agents_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Agents_SelectOne_Result> Co2Db_Agents_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Agents_SelectOne_Result>("Co2Db_Agents_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_Agents_Update(Nullable<int> iD, Nullable<System.Guid> agentID, string companyName, string title, string name, string firstName, string lastName, string address1, string address2, string city, string zipCode, string state, Nullable<int> countryID, string email, string ordreEmail, string phone, string cellPhone, string fax, Nullable<int> status, string userID, Nullable<bool> serviceAgent, string agentSignaturImg, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ordreEmailParameter = ordreEmail != null ?
                new ObjectParameter("OrdreEmail", ordreEmail) :
                new ObjectParameter("OrdreEmail", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cellPhoneParameter = cellPhone != null ?
                new ObjectParameter("CellPhone", cellPhone) :
                new ObjectParameter("CellPhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var serviceAgentParameter = serviceAgent.HasValue ?
                new ObjectParameter("ServiceAgent", serviceAgent) :
                new ObjectParameter("ServiceAgent", typeof(bool));
    
            var agentSignaturImgParameter = agentSignaturImg != null ?
                new ObjectParameter("AgentSignaturImg", agentSignaturImg) :
                new ObjectParameter("AgentSignaturImg", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Agents_Update", iDParameter, agentIDParameter, companyNameParameter, titleParameter, nameParameter, firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, zipCodeParameter, stateParameter, countryIDParameter, emailParameter, ordreEmailParameter, phoneParameter, cellPhoneParameter, faxParameter, statusParameter, userIDParameter, serviceAgentParameter, agentSignaturImgParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Aiva_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Aiva_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Aiva_Insert(Nullable<int> companyID, Nullable<int> status, Nullable<int> modelID, string serialNo, string invoiceID, Nullable<System.DateTime> salesDate, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var invoiceIDParameter = invoiceID != null ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(string));
    
            var salesDateParameter = salesDate.HasValue ?
                new ObjectParameter("SalesDate", salesDate) :
                new ObjectParameter("SalesDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Aiva_Insert", companyIDParameter, statusParameter, modelIDParameter, serialNoParameter, invoiceIDParameter, salesDateParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_Aiva_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Aiva_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Aiva_SelectAll_Result> Co2Db_Aiva_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Aiva_SelectAll_Result>("Co2Db_Aiva_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Aiva_SelectCompanyID_Result> Co2Db_Aiva_SelectCompanyID(Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> companyID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Aiva_SelectCompanyID_Result>("Co2Db_Aiva_SelectCompanyID", isAgentParameter, agentIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Aiva_SelectID_Result> Co2Db_Aiva_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Aiva_SelectID_Result>("Co2Db_Aiva_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Aiva_SelectModelID_Result> Co2Db_Aiva_SelectModelID(Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> modelID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Aiva_SelectModelID_Result>("Co2Db_Aiva_SelectModelID", isAgentParameter, agentIDParameter, modelIDParameter);
        }
    
        public virtual int Co2Db_Aiva_Update(Nullable<int> iD, Nullable<int> companyID, Nullable<int> status, Nullable<int> modelID, string serialNo, string invoiceID, Nullable<System.DateTime> salesDate, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var invoiceIDParameter = invoiceID != null ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(string));
    
            var salesDateParameter = salesDate.HasValue ?
                new ObjectParameter("SalesDate", salesDate) :
                new ObjectParameter("SalesDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Aiva_Update", iDParameter, companyIDParameter, statusParameter, modelIDParameter, serialNoParameter, invoiceIDParameter, salesDateParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2DB_Campaign_Company_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2DB_Campaign_Company_Delete", iDParameter);
        }
    
        public virtual int Co2DB_Campaign_Company_Insert(Nullable<int> campaignID, Nullable<int> companyID, Nullable<int> status, Nullable<System.Guid> responsibleID, string responsibleName, string responsibleEmail, string contactPerson, Nullable<bool> contactedByPhone, Nullable<bool> meetingHeld, Nullable<bool> campaignSale, Nullable<decimal> campaignSaleAmount, Nullable<bool> expectedSale, Nullable<decimal> expectedSaleAmount, string notes, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var responsibleIDParameter = responsibleID.HasValue ?
                new ObjectParameter("ResponsibleID", responsibleID) :
                new ObjectParameter("ResponsibleID", typeof(System.Guid));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contactedByPhoneParameter = contactedByPhone.HasValue ?
                new ObjectParameter("ContactedByPhone", contactedByPhone) :
                new ObjectParameter("ContactedByPhone", typeof(bool));
    
            var meetingHeldParameter = meetingHeld.HasValue ?
                new ObjectParameter("MeetingHeld", meetingHeld) :
                new ObjectParameter("MeetingHeld", typeof(bool));
    
            var campaignSaleParameter = campaignSale.HasValue ?
                new ObjectParameter("CampaignSale", campaignSale) :
                new ObjectParameter("CampaignSale", typeof(bool));
    
            var campaignSaleAmountParameter = campaignSaleAmount.HasValue ?
                new ObjectParameter("CampaignSaleAmount", campaignSaleAmount) :
                new ObjectParameter("CampaignSaleAmount", typeof(decimal));
    
            var expectedSaleParameter = expectedSale.HasValue ?
                new ObjectParameter("ExpectedSale", expectedSale) :
                new ObjectParameter("ExpectedSale", typeof(bool));
    
            var expectedSaleAmountParameter = expectedSaleAmount.HasValue ?
                new ObjectParameter("ExpectedSaleAmount", expectedSaleAmount) :
                new ObjectParameter("ExpectedSaleAmount", typeof(decimal));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2DB_Campaign_Company_Insert", campaignIDParameter, companyIDParameter, statusParameter, responsibleIDParameter, responsibleNameParameter, responsibleEmailParameter, contactPersonParameter, contactedByPhoneParameter, meetingHeldParameter, campaignSaleParameter, campaignSaleAmountParameter, expectedSaleParameter, expectedSaleAmountParameter, notesParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2DB_Campaign_Company_Search_Result> Co2DB_Campaign_Company_Search(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2DB_Campaign_Company_Search_Result>("Co2DB_Campaign_Company_Search", searchParameter);
        }
    
        public virtual ObjectResult<Co2DB_Campaign_Company_SelectAll_Result> Co2DB_Campaign_Company_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2DB_Campaign_Company_SelectAll_Result>("Co2DB_Campaign_Company_SelectAll");
        }
    
        public virtual ObjectResult<Co2DB_Campaign_Company_SelectCampaignID_Result> Co2DB_Campaign_Company_SelectCampaignID(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2DB_Campaign_Company_SelectCampaignID_Result>("Co2DB_Campaign_Company_SelectCampaignID", campaignIDParameter);
        }
    
        public virtual ObjectResult<Co2DB_Campaign_Company_SelectCampaignNo_Result> Co2DB_Campaign_Company_SelectCampaignNo(string campaignNo)
        {
            var campaignNoParameter = campaignNo != null ?
                new ObjectParameter("CampaignNo", campaignNo) :
                new ObjectParameter("CampaignNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2DB_Campaign_Company_SelectCampaignNo_Result>("Co2DB_Campaign_Company_SelectCampaignNo", campaignNoParameter);
        }
    
        public virtual ObjectResult<Co2DB_Campaign_Company_SelectCompanyID_Result> Co2DB_Campaign_Company_SelectCompanyID(string companyID)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2DB_Campaign_Company_SelectCompanyID_Result>("Co2DB_Campaign_Company_SelectCompanyID", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2DB_Campaign_Company_SelectOne_Result> Co2DB_Campaign_Company_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2DB_Campaign_Company_SelectOne_Result>("Co2DB_Campaign_Company_SelectOne", iDParameter);
        }
    
        public virtual int Co2DB_Campaign_Company_Update(Nullable<int> iD, Nullable<int> campaignID, Nullable<int> companyID, Nullable<int> status, Nullable<System.Guid> responsibleID, string responsibleName, string responsibleEmail, string contactPerson, Nullable<bool> contactedByPhone, Nullable<bool> meetingHeld, Nullable<bool> campaignSale, Nullable<decimal> campaignSaleAmount, Nullable<bool> expectedSale, Nullable<decimal> expectedSaleAmount, string notes, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var responsibleIDParameter = responsibleID.HasValue ?
                new ObjectParameter("ResponsibleID", responsibleID) :
                new ObjectParameter("ResponsibleID", typeof(System.Guid));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contactedByPhoneParameter = contactedByPhone.HasValue ?
                new ObjectParameter("ContactedByPhone", contactedByPhone) :
                new ObjectParameter("ContactedByPhone", typeof(bool));
    
            var meetingHeldParameter = meetingHeld.HasValue ?
                new ObjectParameter("MeetingHeld", meetingHeld) :
                new ObjectParameter("MeetingHeld", typeof(bool));
    
            var campaignSaleParameter = campaignSale.HasValue ?
                new ObjectParameter("CampaignSale", campaignSale) :
                new ObjectParameter("CampaignSale", typeof(bool));
    
            var campaignSaleAmountParameter = campaignSaleAmount.HasValue ?
                new ObjectParameter("CampaignSaleAmount", campaignSaleAmount) :
                new ObjectParameter("CampaignSaleAmount", typeof(decimal));
    
            var expectedSaleParameter = expectedSale.HasValue ?
                new ObjectParameter("ExpectedSale", expectedSale) :
                new ObjectParameter("ExpectedSale", typeof(bool));
    
            var expectedSaleAmountParameter = expectedSaleAmount.HasValue ?
                new ObjectParameter("ExpectedSaleAmount", expectedSaleAmount) :
                new ObjectParameter("ExpectedSaleAmount", typeof(decimal));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2DB_Campaign_Company_Update", iDParameter, campaignIDParameter, companyIDParameter, statusParameter, responsibleIDParameter, responsibleNameParameter, responsibleEmailParameter, contactPersonParameter, contactedByPhoneParameter, meetingHeldParameter, campaignSaleParameter, campaignSaleAmountParameter, expectedSaleParameter, expectedSaleAmountParameter, notesParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Campaign_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Campaign_Delete", iDParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Campaign_GetNextCampaignNo(ObjectParameter campaignNo)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Campaign_GetNextCampaignNo", campaignNo);
        }
    
        public virtual int Co2Db_Campaign_Insert(Nullable<bool> active, Nullable<int> status, string campaignNo, string name, string description, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> expectedImediateSale, Nullable<decimal> expectedFollowupSale, Nullable<int> campaignMaterial, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var campaignNoParameter = campaignNo != null ?
                new ObjectParameter("CampaignNo", campaignNo) :
                new ObjectParameter("CampaignNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var expectedImediateSaleParameter = expectedImediateSale.HasValue ?
                new ObjectParameter("ExpectedImediateSale", expectedImediateSale) :
                new ObjectParameter("ExpectedImediateSale", typeof(decimal));
    
            var expectedFollowupSaleParameter = expectedFollowupSale.HasValue ?
                new ObjectParameter("ExpectedFollowupSale", expectedFollowupSale) :
                new ObjectParameter("ExpectedFollowupSale", typeof(decimal));
    
            var campaignMaterialParameter = campaignMaterial.HasValue ?
                new ObjectParameter("CampaignMaterial", campaignMaterial) :
                new ObjectParameter("CampaignMaterial", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Campaign_Insert", activeParameter, statusParameter, campaignNoParameter, nameParameter, descriptionParameter, startDateParameter, endDateParameter, expectedImediateSaleParameter, expectedFollowupSaleParameter, campaignMaterialParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Campaign_Search_Result> Co2Db_Campaign_Search(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Campaign_Search_Result>("Co2Db_Campaign_Search", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_Campaign_SelectAll_Result> Co2Db_Campaign_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Campaign_SelectAll_Result>("Co2Db_Campaign_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_Campaign_SelectOne_Result> Co2Db_Campaign_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Campaign_SelectOne_Result>("Co2Db_Campaign_SelectOne", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Campaign_SelectOneCampaign_Result> Co2Db_Campaign_SelectOneCampaign(string campaignNo)
        {
            var campaignNoParameter = campaignNo != null ?
                new ObjectParameter("CampaignNo", campaignNo) :
                new ObjectParameter("CampaignNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Campaign_SelectOneCampaign_Result>("Co2Db_Campaign_SelectOneCampaign", campaignNoParameter);
        }
    
        public virtual int Co2Db_Campaign_Update(Nullable<int> iD, Nullable<bool> active, Nullable<int> status, string campaignNo, string name, string description, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> expectedImediateSale, Nullable<decimal> expectedFollowupSale, Nullable<int> campaignMaterial, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var campaignNoParameter = campaignNo != null ?
                new ObjectParameter("CampaignNo", campaignNo) :
                new ObjectParameter("CampaignNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var expectedImediateSaleParameter = expectedImediateSale.HasValue ?
                new ObjectParameter("ExpectedImediateSale", expectedImediateSale) :
                new ObjectParameter("ExpectedImediateSale", typeof(decimal));
    
            var expectedFollowupSaleParameter = expectedFollowupSale.HasValue ?
                new ObjectParameter("ExpectedFollowupSale", expectedFollowupSale) :
                new ObjectParameter("ExpectedFollowupSale", typeof(decimal));
    
            var campaignMaterialParameter = campaignMaterial.HasValue ?
                new ObjectParameter("CampaignMaterial", campaignMaterial) :
                new ObjectParameter("CampaignMaterial", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Campaign_Update", iDParameter, activeParameter, statusParameter, campaignNoParameter, nameParameter, descriptionParameter, startDateParameter, endDateParameter, expectedImediateSaleParameter, expectedFollowupSaleParameter, campaignMaterialParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Combobox_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Combobox_Delete", iDParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Combobox_GetContent(string field, Nullable<int> idx)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var idxParameter = idx.HasValue ?
                new ObjectParameter("Idx", idx) :
                new ObjectParameter("Idx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Combobox_GetContent", fieldParameter, idxParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Combobox_GetCount(string field)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Combobox_GetCount", fieldParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Combobox_GetIdxByTitle(string field, string title)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Combobox_GetIdxByTitle", fieldParameter, titleParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Combobox_GetTitle(string field, Nullable<int> idx)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var idxParameter = idx.HasValue ?
                new ObjectParameter("Idx", idx) :
                new ObjectParameter("Idx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Combobox_GetTitle", fieldParameter, idxParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Combobox_GetTitleByValue(string field, string value)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Combobox_GetTitleByValue", fieldParameter, valueParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Combobox_GetValue(string field, Nullable<int> idx)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var idxParameter = idx.HasValue ?
                new ObjectParameter("Idx", idx) :
                new ObjectParameter("Idx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Combobox_GetValue", fieldParameter, idxParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Combobox_GetValueByTitle(string field, string title)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Combobox_GetValueByTitle", fieldParameter, titleParameter);
        }
    
        public virtual int Co2Db_Combobox_Insert(string field, string title, string value, string contents, Nullable<bool> hidden, Nullable<bool> valid, Nullable<int> idx, string applicationName, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var hiddenParameter = hidden.HasValue ?
                new ObjectParameter("Hidden", hidden) :
                new ObjectParameter("Hidden", typeof(bool));
    
            var validParameter = valid.HasValue ?
                new ObjectParameter("Valid", valid) :
                new ObjectParameter("Valid", typeof(bool));
    
            var idxParameter = idx.HasValue ?
                new ObjectParameter("Idx", idx) :
                new ObjectParameter("Idx", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Combobox_Insert", fieldParameter, titleParameter, valueParameter, contentsParameter, hiddenParameter, validParameter, idxParameter, applicationNameParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Combobox_ListAll_Result> Co2Db_Combobox_ListAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Combobox_ListAll_Result>("Co2Db_Combobox_ListAll");
        }
    
        public virtual int Co2Db_Combobox_MoveDown(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Combobox_MoveDown", iDParameter);
        }
    
        public virtual int Co2Db_Combobox_MoveUp(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Combobox_MoveUp", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Combobox_SelectAll_Result> Co2Db_Combobox_SelectAll(string field)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Combobox_SelectAll_Result>("Co2Db_Combobox_SelectAll", fieldParameter);
        }
    
        public virtual ObjectResult<Co2Db_Combobox_SelectAll_AddValue_Result> Co2Db_Combobox_SelectAll_AddValue(string field)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Combobox_SelectAll_AddValue_Result>("Co2Db_Combobox_SelectAll_AddValue", fieldParameter);
        }
    
        public virtual ObjectResult<Co2Db_Combobox_SelectByID_Result> Co2Db_Combobox_SelectByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Combobox_SelectByID_Result>("Co2Db_Combobox_SelectByID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Combobox_SelectOne_Result> Co2Db_Combobox_SelectOne(string field, Nullable<int> idx)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var idxParameter = idx.HasValue ?
                new ObjectParameter("Idx", idx) :
                new ObjectParameter("Idx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Combobox_SelectOne_Result>("Co2Db_Combobox_SelectOne", fieldParameter, idxParameter);
        }
    
        public virtual int Co2Db_Combobox_Update(Nullable<int> iD, string field, string title, string value, string contents, Nullable<bool> hidden, Nullable<bool> valid, Nullable<int> idx, string applicationName, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var hiddenParameter = hidden.HasValue ?
                new ObjectParameter("Hidden", hidden) :
                new ObjectParameter("Hidden", typeof(bool));
    
            var validParameter = valid.HasValue ?
                new ObjectParameter("Valid", valid) :
                new ObjectParameter("Valid", typeof(bool));
    
            var idxParameter = idx.HasValue ?
                new ObjectParameter("Idx", idx) :
                new ObjectParameter("Idx", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Combobox_Update", iDParameter, fieldParameter, titleParameter, valueParameter, contentsParameter, hiddenParameter, validParameter, idxParameter, applicationNameParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Countries_GetCountryName(Nullable<int> iCountryID)
        {
            var iCountryIDParameter = iCountryID.HasValue ?
                new ObjectParameter("iCountryID", iCountryID) :
                new ObjectParameter("iCountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Countries_GetCountryName", iCountryIDParameter);
        }
    
        public virtual int Co2Db_Countries_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Countries_SelectAll");
        }
    
        public virtual int Co2Db_Currency_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Currency_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Currency_Insert(string currencyCode, string currencyDesc, Nullable<double> currencyRate, Nullable<System.DateTime> currencyDate, string currencySymbol, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var currencyDescParameter = currencyDesc != null ?
                new ObjectParameter("CurrencyDesc", currencyDesc) :
                new ObjectParameter("CurrencyDesc", typeof(string));
    
            var currencyRateParameter = currencyRate.HasValue ?
                new ObjectParameter("CurrencyRate", currencyRate) :
                new ObjectParameter("CurrencyRate", typeof(double));
    
            var currencyDateParameter = currencyDate.HasValue ?
                new ObjectParameter("CurrencyDate", currencyDate) :
                new ObjectParameter("CurrencyDate", typeof(System.DateTime));
    
            var currencySymbolParameter = currencySymbol != null ?
                new ObjectParameter("CurrencySymbol", currencySymbol) :
                new ObjectParameter("CurrencySymbol", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Currency_Insert", currencyCodeParameter, currencyDescParameter, currencyRateParameter, currencyDateParameter, currencySymbolParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Currency_SelectAll_Result> Co2Db_Currency_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Currency_SelectAll_Result>("Co2Db_Currency_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_Currency_SelectByCode_Result> Co2Db_Currency_SelectByCode(string currencyCode)
        {
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Currency_SelectByCode_Result>("Co2Db_Currency_SelectByCode", currencyCodeParameter);
        }
    
        public virtual ObjectResult<Co2Db_Currency_SelectBySearch_Result> Co2Db_Currency_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Currency_SelectBySearch_Result>("Co2Db_Currency_SelectBySearch", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_Currency_SelectID_Result> Co2Db_Currency_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Currency_SelectID_Result>("Co2Db_Currency_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Currency_SelectOne_Result> Co2Db_Currency_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Currency_SelectOne_Result>("Co2Db_Currency_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_Currency_Update(Nullable<int> iD, string currencyCode, string currencyDesc, Nullable<double> currencyRate, Nullable<System.DateTime> currencyDate, string currencySymbol, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var currencyDescParameter = currencyDesc != null ?
                new ObjectParameter("CurrencyDesc", currencyDesc) :
                new ObjectParameter("CurrencyDesc", typeof(string));
    
            var currencyRateParameter = currencyRate.HasValue ?
                new ObjectParameter("CurrencyRate", currencyRate) :
                new ObjectParameter("CurrencyRate", typeof(double));
    
            var currencyDateParameter = currencyDate.HasValue ?
                new ObjectParameter("CurrencyDate", currencyDate) :
                new ObjectParameter("CurrencyDate", typeof(System.DateTime));
    
            var currencySymbolParameter = currencySymbol != null ?
                new ObjectParameter("CurrencySymbol", currencySymbol) :
                new ObjectParameter("CurrencySymbol", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Currency_Update", iDParameter, currencyCodeParameter, currencyDescParameter, currencyRateParameter, currencyDateParameter, currencySymbolParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Dokumenter_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Dokumenter_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Dokumenter_Delete_ByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Dokumenter_Delete_ByCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Dokumenter_Forsikring_SelectBySearch_Result> Co2Db_Dokumenter_Forsikring_SelectBySearch(string search, Nullable<int> type, Nullable<int> category, Nullable<int> owner, Nullable<int> medArbGrpID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(int));
    
            var medArbGrpIDParameter = medArbGrpID.HasValue ?
                new ObjectParameter("MedArbGrpID", medArbGrpID) :
                new ObjectParameter("MedArbGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Dokumenter_Forsikring_SelectBySearch_Result>("Co2Db_Dokumenter_Forsikring_SelectBySearch", searchParameter, typeParameter, categoryParameter, ownerParameter, medArbGrpIDParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Dokumenter_GetDokumentName(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Dokumenter_GetDokumentName", iDParameter);
        }
    
        public virtual int Co2Db_Dokumenter_Insert(Nullable<bool> aktiv, Nullable<System.DateTime> dato, Nullable<System.DateTime> expireDate, string name, string mime, string beskrivelse, Nullable<int> type, Nullable<int> category, Nullable<int> owner, Nullable<int> medArbGrpID, string filename, string ext, Nullable<int> size, Nullable<int> width, Nullable<int> height, string userID, string iP, string rettetAF, string rettetIP, Nullable<bool> hidden, string clob, byte[] blob, ObjectParameter iD)
        {
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var datoParameter = dato.HasValue ?
                new ObjectParameter("Dato", dato) :
                new ObjectParameter("Dato", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mimeParameter = mime != null ?
                new ObjectParameter("Mime", mime) :
                new ObjectParameter("Mime", typeof(string));
    
            var beskrivelseParameter = beskrivelse != null ?
                new ObjectParameter("Beskrivelse", beskrivelse) :
                new ObjectParameter("Beskrivelse", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(int));
    
            var medArbGrpIDParameter = medArbGrpID.HasValue ?
                new ObjectParameter("MedArbGrpID", medArbGrpID) :
                new ObjectParameter("MedArbGrpID", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("Ext", ext) :
                new ObjectParameter("Ext", typeof(string));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            var hiddenParameter = hidden.HasValue ?
                new ObjectParameter("Hidden", hidden) :
                new ObjectParameter("Hidden", typeof(bool));
    
            var clobParameter = clob != null ?
                new ObjectParameter("Clob", clob) :
                new ObjectParameter("Clob", typeof(string));
    
            var blobParameter = blob != null ?
                new ObjectParameter("Blob", blob) :
                new ObjectParameter("Blob", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Dokumenter_Insert", aktivParameter, datoParameter, expireDateParameter, nameParameter, mimeParameter, beskrivelseParameter, typeParameter, categoryParameter, ownerParameter, medArbGrpIDParameter, filenameParameter, extParameter, sizeParameter, widthParameter, heightParameter, userIDParameter, iPParameter, rettetAFParameter, rettetIPParameter, hiddenParameter, clobParameter, blobParameter, iD);
        }
    
        public virtual int Co2Db_Dokumenter_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Dokumenter_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Dokumenter_SelectAll_Result> Co2Db_Dokumenter_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Dokumenter_SelectAll_Result>("Co2Db_Dokumenter_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_Dokumenter_SelectBySearch_Result> Co2Db_Dokumenter_SelectBySearch(string search, Nullable<int> type, Nullable<int> category, Nullable<int> owner, Nullable<int> medArbGrpID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(int));
    
            var medArbGrpIDParameter = medArbGrpID.HasValue ?
                new ObjectParameter("MedArbGrpID", medArbGrpID) :
                new ObjectParameter("MedArbGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Dokumenter_SelectBySearch_Result>("Co2Db_Dokumenter_SelectBySearch", searchParameter, typeParameter, categoryParameter, ownerParameter, medArbGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Dokumenter_SelectByTypeCategory_Result> Co2Db_Dokumenter_SelectByTypeCategory(Nullable<int> type, Nullable<int> category, Nullable<int> owner, Nullable<int> medArbGrpID)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(int));
    
            var medArbGrpIDParameter = medArbGrpID.HasValue ?
                new ObjectParameter("MedArbGrpID", medArbGrpID) :
                new ObjectParameter("MedArbGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Dokumenter_SelectByTypeCategory_Result>("Co2Db_Dokumenter_SelectByTypeCategory", typeParameter, categoryParameter, ownerParameter, medArbGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Dokumenter_SelectOne_Result> Co2Db_Dokumenter_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Dokumenter_SelectOne_Result>("Co2Db_Dokumenter_SelectOne", iDParameter);
        }
    
        public virtual ObjectResult<byte[]> Co2Db_Dokumenter_SelectOneBlob(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("Co2Db_Dokumenter_SelectOneBlob", iDParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Dokumenter_SelectOneClob(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Dokumenter_SelectOneClob", iDParameter);
        }
    
        public virtual int Co2Db_Dokumenter_Update(Nullable<int> iD, Nullable<bool> aktiv, Nullable<System.DateTime> dato, Nullable<System.DateTime> expireDate, string name, string mime, string beskrivelse, Nullable<int> type, Nullable<int> category, Nullable<int> owner, Nullable<int> medArbGrpID, string filename, string ext, Nullable<int> size, Nullable<int> width, Nullable<int> height, string userID, string iP, string rettetAF, string rettetIP, Nullable<bool> hidden, string clob, byte[] blob)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var datoParameter = dato.HasValue ?
                new ObjectParameter("Dato", dato) :
                new ObjectParameter("Dato", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mimeParameter = mime != null ?
                new ObjectParameter("Mime", mime) :
                new ObjectParameter("Mime", typeof(string));
    
            var beskrivelseParameter = beskrivelse != null ?
                new ObjectParameter("Beskrivelse", beskrivelse) :
                new ObjectParameter("Beskrivelse", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(int));
    
            var medArbGrpIDParameter = medArbGrpID.HasValue ?
                new ObjectParameter("MedArbGrpID", medArbGrpID) :
                new ObjectParameter("MedArbGrpID", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("Ext", ext) :
                new ObjectParameter("Ext", typeof(string));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            var hiddenParameter = hidden.HasValue ?
                new ObjectParameter("Hidden", hidden) :
                new ObjectParameter("Hidden", typeof(bool));
    
            var clobParameter = clob != null ?
                new ObjectParameter("Clob", clob) :
                new ObjectParameter("Clob", typeof(string));
    
            var blobParameter = blob != null ?
                new ObjectParameter("Blob", blob) :
                new ObjectParameter("Blob", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Dokumenter_Update", iDParameter, aktivParameter, datoParameter, expireDateParameter, nameParameter, mimeParameter, beskrivelseParameter, typeParameter, categoryParameter, ownerParameter, medArbGrpIDParameter, filenameParameter, extParameter, sizeParameter, widthParameter, heightParameter, userIDParameter, iPParameter, rettetAFParameter, rettetIPParameter, hiddenParameter, clobParameter, blobParameter);
        }
    
        public virtual int Co2Db_Dokumenter_UpdateBlob(Nullable<int> iD, byte[] blob)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var blobParameter = blob != null ?
                new ObjectParameter("Blob", blob) :
                new ObjectParameter("Blob", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Dokumenter_UpdateBlob", iDParameter, blobParameter);
        }
    
        public virtual int Co2Db_Dokumenter_UpdateClob(Nullable<int> iD, string clob)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var clobParameter = clob != null ?
                new ObjectParameter("Clob", clob) :
                new ObjectParameter("Clob", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Dokumenter_UpdateClob", iDParameter, clobParameter);
        }
    
        public virtual int Co2Db_EYE_Bottle_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Bottle_Delete", iDParameter);
        }
    
        public virtual int Co2Db_EYE_Bottle_Insert(Nullable<int> eYE_FK, Nullable<int> bottleType, Nullable<System.DateTime> bottleDeleveryDate, Nullable<System.DateTime> bottleExpireDate, Nullable<int> status, Nullable<System.DateTime> bottleEmailSendt, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var eYE_FKParameter = eYE_FK.HasValue ?
                new ObjectParameter("EYE_FK", eYE_FK) :
                new ObjectParameter("EYE_FK", typeof(int));
    
            var bottleTypeParameter = bottleType.HasValue ?
                new ObjectParameter("BottleType", bottleType) :
                new ObjectParameter("BottleType", typeof(int));
    
            var bottleDeleveryDateParameter = bottleDeleveryDate.HasValue ?
                new ObjectParameter("BottleDeleveryDate", bottleDeleveryDate) :
                new ObjectParameter("BottleDeleveryDate", typeof(System.DateTime));
    
            var bottleExpireDateParameter = bottleExpireDate.HasValue ?
                new ObjectParameter("BottleExpireDate", bottleExpireDate) :
                new ObjectParameter("BottleExpireDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var bottleEmailSendtParameter = bottleEmailSendt.HasValue ?
                new ObjectParameter("BottleEmailSendt", bottleEmailSendt) :
                new ObjectParameter("BottleEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Bottle_Insert", eYE_FKParameter, bottleTypeParameter, bottleDeleveryDateParameter, bottleExpireDateParameter, statusParameter, bottleEmailSendtParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Bottle_SelectAll_Result> Co2Db_EYE_Bottle_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Bottle_SelectAll_Result>("Co2Db_EYE_Bottle_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Bottle_SelectAllExpiredEail_Result> Co2Db_EYE_Bottle_SelectAllExpiredEail(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Bottle_SelectAllExpiredEail_Result>("Co2Db_EYE_Bottle_SelectAllExpiredEail", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Bottle_SelectAllSoonExpired_Result> Co2Db_EYE_Bottle_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Bottle_SelectAllSoonExpired_Result>("Co2Db_EYE_Bottle_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Bottle_SelectByEYE_Result> Co2Db_EYE_Bottle_SelectByEYE(Nullable<int> eYE_FK, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var eYE_FKParameter = eYE_FK.HasValue ?
                new ObjectParameter("EYE_FK", eYE_FK) :
                new ObjectParameter("EYE_FK", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Bottle_SelectByEYE_Result>("Co2Db_EYE_Bottle_SelectByEYE", eYE_FKParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Bottle_SelectByGUID_Result> Co2Db_EYE_Bottle_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Bottle_SelectByGUID_Result>("Co2Db_EYE_Bottle_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Bottle_SelectID_Result> Co2Db_EYE_Bottle_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Bottle_SelectID_Result>("Co2Db_EYE_Bottle_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Bottle_SelectOne_Result> Co2Db_EYE_Bottle_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Bottle_SelectOne_Result>("Co2Db_EYE_Bottle_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_EYE_Bottle_Update(Nullable<int> iD, Nullable<int> eYE_FK, Nullable<int> bottleType, Nullable<System.DateTime> bottleDeleveryDate, Nullable<System.DateTime> bottleExpireDate, Nullable<int> status, Nullable<System.DateTime> bottleEmailSendt, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var eYE_FKParameter = eYE_FK.HasValue ?
                new ObjectParameter("EYE_FK", eYE_FK) :
                new ObjectParameter("EYE_FK", typeof(int));
    
            var bottleTypeParameter = bottleType.HasValue ?
                new ObjectParameter("BottleType", bottleType) :
                new ObjectParameter("BottleType", typeof(int));
    
            var bottleDeleveryDateParameter = bottleDeleveryDate.HasValue ?
                new ObjectParameter("BottleDeleveryDate", bottleDeleveryDate) :
                new ObjectParameter("BottleDeleveryDate", typeof(System.DateTime));
    
            var bottleExpireDateParameter = bottleExpireDate.HasValue ?
                new ObjectParameter("BottleExpireDate", bottleExpireDate) :
                new ObjectParameter("BottleExpireDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var bottleEmailSendtParameter = bottleEmailSendt.HasValue ?
                new ObjectParameter("BottleEmailSendt", bottleEmailSendt) :
                new ObjectParameter("BottleEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Bottle_Update", iDParameter, eYE_FKParameter, bottleTypeParameter, bottleDeleveryDateParameter, bottleExpireDateParameter, statusParameter, bottleEmailSendtParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_EYE_CountEYEByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_EYE_CountEYEByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_EYE_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Delete", iDParameter);
        }
    
        public virtual int Co2Db_EYE_Insert(Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> emailSendt, Nullable<System.DateTime> bottleActivationDate, Nullable<System.DateTime> bottleWarencyExpireDate, string firmwareVersion, string firmwareLanguage, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, string locationBuildingNo, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<System.DateTime> registerretCSI, string registerretAF, string note, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var emailSendtParameter = emailSendt.HasValue ?
                new ObjectParameter("EmailSendt", emailSendt) :
                new ObjectParameter("EmailSendt", typeof(System.DateTime));
    
            var bottleActivationDateParameter = bottleActivationDate.HasValue ?
                new ObjectParameter("BottleActivationDate", bottleActivationDate) :
                new ObjectParameter("BottleActivationDate", typeof(System.DateTime));
    
            var bottleWarencyExpireDateParameter = bottleWarencyExpireDate.HasValue ?
                new ObjectParameter("BottleWarencyExpireDate", bottleWarencyExpireDate) :
                new ObjectParameter("BottleWarencyExpireDate", typeof(System.DateTime));
    
            var firmwareVersionParameter = firmwareVersion != null ?
                new ObjectParameter("FirmwareVersion", firmwareVersion) :
                new ObjectParameter("FirmwareVersion", typeof(string));
    
            var firmwareLanguageParameter = firmwareLanguage != null ?
                new ObjectParameter("FirmwareLanguage", firmwareLanguage) :
                new ObjectParameter("FirmwareLanguage", typeof(string));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var locationBuildingNoParameter = locationBuildingNo != null ?
                new ObjectParameter("LocationBuildingNo", locationBuildingNo) :
                new ObjectParameter("LocationBuildingNo", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var registerretCSIParameter = registerretCSI.HasValue ?
                new ObjectParameter("RegisterretCSI", registerretCSI) :
                new ObjectParameter("RegisterretCSI", typeof(System.DateTime));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Insert", statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, emailSendtParameter, bottleActivationDateParameter, bottleWarencyExpireDateParameter, firmwareVersionParameter, firmwareLanguageParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, locationBuildingNoParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, registerretCSIParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Search_Result> Co2Db_EYE_Search(string serialNo, string postnr, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Search_Result>("Co2Db_EYE_Search", serialNoParameter, postnrParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectAll_Result> Co2Db_EYE_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectAll_Result>("Co2Db_EYE_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_EYE_SelectAllExpired(Nullable<int> companyID, Nullable<int> status, Nullable<int> expireTime, Nullable<System.DateTime> expireDate, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var expireTimeParameter = expireTime.HasValue ?
                new ObjectParameter("ExpireTime", expireTime) :
                new ObjectParameter("ExpireTime", typeof(int));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_SelectAllExpired", companyIDParameter, statusParameter, expireTimeParameter, expireDateParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectAllSoonExpired_Result> Co2Db_EYE_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectAllSoonExpired_Result>("Co2Db_EYE_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectByAfventer_Result> Co2Db_EYE_SelectByAfventer(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectByAfventer_Result>("Co2Db_EYE_SelectByAfventer", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectByBilagStatus_Result> Co2Db_EYE_SelectByBilagStatus(Nullable<int> companyID, Nullable<int> bilagStatus, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectByBilagStatus_Result>("Co2Db_EYE_SelectByBilagStatus", companyIDParameter, bilagStatusParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_EYE_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectByConcernID_Result> Co2Db_EYE_SelectByConcernID(string concernID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var concernIDParameter = concernID != null ?
                new ObjectParameter("ConcernID", concernID) :
                new ObjectParameter("ConcernID", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectByConcernID_Result>("Co2Db_EYE_SelectByConcernID", concernIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectByGUID_Result> Co2Db_EYE_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectByGUID_Result>("Co2Db_EYE_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectBySerialNo_Result> Co2Db_EYE_SelectBySerialNo(string serialNo, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectBySerialNo_Result>("Co2Db_EYE_SelectBySerialNo", serialNoParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectConcernEYE_Result> Co2Db_EYE_SelectConcernEYE(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectConcernEYE_Result>("Co2Db_EYE_SelectConcernEYE", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectID_Result> Co2Db_EYE_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectID_Result>("Co2Db_EYE_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_EYE_SelectIDByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_EYE_SelectIDByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_SelectOne_Result> Co2Db_EYE_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_SelectOne_Result>("Co2Db_EYE_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_EYE_Service_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Service_Delete", iDParameter);
        }
    
        public virtual int Co2Db_EYE_Service_Insert(Nullable<int> eYE_FK, Nullable<int> status, Nullable<int> serviceType, Nullable<bool> serviceActive, Nullable<System.DateTime> serviceDueDate, Nullable<System.DateTime> serviceVisitedDate, Nullable<int> serviceConsultantID, string serviceConsultant, Nullable<decimal> servicePrice, Nullable<System.DateTime> serviceDeleveryDate, Nullable<System.DateTime> serviceExpireDate, Nullable<System.DateTime> serviceEmailSendt, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var eYE_FKParameter = eYE_FK.HasValue ?
                new ObjectParameter("EYE_FK", eYE_FK) :
                new ObjectParameter("EYE_FK", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(int));
    
            var serviceActiveParameter = serviceActive.HasValue ?
                new ObjectParameter("ServiceActive", serviceActive) :
                new ObjectParameter("ServiceActive", typeof(bool));
    
            var serviceDueDateParameter = serviceDueDate.HasValue ?
                new ObjectParameter("ServiceDueDate", serviceDueDate) :
                new ObjectParameter("ServiceDueDate", typeof(System.DateTime));
    
            var serviceVisitedDateParameter = serviceVisitedDate.HasValue ?
                new ObjectParameter("ServiceVisitedDate", serviceVisitedDate) :
                new ObjectParameter("ServiceVisitedDate", typeof(System.DateTime));
    
            var serviceConsultantIDParameter = serviceConsultantID.HasValue ?
                new ObjectParameter("ServiceConsultantID", serviceConsultantID) :
                new ObjectParameter("ServiceConsultantID", typeof(int));
    
            var serviceConsultantParameter = serviceConsultant != null ?
                new ObjectParameter("ServiceConsultant", serviceConsultant) :
                new ObjectParameter("ServiceConsultant", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var serviceDeleveryDateParameter = serviceDeleveryDate.HasValue ?
                new ObjectParameter("ServiceDeleveryDate", serviceDeleveryDate) :
                new ObjectParameter("ServiceDeleveryDate", typeof(System.DateTime));
    
            var serviceExpireDateParameter = serviceExpireDate.HasValue ?
                new ObjectParameter("ServiceExpireDate", serviceExpireDate) :
                new ObjectParameter("ServiceExpireDate", typeof(System.DateTime));
    
            var serviceEmailSendtParameter = serviceEmailSendt.HasValue ?
                new ObjectParameter("ServiceEmailSendt", serviceEmailSendt) :
                new ObjectParameter("ServiceEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Service_Insert", eYE_FKParameter, statusParameter, serviceTypeParameter, serviceActiveParameter, serviceDueDateParameter, serviceVisitedDateParameter, serviceConsultantIDParameter, serviceConsultantParameter, servicePriceParameter, serviceDeleveryDateParameter, serviceExpireDateParameter, serviceEmailSendtParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectAll_Result> Co2Db_EYE_Service_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectAll_Result>("Co2Db_EYE_Service_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectAllExpiredEmail_Result> Co2Db_EYE_Service_SelectAllExpiredEmail(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectAllExpiredEmail_Result>("Co2Db_EYE_Service_SelectAllExpiredEmail", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectAllSoonExpired_Result> Co2Db_EYE_Service_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectAllSoonExpired_Result>("Co2Db_EYE_Service_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectByCompany_Result> Co2Db_EYE_Service_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectByCompany_Result>("Co2Db_EYE_Service_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectByEYE_Result> Co2Db_EYE_Service_SelectByEYE(Nullable<int> eYE_FK, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var eYE_FKParameter = eYE_FK.HasValue ?
                new ObjectParameter("EYE_FK", eYE_FK) :
                new ObjectParameter("EYE_FK", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectByEYE_Result>("Co2Db_EYE_Service_SelectByEYE", eYE_FKParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectByGUID_Result> Co2Db_EYE_Service_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectByGUID_Result>("Co2Db_EYE_Service_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectID_Result> Co2Db_EYE_Service_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectID_Result>("Co2Db_EYE_Service_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_EYE_Service_SelectOne_Result> Co2Db_EYE_Service_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_EYE_Service_SelectOne_Result>("Co2Db_EYE_Service_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_EYE_Service_Update(Nullable<int> iD, Nullable<int> eYE_FK, Nullable<int> status, Nullable<int> serviceType, Nullable<bool> serviceActive, Nullable<System.DateTime> serviceDueDate, Nullable<System.DateTime> serviceVisitedDate, Nullable<int> serviceConsultantID, string serviceConsultant, Nullable<decimal> servicePrice, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var eYE_FKParameter = eYE_FK.HasValue ?
                new ObjectParameter("EYE_FK", eYE_FK) :
                new ObjectParameter("EYE_FK", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(int));
    
            var serviceActiveParameter = serviceActive.HasValue ?
                new ObjectParameter("ServiceActive", serviceActive) :
                new ObjectParameter("ServiceActive", typeof(bool));
    
            var serviceDueDateParameter = serviceDueDate.HasValue ?
                new ObjectParameter("ServiceDueDate", serviceDueDate) :
                new ObjectParameter("ServiceDueDate", typeof(System.DateTime));
    
            var serviceVisitedDateParameter = serviceVisitedDate.HasValue ?
                new ObjectParameter("ServiceVisitedDate", serviceVisitedDate) :
                new ObjectParameter("ServiceVisitedDate", typeof(System.DateTime));
    
            var serviceConsultantIDParameter = serviceConsultantID.HasValue ?
                new ObjectParameter("ServiceConsultantID", serviceConsultantID) :
                new ObjectParameter("ServiceConsultantID", typeof(int));
    
            var serviceConsultantParameter = serviceConsultant != null ?
                new ObjectParameter("ServiceConsultant", serviceConsultant) :
                new ObjectParameter("ServiceConsultant", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Service_Update", iDParameter, eYE_FKParameter, statusParameter, serviceTypeParameter, serviceActiveParameter, serviceDueDateParameter, serviceVisitedDateParameter, serviceConsultantIDParameter, serviceConsultantParameter, servicePriceParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_EYE_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> emailSendt, Nullable<System.DateTime> bottleActivationDate, Nullable<System.DateTime> bottleWarencyExpireDate, string firmwareVersion, string firmwareLanguage, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, string locationBuildingNo, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<System.DateTime> registerretCSI, string registerretAF, string note, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var emailSendtParameter = emailSendt.HasValue ?
                new ObjectParameter("EmailSendt", emailSendt) :
                new ObjectParameter("EmailSendt", typeof(System.DateTime));
    
            var bottleActivationDateParameter = bottleActivationDate.HasValue ?
                new ObjectParameter("BottleActivationDate", bottleActivationDate) :
                new ObjectParameter("BottleActivationDate", typeof(System.DateTime));
    
            var bottleWarencyExpireDateParameter = bottleWarencyExpireDate.HasValue ?
                new ObjectParameter("BottleWarencyExpireDate", bottleWarencyExpireDate) :
                new ObjectParameter("BottleWarencyExpireDate", typeof(System.DateTime));
    
            var firmwareVersionParameter = firmwareVersion != null ?
                new ObjectParameter("FirmwareVersion", firmwareVersion) :
                new ObjectParameter("FirmwareVersion", typeof(string));
    
            var firmwareLanguageParameter = firmwareLanguage != null ?
                new ObjectParameter("FirmwareLanguage", firmwareLanguage) :
                new ObjectParameter("FirmwareLanguage", typeof(string));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var locationBuildingNoParameter = locationBuildingNo != null ?
                new ObjectParameter("LocationBuildingNo", locationBuildingNo) :
                new ObjectParameter("LocationBuildingNo", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var registerretCSIParameter = registerretCSI.HasValue ?
                new ObjectParameter("RegisterretCSI", registerretCSI) :
                new ObjectParameter("RegisterretCSI", typeof(System.DateTime));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_EYE_Update", iDParameter, statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, emailSendtParameter, bottleActivationDateParameter, bottleWarencyExpireDateParameter, firmwareVersionParameter, firmwareLanguageParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, locationBuildingNoParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, registerretCSIParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_FirstAidBag_CountFABByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_FirstAidBag_CountFABByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_FirstAidBag_CountFirstAidBagByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_FirstAidBag_CountFirstAidBagByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_FirstAidBag_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_FirstAidBag_Delete", iDParameter);
        }
    
        public virtual int Co2Db_FirstAidBag_Insert(Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> decommissionDate, Nullable<System.DateTime> emailSendt, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, string locationBuildingNo, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<int> serviceDate, Nullable<System.DateTime> serviceDateEmail, Nullable<bool> visibleRescueinfo, string registerretAF, string note, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var decommissionDateParameter = decommissionDate.HasValue ?
                new ObjectParameter("DecommissionDate", decommissionDate) :
                new ObjectParameter("DecommissionDate", typeof(System.DateTime));
    
            var emailSendtParameter = emailSendt.HasValue ?
                new ObjectParameter("EmailSendt", emailSendt) :
                new ObjectParameter("EmailSendt", typeof(System.DateTime));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var locationBuildingNoParameter = locationBuildingNo != null ?
                new ObjectParameter("LocationBuildingNo", locationBuildingNo) :
                new ObjectParameter("LocationBuildingNo", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(int));
    
            var serviceDateEmailParameter = serviceDateEmail.HasValue ?
                new ObjectParameter("ServiceDateEmail", serviceDateEmail) :
                new ObjectParameter("ServiceDateEmail", typeof(System.DateTime));
    
            var visibleRescueinfoParameter = visibleRescueinfo.HasValue ?
                new ObjectParameter("VisibleRescueinfo", visibleRescueinfo) :
                new ObjectParameter("VisibleRescueinfo", typeof(bool));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_FirstAidBag_Insert", statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, decommissionDateParameter, emailSendtParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, locationBuildingNoParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, serviceDateParameter, serviceDateEmailParameter, visibleRescueinfoParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Search_Result> Co2Db_FirstAidBag_Search(string serialNo, string postnr, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Search_Result>("Co2Db_FirstAidBag_Search", serialNoParameter, postnrParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectAll_Result> Co2Db_FirstAidBag_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectAll_Result>("Co2Db_FirstAidBag_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectAllExpired_Result> Co2Db_FirstAidBag_SelectAllExpired(Nullable<int> companyID, Nullable<int> status, Nullable<int> expireTime, Nullable<System.DateTime> expireDate, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var expireTimeParameter = expireTime.HasValue ?
                new ObjectParameter("ExpireTime", expireTime) :
                new ObjectParameter("ExpireTime", typeof(int));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectAllExpired_Result>("Co2Db_FirstAidBag_SelectAllExpired", companyIDParameter, statusParameter, expireTimeParameter, expireDateParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectAllSoonExpired_Result> Co2Db_FirstAidBag_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectAllSoonExpired_Result>("Co2Db_FirstAidBag_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectByAfventer_Result> Co2Db_FirstAidBag_SelectByAfventer(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectByAfventer_Result>("Co2Db_FirstAidBag_SelectByAfventer", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectByBilagStatus_Result> Co2Db_FirstAidBag_SelectByBilagStatus(Nullable<int> companyID, Nullable<int> bilagStatus, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectByBilagStatus_Result>("Co2Db_FirstAidBag_SelectByBilagStatus", companyIDParameter, bilagStatusParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectByCompany_Result> Co2Db_FirstAidBag_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectByCompany_Result>("Co2Db_FirstAidBag_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectByConcernID_Result> Co2Db_FirstAidBag_SelectByConcernID(string concernID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var concernIDParameter = concernID != null ?
                new ObjectParameter("ConcernID", concernID) :
                new ObjectParameter("ConcernID", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectByConcernID_Result>("Co2Db_FirstAidBag_SelectByConcernID", concernIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectByGUID_Result> Co2Db_FirstAidBag_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectByGUID_Result>("Co2Db_FirstAidBag_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectBySerialNo_Result> Co2Db_FirstAidBag_SelectBySerialNo(string serialNo, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectBySerialNo_Result>("Co2Db_FirstAidBag_SelectBySerialNo", serialNoParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectConcernFAB_Result> Co2Db_FirstAidBag_SelectConcernFAB(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectConcernFAB_Result>("Co2Db_FirstAidBag_SelectConcernFAB", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectConcernFirstAidBag_Result> Co2Db_FirstAidBag_SelectConcernFirstAidBag(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectConcernFirstAidBag_Result>("Co2Db_FirstAidBag_SelectConcernFirstAidBag", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectID_Result> Co2Db_FirstAidBag_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectID_Result>("Co2Db_FirstAidBag_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_FirstAidBag_SelectIDByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_FirstAidBag_SelectIDByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_SelectOne_Result> Co2Db_FirstAidBag_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_SelectOne_Result>("Co2Db_FirstAidBag_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_FirstAidBag_Service_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_FirstAidBag_Service_Delete", iDParameter);
        }
    
        public virtual int Co2Db_FirstAidBag_Service_Insert(Nullable<int> fAB_FK, Nullable<int> status, Nullable<int> serviceType, Nullable<bool> serviceActive, Nullable<System.DateTime> serviceDueDate, Nullable<System.DateTime> serviceVisitedDate, Nullable<int> serviceConsultantID, string serviceConsultant, Nullable<decimal> servicePrice, Nullable<System.DateTime> serviceDeleveryDate, Nullable<System.DateTime> serviceExpireDate, Nullable<System.DateTime> serviceEmailSendt, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var fAB_FKParameter = fAB_FK.HasValue ?
                new ObjectParameter("FAB_FK", fAB_FK) :
                new ObjectParameter("FAB_FK", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(int));
    
            var serviceActiveParameter = serviceActive.HasValue ?
                new ObjectParameter("ServiceActive", serviceActive) :
                new ObjectParameter("ServiceActive", typeof(bool));
    
            var serviceDueDateParameter = serviceDueDate.HasValue ?
                new ObjectParameter("ServiceDueDate", serviceDueDate) :
                new ObjectParameter("ServiceDueDate", typeof(System.DateTime));
    
            var serviceVisitedDateParameter = serviceVisitedDate.HasValue ?
                new ObjectParameter("ServiceVisitedDate", serviceVisitedDate) :
                new ObjectParameter("ServiceVisitedDate", typeof(System.DateTime));
    
            var serviceConsultantIDParameter = serviceConsultantID.HasValue ?
                new ObjectParameter("ServiceConsultantID", serviceConsultantID) :
                new ObjectParameter("ServiceConsultantID", typeof(int));
    
            var serviceConsultantParameter = serviceConsultant != null ?
                new ObjectParameter("ServiceConsultant", serviceConsultant) :
                new ObjectParameter("ServiceConsultant", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var serviceDeleveryDateParameter = serviceDeleveryDate.HasValue ?
                new ObjectParameter("ServiceDeleveryDate", serviceDeleveryDate) :
                new ObjectParameter("ServiceDeleveryDate", typeof(System.DateTime));
    
            var serviceExpireDateParameter = serviceExpireDate.HasValue ?
                new ObjectParameter("ServiceExpireDate", serviceExpireDate) :
                new ObjectParameter("ServiceExpireDate", typeof(System.DateTime));
    
            var serviceEmailSendtParameter = serviceEmailSendt.HasValue ?
                new ObjectParameter("ServiceEmailSendt", serviceEmailSendt) :
                new ObjectParameter("ServiceEmailSendt", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_FirstAidBag_Service_Insert", fAB_FKParameter, statusParameter, serviceTypeParameter, serviceActiveParameter, serviceDueDateParameter, serviceVisitedDateParameter, serviceConsultantIDParameter, serviceConsultantParameter, servicePriceParameter, serviceDeleveryDateParameter, serviceExpireDateParameter, serviceEmailSendtParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectAll_Result> Co2Db_FirstAidBag_Service_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectAll_Result>("Co2Db_FirstAidBag_Service_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectAllExpiredEmail_Result> Co2Db_FirstAidBag_Service_SelectAllExpiredEmail(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectAllExpiredEmail_Result>("Co2Db_FirstAidBag_Service_SelectAllExpiredEmail", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectAllSoonExpired_Result> Co2Db_FirstAidBag_Service_SelectAllSoonExpired(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectAllSoonExpired_Result>("Co2Db_FirstAidBag_Service_SelectAllSoonExpired", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectByCompany_Result> Co2Db_FirstAidBag_Service_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectByCompany_Result>("Co2Db_FirstAidBag_Service_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectByFAB_Result> Co2Db_FirstAidBag_Service_SelectByFAB(Nullable<int> fAB_FK, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var fAB_FKParameter = fAB_FK.HasValue ?
                new ObjectParameter("FAB_FK", fAB_FK) :
                new ObjectParameter("FAB_FK", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectByFAB_Result>("Co2Db_FirstAidBag_Service_SelectByFAB", fAB_FKParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectByFirstAidBag_Result> Co2Db_FirstAidBag_Service_SelectByFirstAidBag(Nullable<int> fAB_FK, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var fAB_FKParameter = fAB_FK.HasValue ?
                new ObjectParameter("FAB_FK", fAB_FK) :
                new ObjectParameter("FAB_FK", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectByFirstAidBag_Result>("Co2Db_FirstAidBag_Service_SelectByFirstAidBag", fAB_FKParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectByGUID_Result> Co2Db_FirstAidBag_Service_SelectByGUID(Nullable<System.Guid> guid, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var guidParameter = guid.HasValue ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(System.Guid));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectByGUID_Result>("Co2Db_FirstAidBag_Service_SelectByGUID", guidParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectID_Result> Co2Db_FirstAidBag_Service_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectID_Result>("Co2Db_FirstAidBag_Service_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_FirstAidBag_Service_SelectOne_Result> Co2Db_FirstAidBag_Service_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_FirstAidBag_Service_SelectOne_Result>("Co2Db_FirstAidBag_Service_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_FirstAidBag_Service_Update(Nullable<int> iD, Nullable<int> fAB_FK, Nullable<int> status, Nullable<int> serviceType, Nullable<bool> serviceActive, Nullable<System.DateTime> serviceDueDate, Nullable<System.DateTime> serviceVisitedDate, Nullable<int> serviceConsultantID, string serviceConsultant, Nullable<decimal> servicePrice, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fAB_FKParameter = fAB_FK.HasValue ?
                new ObjectParameter("FAB_FK", fAB_FK) :
                new ObjectParameter("FAB_FK", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(int));
    
            var serviceActiveParameter = serviceActive.HasValue ?
                new ObjectParameter("ServiceActive", serviceActive) :
                new ObjectParameter("ServiceActive", typeof(bool));
    
            var serviceDueDateParameter = serviceDueDate.HasValue ?
                new ObjectParameter("ServiceDueDate", serviceDueDate) :
                new ObjectParameter("ServiceDueDate", typeof(System.DateTime));
    
            var serviceVisitedDateParameter = serviceVisitedDate.HasValue ?
                new ObjectParameter("ServiceVisitedDate", serviceVisitedDate) :
                new ObjectParameter("ServiceVisitedDate", typeof(System.DateTime));
    
            var serviceConsultantIDParameter = serviceConsultantID.HasValue ?
                new ObjectParameter("ServiceConsultantID", serviceConsultantID) :
                new ObjectParameter("ServiceConsultantID", typeof(int));
    
            var serviceConsultantParameter = serviceConsultant != null ?
                new ObjectParameter("ServiceConsultant", serviceConsultant) :
                new ObjectParameter("ServiceConsultant", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_FirstAidBag_Service_Update", iDParameter, fAB_FKParameter, statusParameter, serviceTypeParameter, serviceActiveParameter, serviceDueDateParameter, serviceVisitedDateParameter, serviceConsultantIDParameter, serviceConsultantParameter, servicePriceParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_FirstAidBag_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> companyID, Nullable<int> modelID, string serialNo, Nullable<System.DateTime> deleveryDate, Nullable<System.DateTime> warencyExpireDate, Nullable<System.DateTime> decommissionDate, Nullable<System.DateTime> emailSendt, string responsibleName, string responsiblePhone, string responsibleEmail, string locationAdresse, string locationPostnr, string locationBy, string locationState, Nullable<int> locationLandID, string location, string locationBuildingNo, Nullable<int> bilagStatus, Nullable<System.DateTime> bilagSendtDato, Nullable<System.DateTime> bilagModtagetDato, Nullable<int> serviceDate, Nullable<System.DateTime> serviceDateEmail, Nullable<bool> visibleRescueinfo, string registerretAF, string note, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var deleveryDateParameter = deleveryDate.HasValue ?
                new ObjectParameter("DeleveryDate", deleveryDate) :
                new ObjectParameter("DeleveryDate", typeof(System.DateTime));
    
            var warencyExpireDateParameter = warencyExpireDate.HasValue ?
                new ObjectParameter("WarencyExpireDate", warencyExpireDate) :
                new ObjectParameter("WarencyExpireDate", typeof(System.DateTime));
    
            var decommissionDateParameter = decommissionDate.HasValue ?
                new ObjectParameter("DecommissionDate", decommissionDate) :
                new ObjectParameter("DecommissionDate", typeof(System.DateTime));
    
            var emailSendtParameter = emailSendt.HasValue ?
                new ObjectParameter("EmailSendt", emailSendt) :
                new ObjectParameter("EmailSendt", typeof(System.DateTime));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsiblePhoneParameter = responsiblePhone != null ?
                new ObjectParameter("ResponsiblePhone", responsiblePhone) :
                new ObjectParameter("ResponsiblePhone", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var locationAdresseParameter = locationAdresse != null ?
                new ObjectParameter("LocationAdresse", locationAdresse) :
                new ObjectParameter("LocationAdresse", typeof(string));
    
            var locationPostnrParameter = locationPostnr != null ?
                new ObjectParameter("LocationPostnr", locationPostnr) :
                new ObjectParameter("LocationPostnr", typeof(string));
    
            var locationByParameter = locationBy != null ?
                new ObjectParameter("LocationBy", locationBy) :
                new ObjectParameter("LocationBy", typeof(string));
    
            var locationStateParameter = locationState != null ?
                new ObjectParameter("LocationState", locationState) :
                new ObjectParameter("LocationState", typeof(string));
    
            var locationLandIDParameter = locationLandID.HasValue ?
                new ObjectParameter("LocationLandID", locationLandID) :
                new ObjectParameter("LocationLandID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var locationBuildingNoParameter = locationBuildingNo != null ?
                new ObjectParameter("LocationBuildingNo", locationBuildingNo) :
                new ObjectParameter("LocationBuildingNo", typeof(string));
    
            var bilagStatusParameter = bilagStatus.HasValue ?
                new ObjectParameter("BilagStatus", bilagStatus) :
                new ObjectParameter("BilagStatus", typeof(int));
    
            var bilagSendtDatoParameter = bilagSendtDato.HasValue ?
                new ObjectParameter("BilagSendtDato", bilagSendtDato) :
                new ObjectParameter("BilagSendtDato", typeof(System.DateTime));
    
            var bilagModtagetDatoParameter = bilagModtagetDato.HasValue ?
                new ObjectParameter("BilagModtagetDato", bilagModtagetDato) :
                new ObjectParameter("BilagModtagetDato", typeof(System.DateTime));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(int));
    
            var serviceDateEmailParameter = serviceDateEmail.HasValue ?
                new ObjectParameter("ServiceDateEmail", serviceDateEmail) :
                new ObjectParameter("ServiceDateEmail", typeof(System.DateTime));
    
            var visibleRescueinfoParameter = visibleRescueinfo.HasValue ?
                new ObjectParameter("VisibleRescueinfo", visibleRescueinfo) :
                new ObjectParameter("VisibleRescueinfo", typeof(bool));
    
            var registerretAFParameter = registerretAF != null ?
                new ObjectParameter("RegisterretAF", registerretAF) :
                new ObjectParameter("RegisterretAF", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_FirstAidBag_Update", iDParameter, statusParameter, companyIDParameter, modelIDParameter, serialNoParameter, deleveryDateParameter, warencyExpireDateParameter, decommissionDateParameter, emailSendtParameter, responsibleNameParameter, responsiblePhoneParameter, responsibleEmailParameter, locationAdresseParameter, locationPostnrParameter, locationByParameter, locationStateParameter, locationLandIDParameter, locationParameter, locationBuildingNoParameter, bilagStatusParameter, bilagSendtDatoParameter, bilagModtagetDatoParameter, serviceDateParameter, serviceDateEmailParameter, visibleRescueinfoParameter, registerretAFParameter, noteParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Hospitalsforsikring_Delete(Nullable<int> hospitalsforsikringID)
        {
            var hospitalsforsikringIDParameter = hospitalsforsikringID.HasValue ?
                new ObjectParameter("HospitalsforsikringID", hospitalsforsikringID) :
                new ObjectParameter("HospitalsforsikringID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Hospitalsforsikring_Delete", hospitalsforsikringIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Hospitalsforsikring_GetCount(Nullable<int> medarbejderGruppeID)
        {
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Hospitalsforsikring_GetCount", medarbejderGruppeIDParameter);
        }
    
        public virtual int Co2Db_Hospitalsforsikring_Insert(Nullable<int> status, Nullable<int> medarbejderGruppeID, Nullable<int> leverandorID, Nullable<System.DateTime> etableringsdato, Nullable<int> forfaldsmaade, Nullable<int> hovedForfald, Nullable<int> praemieForhold, Nullable<int> praemieGruppe, Nullable<int> forsikringsdaekning, Nullable<bool> forsikringsdaekningStraks, Nullable<int> indmeldelseTidspunkt, Nullable<int> indmeldelsestidspunktEfter, Nullable<int> indmeldelsestidspunktSenestEfter, Nullable<int> omfattedeMedarbejdere, string omfattedeMedarbejdereAndet, Nullable<int> timetalsbegraensning, Nullable<int> timetalsbegraensningTimer, string leverandorAftaleNr, Nullable<int> risikobonus, string noter, Nullable<bool> informationssite, Nullable<bool> administrationssite, string rettetAf, string rettetIP, ObjectParameter hospitalsforsikringID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(int));
    
            var etableringsdatoParameter = etableringsdato.HasValue ?
                new ObjectParameter("Etableringsdato", etableringsdato) :
                new ObjectParameter("Etableringsdato", typeof(System.DateTime));
    
            var forfaldsmaadeParameter = forfaldsmaade.HasValue ?
                new ObjectParameter("Forfaldsmaade", forfaldsmaade) :
                new ObjectParameter("Forfaldsmaade", typeof(int));
    
            var hovedForfaldParameter = hovedForfald.HasValue ?
                new ObjectParameter("HovedForfald", hovedForfald) :
                new ObjectParameter("HovedForfald", typeof(int));
    
            var praemieForholdParameter = praemieForhold.HasValue ?
                new ObjectParameter("PraemieForhold", praemieForhold) :
                new ObjectParameter("PraemieForhold", typeof(int));
    
            var praemieGruppeParameter = praemieGruppe.HasValue ?
                new ObjectParameter("PraemieGruppe", praemieGruppe) :
                new ObjectParameter("PraemieGruppe", typeof(int));
    
            var forsikringsdaekningParameter = forsikringsdaekning.HasValue ?
                new ObjectParameter("Forsikringsdaekning", forsikringsdaekning) :
                new ObjectParameter("Forsikringsdaekning", typeof(int));
    
            var forsikringsdaekningStraksParameter = forsikringsdaekningStraks.HasValue ?
                new ObjectParameter("ForsikringsdaekningStraks", forsikringsdaekningStraks) :
                new ObjectParameter("ForsikringsdaekningStraks", typeof(bool));
    
            var indmeldelseTidspunktParameter = indmeldelseTidspunkt.HasValue ?
                new ObjectParameter("IndmeldelseTidspunkt", indmeldelseTidspunkt) :
                new ObjectParameter("IndmeldelseTidspunkt", typeof(int));
    
            var indmeldelsestidspunktEfterParameter = indmeldelsestidspunktEfter.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktEfter", indmeldelsestidspunktEfter) :
                new ObjectParameter("IndmeldelsestidspunktEfter", typeof(int));
    
            var indmeldelsestidspunktSenestEfterParameter = indmeldelsestidspunktSenestEfter.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktSenestEfter", indmeldelsestidspunktSenestEfter) :
                new ObjectParameter("IndmeldelsestidspunktSenestEfter", typeof(int));
    
            var omfattedeMedarbejdereParameter = omfattedeMedarbejdere.HasValue ?
                new ObjectParameter("OmfattedeMedarbejdere", omfattedeMedarbejdere) :
                new ObjectParameter("OmfattedeMedarbejdere", typeof(int));
    
            var omfattedeMedarbejdereAndetParameter = omfattedeMedarbejdereAndet != null ?
                new ObjectParameter("OmfattedeMedarbejdereAndet", omfattedeMedarbejdereAndet) :
                new ObjectParameter("OmfattedeMedarbejdereAndet", typeof(string));
    
            var timetalsbegraensningParameter = timetalsbegraensning.HasValue ?
                new ObjectParameter("Timetalsbegraensning", timetalsbegraensning) :
                new ObjectParameter("Timetalsbegraensning", typeof(int));
    
            var timetalsbegraensningTimerParameter = timetalsbegraensningTimer.HasValue ?
                new ObjectParameter("TimetalsbegraensningTimer", timetalsbegraensningTimer) :
                new ObjectParameter("TimetalsbegraensningTimer", typeof(int));
    
            var leverandorAftaleNrParameter = leverandorAftaleNr != null ?
                new ObjectParameter("LeverandorAftaleNr", leverandorAftaleNr) :
                new ObjectParameter("LeverandorAftaleNr", typeof(string));
    
            var risikobonusParameter = risikobonus.HasValue ?
                new ObjectParameter("Risikobonus", risikobonus) :
                new ObjectParameter("Risikobonus", typeof(int));
    
            var noterParameter = noter != null ?
                new ObjectParameter("Noter", noter) :
                new ObjectParameter("Noter", typeof(string));
    
            var informationssiteParameter = informationssite.HasValue ?
                new ObjectParameter("Informationssite", informationssite) :
                new ObjectParameter("Informationssite", typeof(bool));
    
            var administrationssiteParameter = administrationssite.HasValue ?
                new ObjectParameter("Administrationssite", administrationssite) :
                new ObjectParameter("Administrationssite", typeof(bool));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Hospitalsforsikring_Insert", statusParameter, medarbejderGruppeIDParameter, leverandorIDParameter, etableringsdatoParameter, forfaldsmaadeParameter, hovedForfaldParameter, praemieForholdParameter, praemieGruppeParameter, forsikringsdaekningParameter, forsikringsdaekningStraksParameter, indmeldelseTidspunktParameter, indmeldelsestidspunktEfterParameter, indmeldelsestidspunktSenestEfterParameter, omfattedeMedarbejdereParameter, omfattedeMedarbejdereAndetParameter, timetalsbegraensningParameter, timetalsbegraensningTimerParameter, leverandorAftaleNrParameter, risikobonusParameter, noterParameter, informationssiteParameter, administrationssiteParameter, rettetAfParameter, rettetIPParameter, hospitalsforsikringID);
        }
    
        public virtual ObjectResult<Co2Db_Hospitalsforsikring_SelectAll_Result> Co2Db_Hospitalsforsikring_SelectAll(Nullable<int> medarbejderGruppeID)
        {
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Hospitalsforsikring_SelectAll_Result>("Co2Db_Hospitalsforsikring_SelectAll", medarbejderGruppeIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Hospitalsforsikring_SelectByMedarbGrp_Result> Co2Db_Hospitalsforsikring_SelectByMedarbGrp(Nullable<int> medarbejderGruppeID)
        {
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Hospitalsforsikring_SelectByMedarbGrp_Result>("Co2Db_Hospitalsforsikring_SelectByMedarbGrp", medarbejderGruppeIDParameter);
        }
    
        public virtual int Co2Db_Hospitalsforsikring_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Hospitalsforsikring_SelectBySearch", searchParameter);
        }
    
        public virtual int Co2Db_Hospitalsforsikring_SelectByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Hospitalsforsikring_SelectByStatus", statusParameter);
        }
    
        public virtual int Co2Db_Hospitalsforsikring_SelectByStatusCompany(Nullable<int> status, Nullable<int> medarbejderGruppeID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Hospitalsforsikring_SelectByStatusCompany", statusParameter, medarbejderGruppeIDParameter);
        }
    
        public virtual int Co2Db_Hospitalsforsikring_SelectName(Nullable<int> hospitalsforsikringID)
        {
            var hospitalsforsikringIDParameter = hospitalsforsikringID.HasValue ?
                new ObjectParameter("HospitalsforsikringID", hospitalsforsikringID) :
                new ObjectParameter("HospitalsforsikringID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Hospitalsforsikring_SelectName", hospitalsforsikringIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Hospitalsforsikring_SelectOne_Result> Co2Db_Hospitalsforsikring_SelectOne(Nullable<int> hospitalsforsikringID, Nullable<int> medarbejderGruppeID)
        {
            var hospitalsforsikringIDParameter = hospitalsforsikringID.HasValue ?
                new ObjectParameter("HospitalsforsikringID", hospitalsforsikringID) :
                new ObjectParameter("HospitalsforsikringID", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Hospitalsforsikring_SelectOne_Result>("Co2Db_Hospitalsforsikring_SelectOne", hospitalsforsikringIDParameter, medarbejderGruppeIDParameter);
        }
    
        public virtual int Co2Db_Hospitalsforsikring_Update(Nullable<int> hospitalsforsikringID, Nullable<int> status, Nullable<int> medarbejderGruppeID, Nullable<int> leverandorID, Nullable<System.DateTime> etableringsdato, Nullable<int> forfaldsmaade, Nullable<int> hovedForfald, Nullable<int> praemieForhold, Nullable<int> praemieGruppe, Nullable<int> forsikringsdaekning, Nullable<bool> forsikringsdaekningStraks, Nullable<int> indmeldelseTidspunkt, Nullable<int> indmeldelsestidspunktEfter, Nullable<int> indmeldelsestidspunktSenestEfter, Nullable<int> omfattedeMedarbejdere, string omfattedeMedarbejdereAndet, Nullable<int> timetalsbegraensning, Nullable<int> timetalsbegraensningTimer, string leverandorAftaleNr, Nullable<int> risikobonus, string noter, Nullable<bool> informationssite, Nullable<bool> administrationssite, string rettetAf, string rettetIP)
        {
            var hospitalsforsikringIDParameter = hospitalsforsikringID.HasValue ?
                new ObjectParameter("HospitalsforsikringID", hospitalsforsikringID) :
                new ObjectParameter("HospitalsforsikringID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(int));
    
            var etableringsdatoParameter = etableringsdato.HasValue ?
                new ObjectParameter("Etableringsdato", etableringsdato) :
                new ObjectParameter("Etableringsdato", typeof(System.DateTime));
    
            var forfaldsmaadeParameter = forfaldsmaade.HasValue ?
                new ObjectParameter("Forfaldsmaade", forfaldsmaade) :
                new ObjectParameter("Forfaldsmaade", typeof(int));
    
            var hovedForfaldParameter = hovedForfald.HasValue ?
                new ObjectParameter("HovedForfald", hovedForfald) :
                new ObjectParameter("HovedForfald", typeof(int));
    
            var praemieForholdParameter = praemieForhold.HasValue ?
                new ObjectParameter("PraemieForhold", praemieForhold) :
                new ObjectParameter("PraemieForhold", typeof(int));
    
            var praemieGruppeParameter = praemieGruppe.HasValue ?
                new ObjectParameter("PraemieGruppe", praemieGruppe) :
                new ObjectParameter("PraemieGruppe", typeof(int));
    
            var forsikringsdaekningParameter = forsikringsdaekning.HasValue ?
                new ObjectParameter("Forsikringsdaekning", forsikringsdaekning) :
                new ObjectParameter("Forsikringsdaekning", typeof(int));
    
            var forsikringsdaekningStraksParameter = forsikringsdaekningStraks.HasValue ?
                new ObjectParameter("ForsikringsdaekningStraks", forsikringsdaekningStraks) :
                new ObjectParameter("ForsikringsdaekningStraks", typeof(bool));
    
            var indmeldelseTidspunktParameter = indmeldelseTidspunkt.HasValue ?
                new ObjectParameter("IndmeldelseTidspunkt", indmeldelseTidspunkt) :
                new ObjectParameter("IndmeldelseTidspunkt", typeof(int));
    
            var indmeldelsestidspunktEfterParameter = indmeldelsestidspunktEfter.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktEfter", indmeldelsestidspunktEfter) :
                new ObjectParameter("IndmeldelsestidspunktEfter", typeof(int));
    
            var indmeldelsestidspunktSenestEfterParameter = indmeldelsestidspunktSenestEfter.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktSenestEfter", indmeldelsestidspunktSenestEfter) :
                new ObjectParameter("IndmeldelsestidspunktSenestEfter", typeof(int));
    
            var omfattedeMedarbejdereParameter = omfattedeMedarbejdere.HasValue ?
                new ObjectParameter("OmfattedeMedarbejdere", omfattedeMedarbejdere) :
                new ObjectParameter("OmfattedeMedarbejdere", typeof(int));
    
            var omfattedeMedarbejdereAndetParameter = omfattedeMedarbejdereAndet != null ?
                new ObjectParameter("OmfattedeMedarbejdereAndet", omfattedeMedarbejdereAndet) :
                new ObjectParameter("OmfattedeMedarbejdereAndet", typeof(string));
    
            var timetalsbegraensningParameter = timetalsbegraensning.HasValue ?
                new ObjectParameter("Timetalsbegraensning", timetalsbegraensning) :
                new ObjectParameter("Timetalsbegraensning", typeof(int));
    
            var timetalsbegraensningTimerParameter = timetalsbegraensningTimer.HasValue ?
                new ObjectParameter("TimetalsbegraensningTimer", timetalsbegraensningTimer) :
                new ObjectParameter("TimetalsbegraensningTimer", typeof(int));
    
            var leverandorAftaleNrParameter = leverandorAftaleNr != null ?
                new ObjectParameter("LeverandorAftaleNr", leverandorAftaleNr) :
                new ObjectParameter("LeverandorAftaleNr", typeof(string));
    
            var risikobonusParameter = risikobonus.HasValue ?
                new ObjectParameter("Risikobonus", risikobonus) :
                new ObjectParameter("Risikobonus", typeof(int));
    
            var noterParameter = noter != null ?
                new ObjectParameter("Noter", noter) :
                new ObjectParameter("Noter", typeof(string));
    
            var informationssiteParameter = informationssite.HasValue ?
                new ObjectParameter("Informationssite", informationssite) :
                new ObjectParameter("Informationssite", typeof(bool));
    
            var administrationssiteParameter = administrationssite.HasValue ?
                new ObjectParameter("Administrationssite", administrationssite) :
                new ObjectParameter("Administrationssite", typeof(bool));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Hospitalsforsikring_Update", hospitalsforsikringIDParameter, statusParameter, medarbejderGruppeIDParameter, leverandorIDParameter, etableringsdatoParameter, forfaldsmaadeParameter, hovedForfaldParameter, praemieForholdParameter, praemieGruppeParameter, forsikringsdaekningParameter, forsikringsdaekningStraksParameter, indmeldelseTidspunktParameter, indmeldelsestidspunktEfterParameter, indmeldelsestidspunktSenestEfterParameter, omfattedeMedarbejdereParameter, omfattedeMedarbejdereAndetParameter, timetalsbegraensningParameter, timetalsbegraensningTimerParameter, leverandorAftaleNrParameter, risikobonusParameter, noterParameter, informationssiteParameter, administrationssiteParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_HtmlPageContent_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_HtmlPageContent_Delete", iDParameter);
        }
    
        public virtual int Co2Db_HtmlPageContent_Insert(Nullable<bool> isAktiv, Nullable<int> pageType, Nullable<int> localCultureID, string alias, string title, Nullable<bool> showTitle, string subTitle, string description, string keyWords, string content, Nullable<System.DateTime> publishDate, Nullable<System.DateTime> expireDate, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var isAktivParameter = isAktiv.HasValue ?
                new ObjectParameter("IsAktiv", isAktiv) :
                new ObjectParameter("IsAktiv", typeof(bool));
    
            var pageTypeParameter = pageType.HasValue ?
                new ObjectParameter("PageType", pageType) :
                new ObjectParameter("PageType", typeof(int));
    
            var localCultureIDParameter = localCultureID.HasValue ?
                new ObjectParameter("LocalCultureID", localCultureID) :
                new ObjectParameter("LocalCultureID", typeof(int));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var showTitleParameter = showTitle.HasValue ?
                new ObjectParameter("ShowTitle", showTitle) :
                new ObjectParameter("ShowTitle", typeof(bool));
    
            var subTitleParameter = subTitle != null ?
                new ObjectParameter("SubTitle", subTitle) :
                new ObjectParameter("SubTitle", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_HtmlPageContent_Insert", isAktivParameter, pageTypeParameter, localCultureIDParameter, aliasParameter, titleParameter, showTitleParameter, subTitleParameter, descriptionParameter, keyWordsParameter, contentParameter, publishDateParameter, expireDateParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_HtmlPageContent_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_HtmlPageContent_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_HtmlPageContent_SelectAll_Result> Co2Db_HtmlPageContent_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_HtmlPageContent_SelectAll_Result>("Co2Db_HtmlPageContent_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_HtmlPageContent_SelectByAlias_Result> Co2Db_HtmlPageContent_SelectByAlias(string alias)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_HtmlPageContent_SelectByAlias_Result>("Co2Db_HtmlPageContent_SelectByAlias", aliasParameter);
        }
    
        public virtual ObjectResult<Co2Db_HtmlPageContent_SelectByTitle_Result> Co2Db_HtmlPageContent_SelectByTitle(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_HtmlPageContent_SelectByTitle_Result>("Co2Db_HtmlPageContent_SelectByTitle", titleParameter);
        }
    
        public virtual ObjectResult<Co2Db_HtmlPageContent_SelectID_Result> Co2Db_HtmlPageContent_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_HtmlPageContent_SelectID_Result>("Co2Db_HtmlPageContent_SelectID", iDParameter);
        }
    
        public virtual int Co2Db_HtmlPageContent_Update(Nullable<int> iD, Nullable<bool> isAktiv, Nullable<int> pageType, Nullable<int> localCultureID, string alias, string title, Nullable<bool> showTitle, string subTitle, string description, string keyWords, string content, Nullable<System.DateTime> publishDate, Nullable<System.DateTime> expireDate, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAktivParameter = isAktiv.HasValue ?
                new ObjectParameter("IsAktiv", isAktiv) :
                new ObjectParameter("IsAktiv", typeof(bool));
    
            var pageTypeParameter = pageType.HasValue ?
                new ObjectParameter("PageType", pageType) :
                new ObjectParameter("PageType", typeof(int));
    
            var localCultureIDParameter = localCultureID.HasValue ?
                new ObjectParameter("LocalCultureID", localCultureID) :
                new ObjectParameter("LocalCultureID", typeof(int));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var showTitleParameter = showTitle.HasValue ?
                new ObjectParameter("ShowTitle", showTitle) :
                new ObjectParameter("ShowTitle", typeof(bool));
    
            var subTitleParameter = subTitle != null ?
                new ObjectParameter("SubTitle", subTitle) :
                new ObjectParameter("SubTitle", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_HtmlPageContent_Update", iDParameter, isAktivParameter, pageTypeParameter, localCultureIDParameter, aliasParameter, titleParameter, showTitleParameter, subTitleParameter, descriptionParameter, keyWordsParameter, contentParameter, publishDateParameter, expireDateParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Incasso_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Incasso_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Incasso_Insert(Nullable<int> status, Nullable<int> companyID, Nullable<int> invoiceID, Nullable<System.DateTime> incassoDate, string notes, Nullable<double> invoiceTotal, Nullable<double> renterOpgjortAfKreditor, Nullable<double> gebyrOpgjortAfKreditor, Nullable<double> renteTilskrevetFraPaymentDatetilDD, Nullable<double> gebyrForDenneRykkerskrivelse, Nullable<double> incassoTotal, Nullable<double> incassoSalaer, Nullable<double> oversendelsesgebyr, Nullable<bool> paid, Nullable<System.DateTime> paidDate, string contactEMail, string contactName, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var incassoDateParameter = incassoDate.HasValue ?
                new ObjectParameter("IncassoDate", incassoDate) :
                new ObjectParameter("IncassoDate", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var invoiceTotalParameter = invoiceTotal.HasValue ?
                new ObjectParameter("InvoiceTotal", invoiceTotal) :
                new ObjectParameter("InvoiceTotal", typeof(double));
    
            var renterOpgjortAfKreditorParameter = renterOpgjortAfKreditor.HasValue ?
                new ObjectParameter("RenterOpgjortAfKreditor", renterOpgjortAfKreditor) :
                new ObjectParameter("RenterOpgjortAfKreditor", typeof(double));
    
            var gebyrOpgjortAfKreditorParameter = gebyrOpgjortAfKreditor.HasValue ?
                new ObjectParameter("GebyrOpgjortAfKreditor", gebyrOpgjortAfKreditor) :
                new ObjectParameter("GebyrOpgjortAfKreditor", typeof(double));
    
            var renteTilskrevetFraPaymentDatetilDDParameter = renteTilskrevetFraPaymentDatetilDD.HasValue ?
                new ObjectParameter("RenteTilskrevetFraPaymentDatetilDD", renteTilskrevetFraPaymentDatetilDD) :
                new ObjectParameter("RenteTilskrevetFraPaymentDatetilDD", typeof(double));
    
            var gebyrForDenneRykkerskrivelseParameter = gebyrForDenneRykkerskrivelse.HasValue ?
                new ObjectParameter("GebyrForDenneRykkerskrivelse", gebyrForDenneRykkerskrivelse) :
                new ObjectParameter("GebyrForDenneRykkerskrivelse", typeof(double));
    
            var incassoTotalParameter = incassoTotal.HasValue ?
                new ObjectParameter("IncassoTotal", incassoTotal) :
                new ObjectParameter("IncassoTotal", typeof(double));
    
            var incassoSalaerParameter = incassoSalaer.HasValue ?
                new ObjectParameter("IncassoSalaer", incassoSalaer) :
                new ObjectParameter("IncassoSalaer", typeof(double));
    
            var oversendelsesgebyrParameter = oversendelsesgebyr.HasValue ?
                new ObjectParameter("Oversendelsesgebyr", oversendelsesgebyr) :
                new ObjectParameter("Oversendelsesgebyr", typeof(double));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("Paid", paid) :
                new ObjectParameter("Paid", typeof(bool));
    
            var paidDateParameter = paidDate.HasValue ?
                new ObjectParameter("PaidDate", paidDate) :
                new ObjectParameter("PaidDate", typeof(System.DateTime));
    
            var contactEMailParameter = contactEMail != null ?
                new ObjectParameter("ContactEMail", contactEMail) :
                new ObjectParameter("ContactEMail", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Incasso_Insert", statusParameter, companyIDParameter, invoiceIDParameter, incassoDateParameter, notesParameter, invoiceTotalParameter, renterOpgjortAfKreditorParameter, gebyrOpgjortAfKreditorParameter, renteTilskrevetFraPaymentDatetilDDParameter, gebyrForDenneRykkerskrivelseParameter, incassoTotalParameter, incassoSalaerParameter, oversendelsesgebyrParameter, paidParameter, paidDateParameter, contactEMailParameter, contactNameParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_Incasso_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Incasso_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Incasso_SelectAll_Result> Co2Db_Incasso_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Incasso_SelectAll_Result>("Co2Db_Incasso_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_Incasso_SelectByStatusCompany_Result> Co2Db_Incasso_SelectByStatusCompany(Nullable<int> status, Nullable<int> companyID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Incasso_SelectByStatusCompany_Result>("Co2Db_Incasso_SelectByStatusCompany", statusParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Incasso_SelectID_Result> Co2Db_Incasso_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Incasso_SelectID_Result>("Co2Db_Incasso_SelectID", iDParameter);
        }
    
        public virtual int Co2Db_Incasso_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> companyID, Nullable<int> invoiceID, Nullable<System.DateTime> incassoDate, string notes, Nullable<double> invoiceTotal, Nullable<double> renterOpgjortAfKreditor, Nullable<double> gebyrOpgjortAfKreditor, Nullable<double> renteTilskrevetFraPaymentDatetilDD, Nullable<double> gebyrForDenneRykkerskrivelse, Nullable<double> incassoTotal, Nullable<double> incassoSalaer, Nullable<double> oversendelsesgebyr, Nullable<bool> paid, Nullable<System.DateTime> paidDate, string contactEMail, string contactName, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var incassoDateParameter = incassoDate.HasValue ?
                new ObjectParameter("IncassoDate", incassoDate) :
                new ObjectParameter("IncassoDate", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var invoiceTotalParameter = invoiceTotal.HasValue ?
                new ObjectParameter("InvoiceTotal", invoiceTotal) :
                new ObjectParameter("InvoiceTotal", typeof(double));
    
            var renterOpgjortAfKreditorParameter = renterOpgjortAfKreditor.HasValue ?
                new ObjectParameter("RenterOpgjortAfKreditor", renterOpgjortAfKreditor) :
                new ObjectParameter("RenterOpgjortAfKreditor", typeof(double));
    
            var gebyrOpgjortAfKreditorParameter = gebyrOpgjortAfKreditor.HasValue ?
                new ObjectParameter("GebyrOpgjortAfKreditor", gebyrOpgjortAfKreditor) :
                new ObjectParameter("GebyrOpgjortAfKreditor", typeof(double));
    
            var renteTilskrevetFraPaymentDatetilDDParameter = renteTilskrevetFraPaymentDatetilDD.HasValue ?
                new ObjectParameter("RenteTilskrevetFraPaymentDatetilDD", renteTilskrevetFraPaymentDatetilDD) :
                new ObjectParameter("RenteTilskrevetFraPaymentDatetilDD", typeof(double));
    
            var gebyrForDenneRykkerskrivelseParameter = gebyrForDenneRykkerskrivelse.HasValue ?
                new ObjectParameter("GebyrForDenneRykkerskrivelse", gebyrForDenneRykkerskrivelse) :
                new ObjectParameter("GebyrForDenneRykkerskrivelse", typeof(double));
    
            var incassoTotalParameter = incassoTotal.HasValue ?
                new ObjectParameter("IncassoTotal", incassoTotal) :
                new ObjectParameter("IncassoTotal", typeof(double));
    
            var incassoSalaerParameter = incassoSalaer.HasValue ?
                new ObjectParameter("IncassoSalaer", incassoSalaer) :
                new ObjectParameter("IncassoSalaer", typeof(double));
    
            var oversendelsesgebyrParameter = oversendelsesgebyr.HasValue ?
                new ObjectParameter("Oversendelsesgebyr", oversendelsesgebyr) :
                new ObjectParameter("Oversendelsesgebyr", typeof(double));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("Paid", paid) :
                new ObjectParameter("Paid", typeof(bool));
    
            var paidDateParameter = paidDate.HasValue ?
                new ObjectParameter("PaidDate", paidDate) :
                new ObjectParameter("PaidDate", typeof(System.DateTime));
    
            var contactEMailParameter = contactEMail != null ?
                new ObjectParameter("ContactEMail", contactEMail) :
                new ObjectParameter("ContactEMail", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Incasso_Update", iDParameter, statusParameter, companyIDParameter, invoiceIDParameter, incassoDateParameter, notesParameter, invoiceTotalParameter, renterOpgjortAfKreditorParameter, gebyrOpgjortAfKreditorParameter, renteTilskrevetFraPaymentDatetilDDParameter, gebyrForDenneRykkerskrivelseParameter, incassoTotalParameter, incassoSalaerParameter, oversendelsesgebyrParameter, paidParameter, paidDateParameter, contactEMailParameter, contactNameParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_InfositeContent_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_InfositeContent_Delete", iDParameter);
        }
    
        public virtual int Co2Db_InfositeContent_Insert(Nullable<bool> aktiv, Nullable<int> page_FK, Nullable<int> pagePos, Nullable<int> container_ID, string title, Nullable<int> tekstType, string tekst, Nullable<System.DateTime> openDate, Nullable<System.DateTime> expireDate, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var page_FKParameter = page_FK.HasValue ?
                new ObjectParameter("Page_FK", page_FK) :
                new ObjectParameter("Page_FK", typeof(int));
    
            var pagePosParameter = pagePos.HasValue ?
                new ObjectParameter("PagePos", pagePos) :
                new ObjectParameter("PagePos", typeof(int));
    
            var container_IDParameter = container_ID.HasValue ?
                new ObjectParameter("Container_ID", container_ID) :
                new ObjectParameter("Container_ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var tekstTypeParameter = tekstType.HasValue ?
                new ObjectParameter("TekstType", tekstType) :
                new ObjectParameter("TekstType", typeof(int));
    
            var tekstParameter = tekst != null ?
                new ObjectParameter("Tekst", tekst) :
                new ObjectParameter("Tekst", typeof(string));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_InfositeContent_Insert", aktivParameter, page_FKParameter, pagePosParameter, container_IDParameter, titleParameter, tekstTypeParameter, tekstParameter, openDateParameter, expireDateParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_InfositeContent_SelectOne_Result> Co2Db_InfositeContent_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositeContent_SelectOne_Result>("Co2Db_InfositeContent_SelectOne", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_InfositeContent_SelectPagePos_Result> Co2Db_InfositeContent_SelectPagePos(Nullable<int> page_FK, Nullable<int> pagePos)
        {
            var page_FKParameter = page_FK.HasValue ?
                new ObjectParameter("Page_FK", page_FK) :
                new ObjectParameter("Page_FK", typeof(int));
    
            var pagePosParameter = pagePos.HasValue ?
                new ObjectParameter("PagePos", pagePos) :
                new ObjectParameter("PagePos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositeContent_SelectPagePos_Result>("Co2Db_InfositeContent_SelectPagePos", page_FKParameter, pagePosParameter);
        }
    
        public virtual int Co2Db_InfositeContent_Update(Nullable<int> iD, Nullable<bool> aktiv, Nullable<int> page_FK, Nullable<int> pagePos, Nullable<int> container_ID, string title, Nullable<int> tekstType, string tekst, Nullable<System.DateTime> openDate, Nullable<System.DateTime> expireDate, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var page_FKParameter = page_FK.HasValue ?
                new ObjectParameter("Page_FK", page_FK) :
                new ObjectParameter("Page_FK", typeof(int));
    
            var pagePosParameter = pagePos.HasValue ?
                new ObjectParameter("PagePos", pagePos) :
                new ObjectParameter("PagePos", typeof(int));
    
            var container_IDParameter = container_ID.HasValue ?
                new ObjectParameter("Container_ID", container_ID) :
                new ObjectParameter("Container_ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var tekstTypeParameter = tekstType.HasValue ?
                new ObjectParameter("TekstType", tekstType) :
                new ObjectParameter("TekstType", typeof(int));
    
            var tekstParameter = tekst != null ?
                new ObjectParameter("Tekst", tekst) :
                new ObjectParameter("Tekst", typeof(string));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_InfositeContent_Update", iDParameter, aktivParameter, page_FKParameter, pagePosParameter, container_IDParameter, titleParameter, tekstTypeParameter, tekstParameter, openDateParameter, expireDateParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_InfositePages_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_InfositePages_Delete", iDParameter);
        }
    
        public virtual int Co2Db_InfositePages_Insert(Nullable<bool> aktiv, Nullable<int> site_FK, Nullable<int> parent_ID, Nullable<bool> includeInMenu, Nullable<bool> isDeleted, Nullable<bool> isDisabled, Nullable<bool> forside, string pageName, string pageTitle, string description, string keywords, Nullable<int> template_ID, Nullable<int> category_ID, Nullable<int> linkType_ID, string linkUrl, Nullable<int> linkPage_ID, string linkTarget, Nullable<System.DateTime> openDate, Nullable<System.DateTime> expireDate, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var site_FKParameter = site_FK.HasValue ?
                new ObjectParameter("Site_FK", site_FK) :
                new ObjectParameter("Site_FK", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var includeInMenuParameter = includeInMenu.HasValue ?
                new ObjectParameter("IncludeInMenu", includeInMenu) :
                new ObjectParameter("IncludeInMenu", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var isDisabledParameter = isDisabled.HasValue ?
                new ObjectParameter("IsDisabled", isDisabled) :
                new ObjectParameter("IsDisabled", typeof(bool));
    
            var forsideParameter = forside.HasValue ?
                new ObjectParameter("Forside", forside) :
                new ObjectParameter("Forside", typeof(bool));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var pageTitleParameter = pageTitle != null ?
                new ObjectParameter("PageTitle", pageTitle) :
                new ObjectParameter("PageTitle", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var template_IDParameter = template_ID.HasValue ?
                new ObjectParameter("Template_ID", template_ID) :
                new ObjectParameter("Template_ID", typeof(int));
    
            var category_IDParameter = category_ID.HasValue ?
                new ObjectParameter("Category_ID", category_ID) :
                new ObjectParameter("Category_ID", typeof(int));
    
            var linkType_IDParameter = linkType_ID.HasValue ?
                new ObjectParameter("LinkType_ID", linkType_ID) :
                new ObjectParameter("LinkType_ID", typeof(int));
    
            var linkUrlParameter = linkUrl != null ?
                new ObjectParameter("LinkUrl", linkUrl) :
                new ObjectParameter("LinkUrl", typeof(string));
    
            var linkPage_IDParameter = linkPage_ID.HasValue ?
                new ObjectParameter("LinkPage_ID", linkPage_ID) :
                new ObjectParameter("LinkPage_ID", typeof(int));
    
            var linkTargetParameter = linkTarget != null ?
                new ObjectParameter("LinkTarget", linkTarget) :
                new ObjectParameter("LinkTarget", typeof(string));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_InfositePages_Insert", aktivParameter, site_FKParameter, parent_IDParameter, includeInMenuParameter, isDeletedParameter, isDisabledParameter, forsideParameter, pageNameParameter, pageTitleParameter, descriptionParameter, keywordsParameter, template_IDParameter, category_IDParameter, linkType_IDParameter, linkUrlParameter, linkPage_IDParameter, linkTargetParameter, openDateParameter, expireDateParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_InfositePages_ListPages_Result> Co2Db_InfositePages_ListPages(Nullable<int> parent_ID, Nullable<int> site_FK, Nullable<int> topPage, Nullable<int> selfID)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var site_FKParameter = site_FK.HasValue ?
                new ObjectParameter("Site_FK", site_FK) :
                new ObjectParameter("Site_FK", typeof(int));
    
            var topPageParameter = topPage.HasValue ?
                new ObjectParameter("TopPage", topPage) :
                new ObjectParameter("TopPage", typeof(int));
    
            var selfIDParameter = selfID.HasValue ?
                new ObjectParameter("SelfID", selfID) :
                new ObjectParameter("SelfID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositePages_ListPages_Result>("Co2Db_InfositePages_ListPages", parent_IDParameter, site_FKParameter, topPageParameter, selfIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_InfositePages_MoveBottom_Result> Co2Db_InfositePages_MoveBottom(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositePages_MoveBottom_Result>("Co2Db_InfositePages_MoveBottom", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_InfositePages_MoveDown_Result> Co2Db_InfositePages_MoveDown(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositePages_MoveDown_Result>("Co2Db_InfositePages_MoveDown", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_InfositePages_MoveLeft_Result> Co2Db_InfositePages_MoveLeft(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositePages_MoveLeft_Result>("Co2Db_InfositePages_MoveLeft", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_InfositePages_MoveRight_Result> Co2Db_InfositePages_MoveRight(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositePages_MoveRight_Result>("Co2Db_InfositePages_MoveRight", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_InfositePages_MoveUp_Result> Co2Db_InfositePages_MoveUp(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositePages_MoveUp_Result>("Co2Db_InfositePages_MoveUp", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_InfositePages_SelectOne_Result> Co2Db_InfositePages_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_InfositePages_SelectOne_Result>("Co2Db_InfositePages_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_InfositePages_Update(Nullable<int> iD, Nullable<bool> aktiv, Nullable<int> site_FK, Nullable<int> parent_ID, Nullable<bool> includeInMenu, Nullable<bool> isDeleted, Nullable<bool> isDisabled, Nullable<bool> forside, string pageName, string pageTitle, string description, string keywords, Nullable<int> template_ID, Nullable<int> category_ID, Nullable<int> linkType_ID, string linkUrl, Nullable<int> linkPage_ID, string linkTarget, Nullable<System.DateTime> openDate, Nullable<System.DateTime> expireDate, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var site_FKParameter = site_FK.HasValue ?
                new ObjectParameter("Site_FK", site_FK) :
                new ObjectParameter("Site_FK", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var includeInMenuParameter = includeInMenu.HasValue ?
                new ObjectParameter("IncludeInMenu", includeInMenu) :
                new ObjectParameter("IncludeInMenu", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var isDisabledParameter = isDisabled.HasValue ?
                new ObjectParameter("IsDisabled", isDisabled) :
                new ObjectParameter("IsDisabled", typeof(bool));
    
            var forsideParameter = forside.HasValue ?
                new ObjectParameter("Forside", forside) :
                new ObjectParameter("Forside", typeof(bool));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var pageTitleParameter = pageTitle != null ?
                new ObjectParameter("PageTitle", pageTitle) :
                new ObjectParameter("PageTitle", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var template_IDParameter = template_ID.HasValue ?
                new ObjectParameter("Template_ID", template_ID) :
                new ObjectParameter("Template_ID", typeof(int));
    
            var category_IDParameter = category_ID.HasValue ?
                new ObjectParameter("Category_ID", category_ID) :
                new ObjectParameter("Category_ID", typeof(int));
    
            var linkType_IDParameter = linkType_ID.HasValue ?
                new ObjectParameter("LinkType_ID", linkType_ID) :
                new ObjectParameter("LinkType_ID", typeof(int));
    
            var linkUrlParameter = linkUrl != null ?
                new ObjectParameter("LinkUrl", linkUrl) :
                new ObjectParameter("LinkUrl", typeof(string));
    
            var linkPage_IDParameter = linkPage_ID.HasValue ?
                new ObjectParameter("LinkPage_ID", linkPage_ID) :
                new ObjectParameter("LinkPage_ID", typeof(int));
    
            var linkTargetParameter = linkTarget != null ?
                new ObjectParameter("LinkTarget", linkTarget) :
                new ObjectParameter("LinkTarget", typeof(string));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_InfositePages_Update", iDParameter, aktivParameter, site_FKParameter, parent_IDParameter, includeInMenuParameter, isDeletedParameter, isDisabledParameter, forsideParameter, pageNameParameter, pageTitleParameter, descriptionParameter, keywordsParameter, template_IDParameter, category_IDParameter, linkType_IDParameter, linkUrlParameter, linkPage_IDParameter, linkTargetParameter, openDateParameter, expireDateParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Invoice_Head_Delete(Nullable<int> iD, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Head_Delete", iDParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Invoice_Head_GetCompanyInvoiceCount(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Invoice_Head_GetCompanyInvoiceCount", companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Co2Db_Invoice_Head_GetTotalPrice(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Co2Db_Invoice_Head_GetTotalPrice", invoiceIDParameter);
        }
    
        public virtual int Co2Db_Invoice_Head_Insert(Nullable<int> status, Nullable<int> companyID, Nullable<System.DateTime> invoiceDate, Nullable<int> paymentID, string paymentTerms, Nullable<System.DateTime> paymentDate, Nullable<int> responsibleID, string responsibleName, Nullable<System.Guid> responsibleGUID, string contactName, string contactEmail, string notes, string invoiceEANno, string invoiceName, string invoiceAddress1, string invoiceAddress2, string invoiceZipCode, string invoiceCity, string invoiceState, string invoiceCountry, string invoiceAtt, string invoiceRef, string deleveryEANno, string deleveryName, string deleveryAddress1, string deleveryAddress2, string deleveryZipCode, string deleveryCity, string deleveryState, string deleveryCountry, string deleveryAtt, string deleveryRef, Nullable<int> invoiceLines, Nullable<int> invoiceLineItems, Nullable<double> invoiceLinesTotal, Nullable<double> invoiceTransport, Nullable<double> invoiceTotal, Nullable<double> invoiceVAT, Nullable<double> invoiceTotalInclVAT, Nullable<bool> paid, Nullable<System.DateTime> paidDate, string orderNo, string yourRef, Nullable<int> creditnoteID, Nullable<bool> vATfree, Nullable<bool> eANInvoice, Nullable<int> incassoID, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            var responsibleIDParameter = responsibleID.HasValue ?
                new ObjectParameter("ResponsibleID", responsibleID) :
                new ObjectParameter("ResponsibleID", typeof(int));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsibleGUIDParameter = responsibleGUID.HasValue ?
                new ObjectParameter("ResponsibleGUID", responsibleGUID) :
                new ObjectParameter("ResponsibleGUID", typeof(System.Guid));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var invoiceEANnoParameter = invoiceEANno != null ?
                new ObjectParameter("InvoiceEANno", invoiceEANno) :
                new ObjectParameter("InvoiceEANno", typeof(string));
    
            var invoiceNameParameter = invoiceName != null ?
                new ObjectParameter("InvoiceName", invoiceName) :
                new ObjectParameter("InvoiceName", typeof(string));
    
            var invoiceAddress1Parameter = invoiceAddress1 != null ?
                new ObjectParameter("InvoiceAddress1", invoiceAddress1) :
                new ObjectParameter("InvoiceAddress1", typeof(string));
    
            var invoiceAddress2Parameter = invoiceAddress2 != null ?
                new ObjectParameter("InvoiceAddress2", invoiceAddress2) :
                new ObjectParameter("InvoiceAddress2", typeof(string));
    
            var invoiceZipCodeParameter = invoiceZipCode != null ?
                new ObjectParameter("InvoiceZipCode", invoiceZipCode) :
                new ObjectParameter("InvoiceZipCode", typeof(string));
    
            var invoiceCityParameter = invoiceCity != null ?
                new ObjectParameter("InvoiceCity", invoiceCity) :
                new ObjectParameter("InvoiceCity", typeof(string));
    
            var invoiceStateParameter = invoiceState != null ?
                new ObjectParameter("InvoiceState", invoiceState) :
                new ObjectParameter("InvoiceState", typeof(string));
    
            var invoiceCountryParameter = invoiceCountry != null ?
                new ObjectParameter("InvoiceCountry", invoiceCountry) :
                new ObjectParameter("InvoiceCountry", typeof(string));
    
            var invoiceAttParameter = invoiceAtt != null ?
                new ObjectParameter("InvoiceAtt", invoiceAtt) :
                new ObjectParameter("InvoiceAtt", typeof(string));
    
            var invoiceRefParameter = invoiceRef != null ?
                new ObjectParameter("InvoiceRef", invoiceRef) :
                new ObjectParameter("InvoiceRef", typeof(string));
    
            var deleveryEANnoParameter = deleveryEANno != null ?
                new ObjectParameter("DeleveryEANno", deleveryEANno) :
                new ObjectParameter("DeleveryEANno", typeof(string));
    
            var deleveryNameParameter = deleveryName != null ?
                new ObjectParameter("DeleveryName", deleveryName) :
                new ObjectParameter("DeleveryName", typeof(string));
    
            var deleveryAddress1Parameter = deleveryAddress1 != null ?
                new ObjectParameter("DeleveryAddress1", deleveryAddress1) :
                new ObjectParameter("DeleveryAddress1", typeof(string));
    
            var deleveryAddress2Parameter = deleveryAddress2 != null ?
                new ObjectParameter("DeleveryAddress2", deleveryAddress2) :
                new ObjectParameter("DeleveryAddress2", typeof(string));
    
            var deleveryZipCodeParameter = deleveryZipCode != null ?
                new ObjectParameter("DeleveryZipCode", deleveryZipCode) :
                new ObjectParameter("DeleveryZipCode", typeof(string));
    
            var deleveryCityParameter = deleveryCity != null ?
                new ObjectParameter("DeleveryCity", deleveryCity) :
                new ObjectParameter("DeleveryCity", typeof(string));
    
            var deleveryStateParameter = deleveryState != null ?
                new ObjectParameter("DeleveryState", deleveryState) :
                new ObjectParameter("DeleveryState", typeof(string));
    
            var deleveryCountryParameter = deleveryCountry != null ?
                new ObjectParameter("DeleveryCountry", deleveryCountry) :
                new ObjectParameter("DeleveryCountry", typeof(string));
    
            var deleveryAttParameter = deleveryAtt != null ?
                new ObjectParameter("DeleveryAtt", deleveryAtt) :
                new ObjectParameter("DeleveryAtt", typeof(string));
    
            var deleveryRefParameter = deleveryRef != null ?
                new ObjectParameter("DeleveryRef", deleveryRef) :
                new ObjectParameter("DeleveryRef", typeof(string));
    
            var invoiceLinesParameter = invoiceLines.HasValue ?
                new ObjectParameter("InvoiceLines", invoiceLines) :
                new ObjectParameter("InvoiceLines", typeof(int));
    
            var invoiceLineItemsParameter = invoiceLineItems.HasValue ?
                new ObjectParameter("InvoiceLineItems", invoiceLineItems) :
                new ObjectParameter("InvoiceLineItems", typeof(int));
    
            var invoiceLinesTotalParameter = invoiceLinesTotal.HasValue ?
                new ObjectParameter("InvoiceLinesTotal", invoiceLinesTotal) :
                new ObjectParameter("InvoiceLinesTotal", typeof(double));
    
            var invoiceTransportParameter = invoiceTransport.HasValue ?
                new ObjectParameter("InvoiceTransport", invoiceTransport) :
                new ObjectParameter("InvoiceTransport", typeof(double));
    
            var invoiceTotalParameter = invoiceTotal.HasValue ?
                new ObjectParameter("InvoiceTotal", invoiceTotal) :
                new ObjectParameter("InvoiceTotal", typeof(double));
    
            var invoiceVATParameter = invoiceVAT.HasValue ?
                new ObjectParameter("InvoiceVAT", invoiceVAT) :
                new ObjectParameter("InvoiceVAT", typeof(double));
    
            var invoiceTotalInclVATParameter = invoiceTotalInclVAT.HasValue ?
                new ObjectParameter("InvoiceTotalInclVAT", invoiceTotalInclVAT) :
                new ObjectParameter("InvoiceTotalInclVAT", typeof(double));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("Paid", paid) :
                new ObjectParameter("Paid", typeof(bool));
    
            var paidDateParameter = paidDate.HasValue ?
                new ObjectParameter("PaidDate", paidDate) :
                new ObjectParameter("PaidDate", typeof(System.DateTime));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var yourRefParameter = yourRef != null ?
                new ObjectParameter("YourRef", yourRef) :
                new ObjectParameter("YourRef", typeof(string));
    
            var creditnoteIDParameter = creditnoteID.HasValue ?
                new ObjectParameter("CreditnoteID", creditnoteID) :
                new ObjectParameter("CreditnoteID", typeof(int));
    
            var vATfreeParameter = vATfree.HasValue ?
                new ObjectParameter("VATfree", vATfree) :
                new ObjectParameter("VATfree", typeof(bool));
    
            var eANInvoiceParameter = eANInvoice.HasValue ?
                new ObjectParameter("EANInvoice", eANInvoice) :
                new ObjectParameter("EANInvoice", typeof(bool));
    
            var incassoIDParameter = incassoID.HasValue ?
                new ObjectParameter("IncassoID", incassoID) :
                new ObjectParameter("IncassoID", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Head_Insert", statusParameter, companyIDParameter, invoiceDateParameter, paymentIDParameter, paymentTermsParameter, paymentDateParameter, responsibleIDParameter, responsibleNameParameter, responsibleGUIDParameter, contactNameParameter, contactEmailParameter, notesParameter, invoiceEANnoParameter, invoiceNameParameter, invoiceAddress1Parameter, invoiceAddress2Parameter, invoiceZipCodeParameter, invoiceCityParameter, invoiceStateParameter, invoiceCountryParameter, invoiceAttParameter, invoiceRefParameter, deleveryEANnoParameter, deleveryNameParameter, deleveryAddress1Parameter, deleveryAddress2Parameter, deleveryZipCodeParameter, deleveryCityParameter, deleveryStateParameter, deleveryCountryParameter, deleveryAttParameter, deleveryRefParameter, invoiceLinesParameter, invoiceLineItemsParameter, invoiceLinesTotalParameter, invoiceTransportParameter, invoiceTotalParameter, invoiceVATParameter, invoiceTotalInclVATParameter, paidParameter, paidDateParameter, orderNoParameter, yourRefParameter, creditnoteIDParameter, vATfreeParameter, eANInvoiceParameter, incassoIDParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_Invoice_Head_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Head_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Head_SelectAll_Result> Co2Db_Invoice_Head_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Head_SelectAll_Result>("Co2Db_Invoice_Head_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Head_SelectByCompany_Result> Co2Db_Invoice_Head_SelectByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Head_SelectByCompany_Result>("Co2Db_Invoice_Head_SelectByCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Head_SelectByStatus_Result> Co2Db_Invoice_Head_SelectByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Head_SelectByStatus_Result>("Co2Db_Invoice_Head_SelectByStatus", statusParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Head_SelectByStatusCompany_Result> Co2Db_Invoice_Head_SelectByStatusCompany(Nullable<int> status, Nullable<int> companyID, Nullable<int> eANInvoice)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var eANInvoiceParameter = eANInvoice.HasValue ?
                new ObjectParameter("EANInvoice", eANInvoice) :
                new ObjectParameter("EANInvoice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Head_SelectByStatusCompany_Result>("Co2Db_Invoice_Head_SelectByStatusCompany", statusParameter, companyIDParameter, eANInvoiceParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Head_SelectID_Result> Co2Db_Invoice_Head_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Head_SelectID_Result>("Co2Db_Invoice_Head_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Head_SelectOne_Result> Co2Db_Invoice_Head_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Head_SelectOne_Result>("Co2Db_Invoice_Head_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_Invoice_Head_SetPaid(Nullable<int> iD, Nullable<int> status, Nullable<System.DateTime> paidDate, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var paidDateParameter = paidDate.HasValue ?
                new ObjectParameter("PaidDate", paidDate) :
                new ObjectParameter("PaidDate", typeof(System.DateTime));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Head_SetPaid", iDParameter, statusParameter, paidDateParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Invoice_Head_SetStatus(Nullable<int> iD, Nullable<int> status, Nullable<int> incassoID, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var incassoIDParameter = incassoID.HasValue ?
                new ObjectParameter("IncassoID", incassoID) :
                new ObjectParameter("IncassoID", typeof(int));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Head_SetStatus", iDParameter, statusParameter, incassoIDParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Co2Db_Invoice_Head_TotalInvoicePrice(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Co2Db_Invoice_Head_TotalInvoicePrice", invoiceIDParameter);
        }
    
        public virtual int Co2Db_Invoice_Head_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> companyID, Nullable<System.DateTime> invoiceDate, Nullable<int> paymentID, string paymentTerms, Nullable<System.DateTime> paymentDate, Nullable<int> responsibleID, string responsibleName, Nullable<System.Guid> responsibleGUID, string contactName, string contactEmail, string notes, string invoiceEANno, string invoiceName, string invoiceAddress1, string invoiceAddress2, string invoiceZipCode, string invoiceCity, string invoiceState, string invoiceCountry, string invoiceAtt, string invoiceRef, string deleveryEANno, string deleveryName, string deleveryAddress1, string deleveryAddress2, string deleveryZipCode, string deleveryCity, string deleveryState, string deleveryCountry, string deleveryAtt, string deleveryRef, Nullable<int> invoiceLines, Nullable<int> invoiceLineItems, Nullable<double> invoiceLinesTotal, Nullable<double> invoiceTransport, Nullable<double> invoiceTotal, Nullable<double> invoiceVAT, Nullable<double> invoiceTotalInclVAT, Nullable<bool> paid, Nullable<System.DateTime> paidDate, string orderNo, string yourRef, Nullable<int> creditnoteID, Nullable<bool> vATfree, Nullable<bool> eANInvoice, Nullable<int> incassoID, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            var responsibleIDParameter = responsibleID.HasValue ?
                new ObjectParameter("ResponsibleID", responsibleID) :
                new ObjectParameter("ResponsibleID", typeof(int));
    
            var responsibleNameParameter = responsibleName != null ?
                new ObjectParameter("ResponsibleName", responsibleName) :
                new ObjectParameter("ResponsibleName", typeof(string));
    
            var responsibleGUIDParameter = responsibleGUID.HasValue ?
                new ObjectParameter("ResponsibleGUID", responsibleGUID) :
                new ObjectParameter("ResponsibleGUID", typeof(System.Guid));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var invoiceEANnoParameter = invoiceEANno != null ?
                new ObjectParameter("InvoiceEANno", invoiceEANno) :
                new ObjectParameter("InvoiceEANno", typeof(string));
    
            var invoiceNameParameter = invoiceName != null ?
                new ObjectParameter("InvoiceName", invoiceName) :
                new ObjectParameter("InvoiceName", typeof(string));
    
            var invoiceAddress1Parameter = invoiceAddress1 != null ?
                new ObjectParameter("InvoiceAddress1", invoiceAddress1) :
                new ObjectParameter("InvoiceAddress1", typeof(string));
    
            var invoiceAddress2Parameter = invoiceAddress2 != null ?
                new ObjectParameter("InvoiceAddress2", invoiceAddress2) :
                new ObjectParameter("InvoiceAddress2", typeof(string));
    
            var invoiceZipCodeParameter = invoiceZipCode != null ?
                new ObjectParameter("InvoiceZipCode", invoiceZipCode) :
                new ObjectParameter("InvoiceZipCode", typeof(string));
    
            var invoiceCityParameter = invoiceCity != null ?
                new ObjectParameter("InvoiceCity", invoiceCity) :
                new ObjectParameter("InvoiceCity", typeof(string));
    
            var invoiceStateParameter = invoiceState != null ?
                new ObjectParameter("InvoiceState", invoiceState) :
                new ObjectParameter("InvoiceState", typeof(string));
    
            var invoiceCountryParameter = invoiceCountry != null ?
                new ObjectParameter("InvoiceCountry", invoiceCountry) :
                new ObjectParameter("InvoiceCountry", typeof(string));
    
            var invoiceAttParameter = invoiceAtt != null ?
                new ObjectParameter("InvoiceAtt", invoiceAtt) :
                new ObjectParameter("InvoiceAtt", typeof(string));
    
            var invoiceRefParameter = invoiceRef != null ?
                new ObjectParameter("InvoiceRef", invoiceRef) :
                new ObjectParameter("InvoiceRef", typeof(string));
    
            var deleveryEANnoParameter = deleveryEANno != null ?
                new ObjectParameter("DeleveryEANno", deleveryEANno) :
                new ObjectParameter("DeleveryEANno", typeof(string));
    
            var deleveryNameParameter = deleveryName != null ?
                new ObjectParameter("DeleveryName", deleveryName) :
                new ObjectParameter("DeleveryName", typeof(string));
    
            var deleveryAddress1Parameter = deleveryAddress1 != null ?
                new ObjectParameter("DeleveryAddress1", deleveryAddress1) :
                new ObjectParameter("DeleveryAddress1", typeof(string));
    
            var deleveryAddress2Parameter = deleveryAddress2 != null ?
                new ObjectParameter("DeleveryAddress2", deleveryAddress2) :
                new ObjectParameter("DeleveryAddress2", typeof(string));
    
            var deleveryZipCodeParameter = deleveryZipCode != null ?
                new ObjectParameter("DeleveryZipCode", deleveryZipCode) :
                new ObjectParameter("DeleveryZipCode", typeof(string));
    
            var deleveryCityParameter = deleveryCity != null ?
                new ObjectParameter("DeleveryCity", deleveryCity) :
                new ObjectParameter("DeleveryCity", typeof(string));
    
            var deleveryStateParameter = deleveryState != null ?
                new ObjectParameter("DeleveryState", deleveryState) :
                new ObjectParameter("DeleveryState", typeof(string));
    
            var deleveryCountryParameter = deleveryCountry != null ?
                new ObjectParameter("DeleveryCountry", deleveryCountry) :
                new ObjectParameter("DeleveryCountry", typeof(string));
    
            var deleveryAttParameter = deleveryAtt != null ?
                new ObjectParameter("DeleveryAtt", deleveryAtt) :
                new ObjectParameter("DeleveryAtt", typeof(string));
    
            var deleveryRefParameter = deleveryRef != null ?
                new ObjectParameter("DeleveryRef", deleveryRef) :
                new ObjectParameter("DeleveryRef", typeof(string));
    
            var invoiceLinesParameter = invoiceLines.HasValue ?
                new ObjectParameter("InvoiceLines", invoiceLines) :
                new ObjectParameter("InvoiceLines", typeof(int));
    
            var invoiceLineItemsParameter = invoiceLineItems.HasValue ?
                new ObjectParameter("InvoiceLineItems", invoiceLineItems) :
                new ObjectParameter("InvoiceLineItems", typeof(int));
    
            var invoiceLinesTotalParameter = invoiceLinesTotal.HasValue ?
                new ObjectParameter("InvoiceLinesTotal", invoiceLinesTotal) :
                new ObjectParameter("InvoiceLinesTotal", typeof(double));
    
            var invoiceTransportParameter = invoiceTransport.HasValue ?
                new ObjectParameter("InvoiceTransport", invoiceTransport) :
                new ObjectParameter("InvoiceTransport", typeof(double));
    
            var invoiceTotalParameter = invoiceTotal.HasValue ?
                new ObjectParameter("InvoiceTotal", invoiceTotal) :
                new ObjectParameter("InvoiceTotal", typeof(double));
    
            var invoiceVATParameter = invoiceVAT.HasValue ?
                new ObjectParameter("InvoiceVAT", invoiceVAT) :
                new ObjectParameter("InvoiceVAT", typeof(double));
    
            var invoiceTotalInclVATParameter = invoiceTotalInclVAT.HasValue ?
                new ObjectParameter("InvoiceTotalInclVAT", invoiceTotalInclVAT) :
                new ObjectParameter("InvoiceTotalInclVAT", typeof(double));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("Paid", paid) :
                new ObjectParameter("Paid", typeof(bool));
    
            var paidDateParameter = paidDate.HasValue ?
                new ObjectParameter("PaidDate", paidDate) :
                new ObjectParameter("PaidDate", typeof(System.DateTime));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var yourRefParameter = yourRef != null ?
                new ObjectParameter("YourRef", yourRef) :
                new ObjectParameter("YourRef", typeof(string));
    
            var creditnoteIDParameter = creditnoteID.HasValue ?
                new ObjectParameter("CreditnoteID", creditnoteID) :
                new ObjectParameter("CreditnoteID", typeof(int));
    
            var vATfreeParameter = vATfree.HasValue ?
                new ObjectParameter("VATfree", vATfree) :
                new ObjectParameter("VATfree", typeof(bool));
    
            var eANInvoiceParameter = eANInvoice.HasValue ?
                new ObjectParameter("EANInvoice", eANInvoice) :
                new ObjectParameter("EANInvoice", typeof(bool));
    
            var incassoIDParameter = incassoID.HasValue ?
                new ObjectParameter("IncassoID", incassoID) :
                new ObjectParameter("IncassoID", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Head_Update", iDParameter, statusParameter, companyIDParameter, invoiceDateParameter, paymentIDParameter, paymentTermsParameter, paymentDateParameter, responsibleIDParameter, responsibleNameParameter, responsibleGUIDParameter, contactNameParameter, contactEmailParameter, notesParameter, invoiceEANnoParameter, invoiceNameParameter, invoiceAddress1Parameter, invoiceAddress2Parameter, invoiceZipCodeParameter, invoiceCityParameter, invoiceStateParameter, invoiceCountryParameter, invoiceAttParameter, invoiceRefParameter, deleveryEANnoParameter, deleveryNameParameter, deleveryAddress1Parameter, deleveryAddress2Parameter, deleveryZipCodeParameter, deleveryCityParameter, deleveryStateParameter, deleveryCountryParameter, deleveryAttParameter, deleveryRefParameter, invoiceLinesParameter, invoiceLineItemsParameter, invoiceLinesTotalParameter, invoiceTransportParameter, invoiceTotalParameter, invoiceVATParameter, invoiceTotalInclVATParameter, paidParameter, paidDateParameter, orderNoParameter, yourRefParameter, creditnoteIDParameter, vATfreeParameter, eANInvoiceParameter, incassoIDParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Invoice_Line_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Line_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Invoice_Line_GetCompany(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Invoice_Line_GetCompany", invoiceIDParameter);
        }
    
        public virtual int Co2Db_Invoice_Line_Insert(Nullable<int> invoiceID, Nullable<int> pos, Nullable<int> status, Nullable<int> itemID, string itemNo, string itemName, string lineText, string serialNo, Nullable<double> quantity, Nullable<double> itemPrice, Nullable<double> discount, Nullable<double> salesPrice, Nullable<double> lineTotal, Nullable<bool> vAT, Nullable<double> freight, Nullable<double> provision, Nullable<double> provisionRate, Nullable<double> lineProvision, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("Pos", pos) :
                new ObjectParameter("Pos", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var itemNoParameter = itemNo != null ?
                new ObjectParameter("ItemNo", itemNo) :
                new ObjectParameter("ItemNo", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var lineTextParameter = lineText != null ?
                new ObjectParameter("LineText", lineText) :
                new ObjectParameter("LineText", typeof(string));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var itemPriceParameter = itemPrice.HasValue ?
                new ObjectParameter("ItemPrice", itemPrice) :
                new ObjectParameter("ItemPrice", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var salesPriceParameter = salesPrice.HasValue ?
                new ObjectParameter("SalesPrice", salesPrice) :
                new ObjectParameter("SalesPrice", typeof(double));
    
            var lineTotalParameter = lineTotal.HasValue ?
                new ObjectParameter("LineTotal", lineTotal) :
                new ObjectParameter("LineTotal", typeof(double));
    
            var vATParameter = vAT.HasValue ?
                new ObjectParameter("VAT", vAT) :
                new ObjectParameter("VAT", typeof(bool));
    
            var freightParameter = freight.HasValue ?
                new ObjectParameter("Freight", freight) :
                new ObjectParameter("Freight", typeof(double));
    
            var provisionParameter = provision.HasValue ?
                new ObjectParameter("Provision", provision) :
                new ObjectParameter("Provision", typeof(double));
    
            var provisionRateParameter = provisionRate.HasValue ?
                new ObjectParameter("ProvisionRate", provisionRate) :
                new ObjectParameter("ProvisionRate", typeof(double));
    
            var lineProvisionParameter = lineProvision.HasValue ?
                new ObjectParameter("LineProvision", lineProvision) :
                new ObjectParameter("LineProvision", typeof(double));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Line_Insert", invoiceIDParameter, posParameter, statusParameter, itemIDParameter, itemNoParameter, itemNameParameter, lineTextParameter, serialNoParameter, quantityParameter, itemPriceParameter, discountParameter, salesPriceParameter, lineTotalParameter, vATParameter, freightParameter, provisionParameter, provisionRateParameter, lineProvisionParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Line_SelectAll_Result> Co2Db_Invoice_Line_SelectAll(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Line_SelectAll_Result>("Co2Db_Invoice_Line_SelectAll", invoiceIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Line_SelectID_Result> Co2Db_Invoice_Line_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Line_SelectID_Result>("Co2Db_Invoice_Line_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Line_SelectOne_Result> Co2Db_Invoice_Line_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Line_SelectOne_Result>("Co2Db_Invoice_Line_SelectOne", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Co2Db_Invoice_Line_TotalInvoicePrice(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Co2Db_Invoice_Line_TotalInvoicePrice", invoiceIDParameter);
        }
    
        public virtual int Co2Db_Invoice_Line_Update(Nullable<int> iD, Nullable<int> invoiceID, Nullable<int> pos, Nullable<int> status, Nullable<int> itemID, string itemNo, string itemName, string lineText, string serialNo, Nullable<double> quantity, Nullable<double> itemPrice, Nullable<double> discount, Nullable<double> salesPrice, Nullable<double> lineTotal, Nullable<bool> vAT, Nullable<double> freight, Nullable<double> provision, Nullable<double> provisionRate, Nullable<double> lineProvision, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("Pos", pos) :
                new ObjectParameter("Pos", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var itemNoParameter = itemNo != null ?
                new ObjectParameter("ItemNo", itemNo) :
                new ObjectParameter("ItemNo", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var lineTextParameter = lineText != null ?
                new ObjectParameter("LineText", lineText) :
                new ObjectParameter("LineText", typeof(string));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var itemPriceParameter = itemPrice.HasValue ?
                new ObjectParameter("ItemPrice", itemPrice) :
                new ObjectParameter("ItemPrice", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var salesPriceParameter = salesPrice.HasValue ?
                new ObjectParameter("SalesPrice", salesPrice) :
                new ObjectParameter("SalesPrice", typeof(double));
    
            var lineTotalParameter = lineTotal.HasValue ?
                new ObjectParameter("LineTotal", lineTotal) :
                new ObjectParameter("LineTotal", typeof(double));
    
            var vATParameter = vAT.HasValue ?
                new ObjectParameter("VAT", vAT) :
                new ObjectParameter("VAT", typeof(bool));
    
            var freightParameter = freight.HasValue ?
                new ObjectParameter("Freight", freight) :
                new ObjectParameter("Freight", typeof(double));
    
            var provisionParameter = provision.HasValue ?
                new ObjectParameter("Provision", provision) :
                new ObjectParameter("Provision", typeof(double));
    
            var provisionRateParameter = provisionRate.HasValue ?
                new ObjectParameter("ProvisionRate", provisionRate) :
                new ObjectParameter("ProvisionRate", typeof(double));
    
            var lineProvisionParameter = lineProvision.HasValue ?
                new ObjectParameter("LineProvision", lineProvision) :
                new ObjectParameter("LineProvision", typeof(double));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Invoice_Line_Update", iDParameter, invoiceIDParameter, posParameter, statusParameter, itemIDParameter, itemNoParameter, itemNameParameter, lineTextParameter, serialNoParameter, quantityParameter, itemPriceParameter, discountParameter, salesPriceParameter, lineTotalParameter, vATParameter, freightParameter, provisionParameter, provisionRateParameter, lineProvisionParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Co2Db_Invoice_Stats_Result> Co2Db_Invoice_Stats(Nullable<System.DateTime> periodStart, Nullable<System.DateTime> periodEnd, Nullable<int> companyID, Nullable<int> itemID, Nullable<int> invoicePaid, string vareVareNr)
        {
            var periodStartParameter = periodStart.HasValue ?
                new ObjectParameter("PeriodStart", periodStart) :
                new ObjectParameter("PeriodStart", typeof(System.DateTime));
    
            var periodEndParameter = periodEnd.HasValue ?
                new ObjectParameter("PeriodEnd", periodEnd) :
                new ObjectParameter("PeriodEnd", typeof(System.DateTime));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var invoicePaidParameter = invoicePaid.HasValue ?
                new ObjectParameter("InvoicePaid", invoicePaid) :
                new ObjectParameter("InvoicePaid", typeof(int));
    
            var vareVareNrParameter = vareVareNr != null ?
                new ObjectParameter("VareVareNr", vareVareNr) :
                new ObjectParameter("VareVareNr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Invoice_Stats_Result>("Co2Db_Invoice_Stats", periodStartParameter, periodEndParameter, companyIDParameter, itemIDParameter, invoicePaidParameter, vareVareNrParameter);
        }
    
        public virtual int Co2Db_Korrespondance_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Korrespondance_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Korrespondance_Delete_ByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Korrespondance_Delete_ByCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Korrespondance_GetCount(Nullable<int> companyID, Nullable<int> medarbejderID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Korrespondance_GetCount", companyIDParameter, medarbejderIDParameter);
        }
    
        public virtual int Co2Db_Korrespondance_Insert(Nullable<int> type, Nullable<int> companyID, Nullable<int> medarbejderID, Nullable<int> status, string overskrift, Nullable<bool> ekstern, string mime, string filename, string ext, Nullable<int> size, byte[] blob, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var overskriftParameter = overskrift != null ?
                new ObjectParameter("Overskrift", overskrift) :
                new ObjectParameter("Overskrift", typeof(string));
    
            var eksternParameter = ekstern.HasValue ?
                new ObjectParameter("Ekstern", ekstern) :
                new ObjectParameter("Ekstern", typeof(bool));
    
            var mimeParameter = mime != null ?
                new ObjectParameter("Mime", mime) :
                new ObjectParameter("Mime", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("Ext", ext) :
                new ObjectParameter("Ext", typeof(string));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var blobParameter = blob != null ?
                new ObjectParameter("Blob", blob) :
                new ObjectParameter("Blob", typeof(byte[]));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Korrespondance_Insert", typeParameter, companyIDParameter, medarbejderIDParameter, statusParameter, overskriftParameter, eksternParameter, mimeParameter, filenameParameter, extParameter, sizeParameter, blobParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_Korrespondance_Purge(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Korrespondance_Purge", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Korrespondance_SearchAll_Result> Co2Db_Korrespondance_SearchAll(Nullable<int> companyID, Nullable<int> medarbejderID, Nullable<bool> ekstern, string search)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            var eksternParameter = ekstern.HasValue ?
                new ObjectParameter("Ekstern", ekstern) :
                new ObjectParameter("Ekstern", typeof(bool));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Korrespondance_SearchAll_Result>("Co2Db_Korrespondance_SearchAll", companyIDParameter, medarbejderIDParameter, eksternParameter, searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_Korrespondance_SelectAll_Result> Co2Db_Korrespondance_SelectAll(Nullable<int> companyID, Nullable<int> medarbejderID, Nullable<bool> ekstern)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            var eksternParameter = ekstern.HasValue ?
                new ObjectParameter("Ekstern", ekstern) :
                new ObjectParameter("Ekstern", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Korrespondance_SelectAll_Result>("Co2Db_Korrespondance_SelectAll", companyIDParameter, medarbejderIDParameter, eksternParameter);
        }
    
        public virtual ObjectResult<Co2Db_Korrespondance_SelectByType_Result> Co2Db_Korrespondance_SelectByType(Nullable<int> type, Nullable<int> companyID, Nullable<int> medarbejderID)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Korrespondance_SelectByType_Result>("Co2Db_Korrespondance_SelectByType", typeParameter, companyIDParameter, medarbejderIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Korrespondance_SelectOne_Result> Co2Db_Korrespondance_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Korrespondance_SelectOne_Result>("Co2Db_Korrespondance_SelectOne", iDParameter);
        }
    
        public virtual ObjectResult<byte[]> Co2Db_Korrespondance_SelectOneBlob(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("Co2Db_Korrespondance_SelectOneBlob", iDParameter);
        }
    
        public virtual int Co2Db_Korrespondance_Update(Nullable<int> iD, Nullable<int> type, Nullable<int> companyID, Nullable<int> medarbejderID, Nullable<int> status, string overskrift, Nullable<bool> @extern, string mime, string filename, string ext, Nullable<int> size, byte[] blob, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var overskriftParameter = overskrift != null ?
                new ObjectParameter("Overskrift", overskrift) :
                new ObjectParameter("Overskrift", typeof(string));
    
            var externParameter = @extern.HasValue ?
                new ObjectParameter("Extern", @extern) :
                new ObjectParameter("Extern", typeof(bool));
    
            var mimeParameter = mime != null ?
                new ObjectParameter("Mime", mime) :
                new ObjectParameter("Mime", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("Ext", ext) :
                new ObjectParameter("Ext", typeof(string));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var blobParameter = blob != null ?
                new ObjectParameter("Blob", blob) :
                new ObjectParameter("Blob", typeof(byte[]));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Korrespondance_Update", iDParameter, typeParameter, companyIDParameter, medarbejderIDParameter, statusParameter, overskriftParameter, externParameter, mimeParameter, filenameParameter, extParameter, sizeParameter, blobParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_KundeGrp_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KundeGrp_Delete", iDParameter);
        }
    
        public virtual int Co2Db_KundeGrp_Insert(string kundeGrpNavn, Nullable<int> status, Nullable<int> sort, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var kundeGrpNavnParameter = kundeGrpNavn != null ?
                new ObjectParameter("KundeGrpNavn", kundeGrpNavn) :
                new ObjectParameter("KundeGrpNavn", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KundeGrp_Insert", kundeGrpNavnParameter, statusParameter, sortParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_KundeGrp_Pris_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KundeGrp_Pris_Delete", iDParameter);
        }
    
        public virtual int Co2Db_KundeGrp_Pris_Insert(Nullable<int> kundeGrpID, Nullable<int> vareID, Nullable<int> status, Nullable<double> rabat, Nullable<double> fragtGebyr, Nullable<System.DateTime> dato, string rettetAF, string rettetIP, Nullable<double> provisionRate, ObjectParameter iD)
        {
            var kundeGrpIDParameter = kundeGrpID.HasValue ?
                new ObjectParameter("KundeGrpID", kundeGrpID) :
                new ObjectParameter("KundeGrpID", typeof(int));
    
            var vareIDParameter = vareID.HasValue ?
                new ObjectParameter("VareID", vareID) :
                new ObjectParameter("VareID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var rabatParameter = rabat.HasValue ?
                new ObjectParameter("Rabat", rabat) :
                new ObjectParameter("Rabat", typeof(double));
    
            var fragtGebyrParameter = fragtGebyr.HasValue ?
                new ObjectParameter("FragtGebyr", fragtGebyr) :
                new ObjectParameter("FragtGebyr", typeof(double));
    
            var datoParameter = dato.HasValue ?
                new ObjectParameter("Dato", dato) :
                new ObjectParameter("Dato", typeof(System.DateTime));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            var provisionRateParameter = provisionRate.HasValue ?
                new ObjectParameter("ProvisionRate", provisionRate) :
                new ObjectParameter("ProvisionRate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KundeGrp_Pris_Insert", kundeGrpIDParameter, vareIDParameter, statusParameter, rabatParameter, fragtGebyrParameter, datoParameter, rettetAFParameter, rettetIPParameter, provisionRateParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_Pris_SelectAll_Result> Co2Db_KundeGrp_Pris_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_Pris_SelectAll_Result>("Co2Db_KundeGrp_Pris_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_Pris_SelectByKundeGrp_Result> Co2Db_KundeGrp_Pris_SelectByKundeGrp(Nullable<int> kundeGrpID)
        {
            var kundeGrpIDParameter = kundeGrpID.HasValue ?
                new ObjectParameter("KundeGrpID", kundeGrpID) :
                new ObjectParameter("KundeGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_Pris_SelectByKundeGrp_Result>("Co2Db_KundeGrp_Pris_SelectByKundeGrp", kundeGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_Pris_SelectByKundeGrpVareID_Result> Co2Db_KundeGrp_Pris_SelectByKundeGrpVareID(Nullable<int> kundeGrpID, Nullable<int> vareID)
        {
            var kundeGrpIDParameter = kundeGrpID.HasValue ?
                new ObjectParameter("KundeGrpID", kundeGrpID) :
                new ObjectParameter("KundeGrpID", typeof(int));
    
            var vareIDParameter = vareID.HasValue ?
                new ObjectParameter("VareID", vareID) :
                new ObjectParameter("VareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_Pris_SelectByKundeGrpVareID_Result>("Co2Db_KundeGrp_Pris_SelectByKundeGrpVareID", kundeGrpIDParameter, vareIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_Pris_SelectByKundeGrpVareNr_Result> Co2Db_KundeGrp_Pris_SelectByKundeGrpVareNr(Nullable<int> kundeGrpID, string vareNr)
        {
            var kundeGrpIDParameter = kundeGrpID.HasValue ?
                new ObjectParameter("KundeGrpID", kundeGrpID) :
                new ObjectParameter("KundeGrpID", typeof(int));
    
            var vareNrParameter = vareNr != null ?
                new ObjectParameter("VareNr", vareNr) :
                new ObjectParameter("VareNr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_Pris_SelectByKundeGrpVareNr_Result>("Co2Db_KundeGrp_Pris_SelectByKundeGrpVareNr", kundeGrpIDParameter, vareNrParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_Pris_SelectBySearch_Result> Co2Db_KundeGrp_Pris_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_Pris_SelectBySearch_Result>("Co2Db_KundeGrp_Pris_SelectBySearch", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_Pris_SelectID_Result> Co2Db_KundeGrp_Pris_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_Pris_SelectID_Result>("Co2Db_KundeGrp_Pris_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_KundeGrp_Pris_SelectIDByKundeGrp(Nullable<int> kundeGrpID, string sort, Nullable<int> sortDir)
        {
            var kundeGrpIDParameter = kundeGrpID.HasValue ?
                new ObjectParameter("KundeGrpID", kundeGrpID) :
                new ObjectParameter("KundeGrpID", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortDirParameter = sortDir.HasValue ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_KundeGrp_Pris_SelectIDByKundeGrp", kundeGrpIDParameter, sortParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_Pris_SelectOne_Result> Co2Db_KundeGrp_Pris_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_Pris_SelectOne_Result>("Co2Db_KundeGrp_Pris_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_KundeGrp_Pris_Update(Nullable<int> iD, Nullable<int> kundeGrpID, Nullable<int> vareID, Nullable<int> status, Nullable<double> rabat, Nullable<double> fragtGebyr, Nullable<System.DateTime> dato, Nullable<double> provisionRate, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var kundeGrpIDParameter = kundeGrpID.HasValue ?
                new ObjectParameter("KundeGrpID", kundeGrpID) :
                new ObjectParameter("KundeGrpID", typeof(int));
    
            var vareIDParameter = vareID.HasValue ?
                new ObjectParameter("VareID", vareID) :
                new ObjectParameter("VareID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var rabatParameter = rabat.HasValue ?
                new ObjectParameter("Rabat", rabat) :
                new ObjectParameter("Rabat", typeof(double));
    
            var fragtGebyrParameter = fragtGebyr.HasValue ?
                new ObjectParameter("FragtGebyr", fragtGebyr) :
                new ObjectParameter("FragtGebyr", typeof(double));
    
            var datoParameter = dato.HasValue ?
                new ObjectParameter("Dato", dato) :
                new ObjectParameter("Dato", typeof(System.DateTime));
    
            var provisionRateParameter = provisionRate.HasValue ?
                new ObjectParameter("ProvisionRate", provisionRate) :
                new ObjectParameter("ProvisionRate", typeof(double));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KundeGrp_Pris_Update", iDParameter, kundeGrpIDParameter, vareIDParameter, statusParameter, rabatParameter, fragtGebyrParameter, datoParameter, provisionRateParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_SelectAll_Result> Co2Db_KundeGrp_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_SelectAll_Result>("Co2Db_KundeGrp_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_SelectByCompany_Result> Co2Db_KundeGrp_SelectByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_SelectByCompany_Result>("Co2Db_KundeGrp_SelectByCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_SelectBySearch_Result> Co2Db_KundeGrp_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_SelectBySearch_Result>("Co2Db_KundeGrp_SelectBySearch", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_SelectID_Result> Co2Db_KundeGrp_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_SelectID_Result>("Co2Db_KundeGrp_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KundeGrp_SelectOne_Result> Co2Db_KundeGrp_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KundeGrp_SelectOne_Result>("Co2Db_KundeGrp_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_KundeGrp_Update(Nullable<int> iD, string kundeGrpNavn, Nullable<int> status, Nullable<int> sort, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var kundeGrpNavnParameter = kundeGrpNavn != null ?
                new ObjectParameter("KundeGrpNavn", kundeGrpNavn) :
                new ObjectParameter("KundeGrpNavn", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KundeGrp_Update", iDParameter, kundeGrpNavnParameter, statusParameter, sortParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_KursusDag_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDag_Delete", iDParameter);
        }
    
        public virtual int Co2Db_KursusDag_Insert(Nullable<int> kursusPolicyID, Nullable<System.DateTime> kursusDato, Nullable<bool> repetionskursus, Nullable<int> status, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var kursusPolicyIDParameter = kursusPolicyID.HasValue ?
                new ObjectParameter("KursusPolicyID", kursusPolicyID) :
                new ObjectParameter("KursusPolicyID", typeof(int));
    
            var kursusDatoParameter = kursusDato.HasValue ?
                new ObjectParameter("KursusDato", kursusDato) :
                new ObjectParameter("KursusDato", typeof(System.DateTime));
    
            var repetionskursusParameter = repetionskursus.HasValue ?
                new ObjectParameter("Repetionskursus", repetionskursus) :
                new ObjectParameter("Repetionskursus", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDag_Insert", kursusPolicyIDParameter, kursusDatoParameter, repetionskursusParameter, statusParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectAll_Result> Co2Db_KursusDag_SelectAll(Nullable<int> kursusPolicyID)
        {
            var kursusPolicyIDParameter = kursusPolicyID.HasValue ?
                new ObjectParameter("KursusPolicyID", kursusPolicyID) :
                new ObjectParameter("KursusPolicyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectAll_Result>("Co2Db_KursusDag_SelectAll", kursusPolicyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectAllByParent_Result> Co2Db_KursusDag_SelectAllByParent(Nullable<int> kursusPolicyID)
        {
            var kursusPolicyIDParameter = kursusPolicyID.HasValue ?
                new ObjectParameter("KursusPolicyID", kursusPolicyID) :
                new ObjectParameter("KursusPolicyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectAllByParent_Result>("Co2Db_KursusDag_SelectAllByParent", kursusPolicyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectAllList_Result> Co2Db_KursusDag_SelectAllList(Nullable<int> kursusPolicyID)
        {
            var kursusPolicyIDParameter = kursusPolicyID.HasValue ?
                new ObjectParameter("KursusPolicyID", kursusPolicyID) :
                new ObjectParameter("KursusPolicyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectAllList_Result>("Co2Db_KursusDag_SelectAllList", kursusPolicyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectByDate_Result> Co2Db_KursusDag_SelectByDate(Nullable<int> kursusPolicyID, Nullable<System.DateTime> kursusDato)
        {
            var kursusPolicyIDParameter = kursusPolicyID.HasValue ?
                new ObjectParameter("KursusPolicyID", kursusPolicyID) :
                new ObjectParameter("KursusPolicyID", typeof(int));
    
            var kursusDatoParameter = kursusDato.HasValue ?
                new ObjectParameter("KursusDato", kursusDato) :
                new ObjectParameter("KursusDato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectByDate_Result>("Co2Db_KursusDag_SelectByDate", kursusPolicyIDParameter, kursusDatoParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectByKursusDeltager_Result> Co2Db_KursusDag_SelectByKursusDeltager(Nullable<int> kursusDeltagerID)
        {
            var kursusDeltagerIDParameter = kursusDeltagerID.HasValue ?
                new ObjectParameter("KursusDeltagerID", kursusDeltagerID) :
                new ObjectParameter("KursusDeltagerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectByKursusDeltager_Result>("Co2Db_KursusDag_SelectByKursusDeltager", kursusDeltagerIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectBySearch_Result> Co2Db_KursusDag_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectBySearch_Result>("Co2Db_KursusDag_SelectBySearch", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectID_Result> Co2Db_KursusDag_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectID_Result>("Co2Db_KursusDag_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDag_SelectOne_Result> Co2Db_KursusDag_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDag_SelectOne_Result>("Co2Db_KursusDag_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_KursusDag_Update(Nullable<int> iD, Nullable<int> kursusPolicyID, Nullable<System.DateTime> kursusDato, Nullable<bool> repetionskursus, Nullable<int> status, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var kursusPolicyIDParameter = kursusPolicyID.HasValue ?
                new ObjectParameter("KursusPolicyID", kursusPolicyID) :
                new ObjectParameter("KursusPolicyID", typeof(int));
    
            var kursusDatoParameter = kursusDato.HasValue ?
                new ObjectParameter("KursusDato", kursusDato) :
                new ObjectParameter("KursusDato", typeof(System.DateTime));
    
            var repetionskursusParameter = repetionskursus.HasValue ?
                new ObjectParameter("Repetionskursus", repetionskursus) :
                new ObjectParameter("Repetionskursus", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDag_Update", iDParameter, kursusPolicyIDParameter, kursusDatoParameter, repetionskursusParameter, statusParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_KursusDagListe_Add(Nullable<int> kursusDagID, Nullable<int> kursusDeltagerID, Nullable<int> kursusListeStatus)
        {
            var kursusDagIDParameter = kursusDagID.HasValue ?
                new ObjectParameter("KursusDagID", kursusDagID) :
                new ObjectParameter("KursusDagID", typeof(int));
    
            var kursusDeltagerIDParameter = kursusDeltagerID.HasValue ?
                new ObjectParameter("KursusDeltagerID", kursusDeltagerID) :
                new ObjectParameter("KursusDeltagerID", typeof(int));
    
            var kursusListeStatusParameter = kursusListeStatus.HasValue ?
                new ObjectParameter("KursusListeStatus", kursusListeStatus) :
                new ObjectParameter("KursusListeStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDagListe_Add", kursusDagIDParameter, kursusDeltagerIDParameter, kursusListeStatusParameter);
        }
    
        public virtual int Co2Db_KursusDagListe_Del(Nullable<int> kursusDagID, Nullable<int> kursusDeltagerID)
        {
            var kursusDagIDParameter = kursusDagID.HasValue ?
                new ObjectParameter("KursusDagID", kursusDagID) :
                new ObjectParameter("KursusDagID", typeof(int));
    
            var kursusDeltagerIDParameter = kursusDeltagerID.HasValue ?
                new ObjectParameter("KursusDeltagerID", kursusDeltagerID) :
                new ObjectParameter("KursusDeltagerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDagListe_Del", kursusDagIDParameter, kursusDeltagerIDParameter);
        }
    
        public virtual int Co2Db_KursusDeltager_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDeltager_Delete", iDParameter);
        }
    
        public virtual int Co2Db_KursusDeltager_Insert(Nullable<int> companyID, Nullable<int> status, string fornavn, string efternavn, Nullable<System.DateTime> birthDay, string cprNr, string medarbnr, string lokation, string stilling, string adresse, string postnr, string bynavn, string state, Nullable<int> land, Nullable<System.DateTime> fratradtDato, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var fornavnParameter = fornavn != null ?
                new ObjectParameter("Fornavn", fornavn) :
                new ObjectParameter("Fornavn", typeof(string));
    
            var efternavnParameter = efternavn != null ?
                new ObjectParameter("Efternavn", efternavn) :
                new ObjectParameter("Efternavn", typeof(string));
    
            var birthDayParameter = birthDay.HasValue ?
                new ObjectParameter("BirthDay", birthDay) :
                new ObjectParameter("BirthDay", typeof(System.DateTime));
    
            var cprNrParameter = cprNr != null ?
                new ObjectParameter("CprNr", cprNr) :
                new ObjectParameter("CprNr", typeof(string));
    
            var medarbnrParameter = medarbnr != null ?
                new ObjectParameter("Medarbnr", medarbnr) :
                new ObjectParameter("Medarbnr", typeof(string));
    
            var lokationParameter = lokation != null ?
                new ObjectParameter("Lokation", lokation) :
                new ObjectParameter("Lokation", typeof(string));
    
            var stillingParameter = stilling != null ?
                new ObjectParameter("Stilling", stilling) :
                new ObjectParameter("Stilling", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var bynavnParameter = bynavn != null ?
                new ObjectParameter("Bynavn", bynavn) :
                new ObjectParameter("Bynavn", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var landParameter = land.HasValue ?
                new ObjectParameter("Land", land) :
                new ObjectParameter("Land", typeof(int));
    
            var fratradtDatoParameter = fratradtDato.HasValue ?
                new ObjectParameter("FratradtDato", fratradtDato) :
                new ObjectParameter("FratradtDato", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDeltager_Insert", companyIDParameter, statusParameter, fornavnParameter, efternavnParameter, birthDayParameter, cprNrParameter, medarbnrParameter, lokationParameter, stillingParameter, adresseParameter, postnrParameter, bynavnParameter, stateParameter, landParameter, fratradtDatoParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_KursusDeltager_SelectAll_Result> Co2Db_KursusDeltager_SelectAll(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDeltager_SelectAll_Result>("Co2Db_KursusDeltager_SelectAll", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDeltager_SelectAllCompany_Result> Co2Db_KursusDeltager_SelectAllCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDeltager_SelectAllCompany_Result>("Co2Db_KursusDeltager_SelectAllCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDeltager_SelectBySearch_Result> Co2Db_KursusDeltager_SelectBySearch(string search, Nullable<int> status, Nullable<int> companyID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDeltager_SelectBySearch_Result>("Co2Db_KursusDeltager_SelectBySearch", searchParameter, statusParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDeltager_SelectID_Result> Co2Db_KursusDeltager_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDeltager_SelectID_Result>("Co2Db_KursusDeltager_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDeltager_SelectIDAllCompanyList_Result> Co2Db_KursusDeltager_SelectIDAllCompanyList(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDeltager_SelectIDAllCompanyList_Result>("Co2Db_KursusDeltager_SelectIDAllCompanyList", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDeltager_SelectIDAllDagList_Result> Co2Db_KursusDeltager_SelectIDAllDagList(Nullable<int> kursusDagID)
        {
            var kursusDagIDParameter = kursusDagID.HasValue ?
                new ObjectParameter("KursusDagID", kursusDagID) :
                new ObjectParameter("KursusDagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDeltager_SelectIDAllDagList_Result>("Co2Db_KursusDeltager_SelectIDAllDagList", kursusDagIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusDeltager_SelectOne_Result> Co2Db_KursusDeltager_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusDeltager_SelectOne_Result>("Co2Db_KursusDeltager_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_KursusDeltager_Update(Nullable<int> iD, Nullable<int> companyID, Nullable<int> status, string fornavn, string efternavn, Nullable<System.DateTime> birthDay, string cprNr, string medarbnr, string lokation, string stilling, string adresse, string postnr, string bynavn, string state, Nullable<int> land, Nullable<System.DateTime> fratradtDato, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var fornavnParameter = fornavn != null ?
                new ObjectParameter("Fornavn", fornavn) :
                new ObjectParameter("Fornavn", typeof(string));
    
            var efternavnParameter = efternavn != null ?
                new ObjectParameter("Efternavn", efternavn) :
                new ObjectParameter("Efternavn", typeof(string));
    
            var birthDayParameter = birthDay.HasValue ?
                new ObjectParameter("BirthDay", birthDay) :
                new ObjectParameter("BirthDay", typeof(System.DateTime));
    
            var cprNrParameter = cprNr != null ?
                new ObjectParameter("CprNr", cprNr) :
                new ObjectParameter("CprNr", typeof(string));
    
            var medarbnrParameter = medarbnr != null ?
                new ObjectParameter("Medarbnr", medarbnr) :
                new ObjectParameter("Medarbnr", typeof(string));
    
            var lokationParameter = lokation != null ?
                new ObjectParameter("Lokation", lokation) :
                new ObjectParameter("Lokation", typeof(string));
    
            var stillingParameter = stilling != null ?
                new ObjectParameter("Stilling", stilling) :
                new ObjectParameter("Stilling", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var bynavnParameter = bynavn != null ?
                new ObjectParameter("Bynavn", bynavn) :
                new ObjectParameter("Bynavn", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var landParameter = land.HasValue ?
                new ObjectParameter("Land", land) :
                new ObjectParameter("Land", typeof(int));
    
            var fratradtDatoParameter = fratradtDato.HasValue ?
                new ObjectParameter("FratradtDato", fratradtDato) :
                new ObjectParameter("FratradtDato", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusDeltager_Update", iDParameter, companyIDParameter, statusParameter, fornavnParameter, efternavnParameter, birthDayParameter, cprNrParameter, medarbnrParameter, lokationParameter, stillingParameter, adresseParameter, postnrParameter, bynavnParameter, stateParameter, landParameter, fratradtDatoParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusList_SelectByKursusDag_Result> Co2Db_KursusList_SelectByKursusDag(Nullable<int> kursusDagID)
        {
            var kursusDagIDParameter = kursusDagID.HasValue ?
                new ObjectParameter("KursusDagID", kursusDagID) :
                new ObjectParameter("KursusDagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusList_SelectByKursusDag_Result>("Co2Db_KursusList_SelectByKursusDag", kursusDagIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusList_SelectByKursusDeltager_Result> Co2Db_KursusList_SelectByKursusDeltager(Nullable<int> kursusDeltagerID)
        {
            var kursusDeltagerIDParameter = kursusDeltagerID.HasValue ?
                new ObjectParameter("KursusDeltagerID", kursusDeltagerID) :
                new ObjectParameter("KursusDeltagerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusList_SelectByKursusDeltager_Result>("Co2Db_KursusList_SelectByKursusDeltager", kursusDeltagerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_KursusPolicy_CountByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_KursusPolicy_CountByCompany", companyIDParameter);
        }
    
        public virtual int Co2Db_KursusPolicy_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusPolicy_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_KursusPolicy_GetCount(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_KursusPolicy_GetCount", companyIDParameter);
        }
    
        public virtual int Co2Db_KursusPolicy_Insert(Nullable<int> companyID, Nullable<int> status, string firstAidTitle, Nullable<int> firstAidAftale, Nullable<int> firstAidLeverandor, Nullable<int> firstAidKursusType, Nullable<int> firstAidAdminAftale, Nullable<int> firstAidRepetition, string firstAidMedarbInfo, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var firstAidTitleParameter = firstAidTitle != null ?
                new ObjectParameter("FirstAidTitle", firstAidTitle) :
                new ObjectParameter("FirstAidTitle", typeof(string));
    
            var firstAidAftaleParameter = firstAidAftale.HasValue ?
                new ObjectParameter("FirstAidAftale", firstAidAftale) :
                new ObjectParameter("FirstAidAftale", typeof(int));
    
            var firstAidLeverandorParameter = firstAidLeverandor.HasValue ?
                new ObjectParameter("FirstAidLeverandor", firstAidLeverandor) :
                new ObjectParameter("FirstAidLeverandor", typeof(int));
    
            var firstAidKursusTypeParameter = firstAidKursusType.HasValue ?
                new ObjectParameter("FirstAidKursusType", firstAidKursusType) :
                new ObjectParameter("FirstAidKursusType", typeof(int));
    
            var firstAidAdminAftaleParameter = firstAidAdminAftale.HasValue ?
                new ObjectParameter("FirstAidAdminAftale", firstAidAdminAftale) :
                new ObjectParameter("FirstAidAdminAftale", typeof(int));
    
            var firstAidRepetitionParameter = firstAidRepetition.HasValue ?
                new ObjectParameter("FirstAidRepetition", firstAidRepetition) :
                new ObjectParameter("FirstAidRepetition", typeof(int));
    
            var firstAidMedarbInfoParameter = firstAidMedarbInfo != null ?
                new ObjectParameter("FirstAidMedarbInfo", firstAidMedarbInfo) :
                new ObjectParameter("FirstAidMedarbInfo", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusPolicy_Insert", companyIDParameter, statusParameter, firstAidTitleParameter, firstAidAftaleParameter, firstAidLeverandorParameter, firstAidKursusTypeParameter, firstAidAdminAftaleParameter, firstAidRepetitionParameter, firstAidMedarbInfoParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_KursusPolicy_Purge(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusPolicy_Purge", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusPolicy_SelectAll_Result> Co2Db_KursusPolicy_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusPolicy_SelectAll_Result>("Co2Db_KursusPolicy_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_KursusPolicy_SelectAllCompanyID_Result> Co2Db_KursusPolicy_SelectAllCompanyID(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusPolicy_SelectAllCompanyID_Result>("Co2Db_KursusPolicy_SelectAllCompanyID", companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusPolicy_SelectBySearch_Result> Co2Db_KursusPolicy_SelectBySearch(string search, Nullable<int> status, Nullable<int> companyID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusPolicy_SelectBySearch_Result>("Co2Db_KursusPolicy_SelectBySearch", searchParameter, statusParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusPolicy_SelectByType_Result> Co2Db_KursusPolicy_SelectByType(Nullable<int> firstAidKursusType, Nullable<int> companyID)
        {
            var firstAidKursusTypeParameter = firstAidKursusType.HasValue ?
                new ObjectParameter("FirstAidKursusType", firstAidKursusType) :
                new ObjectParameter("FirstAidKursusType", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusPolicy_SelectByType_Result>("Co2Db_KursusPolicy_SelectByType", firstAidKursusTypeParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusPolicy_SelectID_Result> Co2Db_KursusPolicy_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusPolicy_SelectID_Result>("Co2Db_KursusPolicy_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_KursusPolicy_SelectIDByCompanyID(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_KursusPolicy_SelectIDByCompanyID", companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_KursusPolicy_SelectIDBySearch(string search, Nullable<int> status, Nullable<int> companyID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_KursusPolicy_SelectIDBySearch", searchParameter, statusParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_KursusPolicy_SelectOne_Result> Co2Db_KursusPolicy_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_KursusPolicy_SelectOne_Result>("Co2Db_KursusPolicy_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_KursusPolicy_Update(Nullable<int> iD, Nullable<int> companyID, string firstAidTitle, Nullable<int> firstAidAftale, Nullable<int> firstAidLeverandor, Nullable<int> firstAidKursusType, Nullable<int> firstAidAdminAftale, Nullable<int> firstAidRepetition, string firstAidMedarbInfo, Nullable<int> status, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var firstAidTitleParameter = firstAidTitle != null ?
                new ObjectParameter("FirstAidTitle", firstAidTitle) :
                new ObjectParameter("FirstAidTitle", typeof(string));
    
            var firstAidAftaleParameter = firstAidAftale.HasValue ?
                new ObjectParameter("FirstAidAftale", firstAidAftale) :
                new ObjectParameter("FirstAidAftale", typeof(int));
    
            var firstAidLeverandorParameter = firstAidLeverandor.HasValue ?
                new ObjectParameter("FirstAidLeverandor", firstAidLeverandor) :
                new ObjectParameter("FirstAidLeverandor", typeof(int));
    
            var firstAidKursusTypeParameter = firstAidKursusType.HasValue ?
                new ObjectParameter("FirstAidKursusType", firstAidKursusType) :
                new ObjectParameter("FirstAidKursusType", typeof(int));
    
            var firstAidAdminAftaleParameter = firstAidAdminAftale.HasValue ?
                new ObjectParameter("FirstAidAdminAftale", firstAidAdminAftale) :
                new ObjectParameter("FirstAidAdminAftale", typeof(int));
    
            var firstAidRepetitionParameter = firstAidRepetition.HasValue ?
                new ObjectParameter("FirstAidRepetition", firstAidRepetition) :
                new ObjectParameter("FirstAidRepetition", typeof(int));
    
            var firstAidMedarbInfoParameter = firstAidMedarbInfo != null ?
                new ObjectParameter("FirstAidMedarbInfo", firstAidMedarbInfo) :
                new ObjectParameter("FirstAidMedarbInfo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_KursusPolicy_Update", iDParameter, companyIDParameter, firstAidTitleParameter, firstAidAftaleParameter, firstAidLeverandorParameter, firstAidKursusTypeParameter, firstAidAdminAftaleParameter, firstAidRepetitionParameter, firstAidMedarbInfoParameter, statusParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Logline_Insert(string status, string metode, string cvrnr, string logText, string clientInfo, string rettetAf, string rettetIP, Nullable<int> logType, ObjectParameter iD)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var metodeParameter = metode != null ?
                new ObjectParameter("Metode", metode) :
                new ObjectParameter("Metode", typeof(string));
    
            var cvrnrParameter = cvrnr != null ?
                new ObjectParameter("Cvrnr", cvrnr) :
                new ObjectParameter("Cvrnr", typeof(string));
    
            var logTextParameter = logText != null ?
                new ObjectParameter("LogText", logText) :
                new ObjectParameter("LogText", typeof(string));
    
            var clientInfoParameter = clientInfo != null ?
                new ObjectParameter("ClientInfo", clientInfo) :
                new ObjectParameter("ClientInfo", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            var logTypeParameter = logType.HasValue ?
                new ObjectParameter("LogType", logType) :
                new ObjectParameter("LogType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Logline_Insert", statusParameter, metodeParameter, cvrnrParameter, logTextParameter, clientInfoParameter, rettetAfParameter, rettetIPParameter, logTypeParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Logline_SelectAll_Result> Co2Db_Logline_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Logline_SelectAll_Result>("Co2Db_Logline_SelectAll");
        }
    
        public virtual int Co2Db_Medarbejder_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Medarbejder_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Medarbejder_GetCount(Nullable<int> mgID)
        {
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Medarbejder_GetCount", mgIDParameter);
        }
    
        public virtual int Co2Db_Medarbejder_Insert(Nullable<int> mgID, Nullable<int> companyID, string cprnr, Nullable<System.DateTime> birthday, string navn, string adresse1, string adresse2, string postnr, string bynavn, Nullable<int> landID, string telefon, string mobil, string fax, string email, Nullable<System.DateTime> hospitalsforsikringIndmeldsDato, Nullable<System.DateTime> afkaldserklaringsDato, Nullable<System.DateTime> fratradelsesDato, Nullable<System.DateTime> orlovStart, Nullable<System.DateTime> orlovSlut, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var cprnrParameter = cprnr != null ?
                new ObjectParameter("Cprnr", cprnr) :
                new ObjectParameter("Cprnr", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var navnParameter = navn != null ?
                new ObjectParameter("Navn", navn) :
                new ObjectParameter("Navn", typeof(string));
    
            var adresse1Parameter = adresse1 != null ?
                new ObjectParameter("Adresse1", adresse1) :
                new ObjectParameter("Adresse1", typeof(string));
    
            var adresse2Parameter = adresse2 != null ?
                new ObjectParameter("Adresse2", adresse2) :
                new ObjectParameter("Adresse2", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var bynavnParameter = bynavn != null ?
                new ObjectParameter("Bynavn", bynavn) :
                new ObjectParameter("Bynavn", typeof(string));
    
            var landIDParameter = landID.HasValue ?
                new ObjectParameter("LandID", landID) :
                new ObjectParameter("LandID", typeof(int));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var mobilParameter = mobil != null ?
                new ObjectParameter("Mobil", mobil) :
                new ObjectParameter("Mobil", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var hospitalsforsikringIndmeldsDatoParameter = hospitalsforsikringIndmeldsDato.HasValue ?
                new ObjectParameter("HospitalsforsikringIndmeldsDato", hospitalsforsikringIndmeldsDato) :
                new ObjectParameter("HospitalsforsikringIndmeldsDato", typeof(System.DateTime));
    
            var afkaldserklaringsDatoParameter = afkaldserklaringsDato.HasValue ?
                new ObjectParameter("AfkaldserklaringsDato", afkaldserklaringsDato) :
                new ObjectParameter("AfkaldserklaringsDato", typeof(System.DateTime));
    
            var fratradelsesDatoParameter = fratradelsesDato.HasValue ?
                new ObjectParameter("FratradelsesDato", fratradelsesDato) :
                new ObjectParameter("FratradelsesDato", typeof(System.DateTime));
    
            var orlovStartParameter = orlovStart.HasValue ?
                new ObjectParameter("OrlovStart", orlovStart) :
                new ObjectParameter("OrlovStart", typeof(System.DateTime));
    
            var orlovSlutParameter = orlovSlut.HasValue ?
                new ObjectParameter("OrlovSlut", orlovSlut) :
                new ObjectParameter("OrlovSlut", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Medarbejder_Insert", mgIDParameter, companyIDParameter, cprnrParameter, birthdayParameter, navnParameter, adresse1Parameter, adresse2Parameter, postnrParameter, bynavnParameter, landIDParameter, telefonParameter, mobilParameter, faxParameter, emailParameter, hospitalsforsikringIndmeldsDatoParameter, afkaldserklaringsDatoParameter, fratradelsesDatoParameter, orlovStartParameter, orlovSlutParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Medarbejder_SelectAll_Result> Co2Db_Medarbejder_SelectAll(Nullable<int> mgID)
        {
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Medarbejder_SelectAll_Result>("Co2Db_Medarbejder_SelectAll", mgIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Medarbejder_SelectBySearch_Result> Co2Db_Medarbejder_SelectBySearch(Nullable<int> mgID, string search)
        {
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Medarbejder_SelectBySearch_Result>("Co2Db_Medarbejder_SelectBySearch", mgIDParameter, searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_Medarbejder_SelectFilter_Result> Co2Db_Medarbejder_SelectFilter(Nullable<int> mgCompanyID, Nullable<int> mgID, Nullable<int> forsikring, Nullable<int> status, Nullable<System.DateTime> dato)
        {
            var mgCompanyIDParameter = mgCompanyID.HasValue ?
                new ObjectParameter("mgCompanyID", mgCompanyID) :
                new ObjectParameter("mgCompanyID", typeof(int));
    
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            var forsikringParameter = forsikring.HasValue ?
                new ObjectParameter("Forsikring", forsikring) :
                new ObjectParameter("Forsikring", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var datoParameter = dato.HasValue ?
                new ObjectParameter("Dato", dato) :
                new ObjectParameter("Dato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Medarbejder_SelectFilter_Result>("Co2Db_Medarbejder_SelectFilter", mgCompanyIDParameter, mgIDParameter, forsikringParameter, statusParameter, datoParameter);
        }
    
        public virtual ObjectResult<Co2Db_Medarbejder_SelectMedarbejderGlobal_Result> Co2Db_Medarbejder_SelectMedarbejderGlobal(Nullable<int> mgCompanyID, string navn, string vej, string postnr, Nullable<System.DateTime> birthday, string search)
        {
            var mgCompanyIDParameter = mgCompanyID.HasValue ?
                new ObjectParameter("mgCompanyID", mgCompanyID) :
                new ObjectParameter("mgCompanyID", typeof(int));
    
            var navnParameter = navn != null ?
                new ObjectParameter("navn", navn) :
                new ObjectParameter("navn", typeof(string));
    
            var vejParameter = vej != null ?
                new ObjectParameter("vej", vej) :
                new ObjectParameter("vej", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("postnr", postnr) :
                new ObjectParameter("postnr", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Medarbejder_SelectMedarbejderGlobal_Result>("Co2Db_Medarbejder_SelectMedarbejderGlobal", mgCompanyIDParameter, navnParameter, vejParameter, postnrParameter, birthdayParameter, searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_Medarbejder_SelectMedArbGrp_Result> Co2Db_Medarbejder_SelectMedArbGrp(Nullable<int> mgCompanyID, string search)
        {
            var mgCompanyIDParameter = mgCompanyID.HasValue ?
                new ObjectParameter("mgCompanyID", mgCompanyID) :
                new ObjectParameter("mgCompanyID", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Medarbejder_SelectMedArbGrp_Result>("Co2Db_Medarbejder_SelectMedArbGrp", mgCompanyIDParameter, searchParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Medarbejder_SelectName(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Medarbejder_SelectName", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Medarbejder_SelectOne_Result> Co2Db_Medarbejder_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Medarbejder_SelectOne_Result>("Co2Db_Medarbejder_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_Medarbejder_Update(Nullable<int> iD, Nullable<int> mgID, Nullable<int> companyID, string cprnr, Nullable<System.DateTime> birthday, string navn, string adresse1, string adresse2, string postnr, string bynavn, Nullable<int> landID, string telefon, string mobil, string fax, string email, Nullable<System.DateTime> hospitalsforsikringIndmeldsDato, Nullable<System.DateTime> afkaldserklaringsDato, Nullable<System.DateTime> fratradelsesDato, Nullable<System.DateTime> orlovStart, Nullable<System.DateTime> orlovSlut, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var cprnrParameter = cprnr != null ?
                new ObjectParameter("Cprnr", cprnr) :
                new ObjectParameter("Cprnr", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var navnParameter = navn != null ?
                new ObjectParameter("Navn", navn) :
                new ObjectParameter("Navn", typeof(string));
    
            var adresse1Parameter = adresse1 != null ?
                new ObjectParameter("Adresse1", adresse1) :
                new ObjectParameter("Adresse1", typeof(string));
    
            var adresse2Parameter = adresse2 != null ?
                new ObjectParameter("Adresse2", adresse2) :
                new ObjectParameter("Adresse2", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var bynavnParameter = bynavn != null ?
                new ObjectParameter("Bynavn", bynavn) :
                new ObjectParameter("Bynavn", typeof(string));
    
            var landIDParameter = landID.HasValue ?
                new ObjectParameter("LandID", landID) :
                new ObjectParameter("LandID", typeof(int));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var mobilParameter = mobil != null ?
                new ObjectParameter("Mobil", mobil) :
                new ObjectParameter("Mobil", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var hospitalsforsikringIndmeldsDatoParameter = hospitalsforsikringIndmeldsDato.HasValue ?
                new ObjectParameter("HospitalsforsikringIndmeldsDato", hospitalsforsikringIndmeldsDato) :
                new ObjectParameter("HospitalsforsikringIndmeldsDato", typeof(System.DateTime));
    
            var afkaldserklaringsDatoParameter = afkaldserklaringsDato.HasValue ?
                new ObjectParameter("AfkaldserklaringsDato", afkaldserklaringsDato) :
                new ObjectParameter("AfkaldserklaringsDato", typeof(System.DateTime));
    
            var fratradelsesDatoParameter = fratradelsesDato.HasValue ?
                new ObjectParameter("FratradelsesDato", fratradelsesDato) :
                new ObjectParameter("FratradelsesDato", typeof(System.DateTime));
    
            var orlovStartParameter = orlovStart.HasValue ?
                new ObjectParameter("OrlovStart", orlovStart) :
                new ObjectParameter("OrlovStart", typeof(System.DateTime));
    
            var orlovSlutParameter = orlovSlut.HasValue ?
                new ObjectParameter("OrlovSlut", orlovSlut) :
                new ObjectParameter("OrlovSlut", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Medarbejder_Update", iDParameter, mgIDParameter, companyIDParameter, cprnrParameter, birthdayParameter, navnParameter, adresse1Parameter, adresse2Parameter, postnrParameter, bynavnParameter, landIDParameter, telefonParameter, mobilParameter, faxParameter, emailParameter, hospitalsforsikringIndmeldsDatoParameter, afkaldserklaringsDatoParameter, fratradelsesDatoParameter, orlovStartParameter, orlovSlutParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_MedarbejderGruppe_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_MedarbejderGruppe_Delete", iDParameter);
        }
    
        public virtual int Co2Db_MedarbejderGruppe_Delete_MemberCvrnr(Nullable<int> iD, Nullable<int> companyID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_MedarbejderGruppe_Delete_MemberCvrnr", iDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_MedarbejderGruppe_GetCount(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_MedarbejderGruppe_GetCount", companyIDParameter);
        }
    
        public virtual int Co2Db_MedarbejderGruppe_Insert(Nullable<int> companyID, string navn, string brugernavn, string kodeord, string password, string iP, Nullable<System.DateTime> dato, Nullable<bool> informationssite, Nullable<bool> administrationssite, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var navnParameter = navn != null ?
                new ObjectParameter("Navn", navn) :
                new ObjectParameter("Navn", typeof(string));
    
            var brugernavnParameter = brugernavn != null ?
                new ObjectParameter("Brugernavn", brugernavn) :
                new ObjectParameter("Brugernavn", typeof(string));
    
            var kodeordParameter = kodeord != null ?
                new ObjectParameter("Kodeord", kodeord) :
                new ObjectParameter("Kodeord", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var datoParameter = dato.HasValue ?
                new ObjectParameter("Dato", dato) :
                new ObjectParameter("Dato", typeof(System.DateTime));
    
            var informationssiteParameter = informationssite.HasValue ?
                new ObjectParameter("Informationssite", informationssite) :
                new ObjectParameter("Informationssite", typeof(bool));
    
            var administrationssiteParameter = administrationssite.HasValue ?
                new ObjectParameter("Administrationssite", administrationssite) :
                new ObjectParameter("Administrationssite", typeof(bool));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_MedarbejderGruppe_Insert", companyIDParameter, navnParameter, brugernavnParameter, kodeordParameter, passwordParameter, iPParameter, datoParameter, informationssiteParameter, administrationssiteParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_MedarbejderGruppe_Insert_MemberCvrnr(Nullable<int> iD, Nullable<int> companyID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_MedarbejderGruppe_Insert_MemberCvrnr", iDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_MedarbejderGruppe_MemberCvrnr_Result> Co2Db_MedarbejderGruppe_MemberCvrnr(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_MedarbejderGruppe_MemberCvrnr_Result>("Co2Db_MedarbejderGruppe_MemberCvrnr", iDParameter);
        }
    
        public virtual int Co2Db_MedarbejderGruppe_MoveDown(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_MedarbejderGruppe_MoveDown", iDParameter);
        }
    
        public virtual int Co2Db_MedarbejderGruppe_MoveUp(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_MedarbejderGruppe_MoveUp", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_MedarbejderGruppe_SelectAll_Result> Co2Db_MedarbejderGruppe_SelectAll(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_MedarbejderGruppe_SelectAll_Result>("Co2Db_MedarbejderGruppe_SelectAll", companyIDParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_MedarbejderGruppe_SelectName(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_MedarbejderGruppe_SelectName", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_MedarbejderGruppe_SelectOne_Result> Co2Db_MedarbejderGruppe_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_MedarbejderGruppe_SelectOne_Result>("Co2Db_MedarbejderGruppe_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_MedarbejderGruppe_Update(Nullable<int> iD, Nullable<bool> aktiv, Nullable<int> companyID, string navn, string brugernavn, string kodeord, string password, string iP, Nullable<System.DateTime> dato, Nullable<bool> informationssite, Nullable<bool> administrationssite, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var navnParameter = navn != null ?
                new ObjectParameter("Navn", navn) :
                new ObjectParameter("Navn", typeof(string));
    
            var brugernavnParameter = brugernavn != null ?
                new ObjectParameter("Brugernavn", brugernavn) :
                new ObjectParameter("Brugernavn", typeof(string));
    
            var kodeordParameter = kodeord != null ?
                new ObjectParameter("Kodeord", kodeord) :
                new ObjectParameter("Kodeord", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var datoParameter = dato.HasValue ?
                new ObjectParameter("Dato", dato) :
                new ObjectParameter("Dato", typeof(System.DateTime));
    
            var informationssiteParameter = informationssite.HasValue ?
                new ObjectParameter("Informationssite", informationssite) :
                new ObjectParameter("Informationssite", typeof(bool));
    
            var administrationssiteParameter = administrationssite.HasValue ?
                new ObjectParameter("Administrationssite", administrationssite) :
                new ObjectParameter("Administrationssite", typeof(bool));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_MedarbejderGruppe_Update", iDParameter, aktivParameter, companyIDParameter, navnParameter, brugernavnParameter, kodeordParameter, passwordParameter, iPParameter, datoParameter, informationssiteParameter, administrationssiteParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_News_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_News_Delete", iDParameter);
        }
    
        public virtual int Co2Db_News_Insert(Nullable<int> newsGrpID, Nullable<int> status, string title, string teaser, string body, string linkUrl, Nullable<int> linkTarget, Nullable<System.DateTime> publishDate, Nullable<System.DateTime> expiredDate, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var newsGrpIDParameter = newsGrpID.HasValue ?
                new ObjectParameter("NewsGrpID", newsGrpID) :
                new ObjectParameter("NewsGrpID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var teaserParameter = teaser != null ?
                new ObjectParameter("Teaser", teaser) :
                new ObjectParameter("Teaser", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var linkUrlParameter = linkUrl != null ?
                new ObjectParameter("LinkUrl", linkUrl) :
                new ObjectParameter("LinkUrl", typeof(string));
    
            var linkTargetParameter = linkTarget.HasValue ?
                new ObjectParameter("LinkTarget", linkTarget) :
                new ObjectParameter("LinkTarget", typeof(int));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_News_Insert", newsGrpIDParameter, statusParameter, titleParameter, teaserParameter, bodyParameter, linkUrlParameter, linkTargetParameter, publishDateParameter, expiredDateParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_News_SelectAll_Result> Co2Db_News_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_News_SelectAll_Result>("Co2Db_News_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_News_SelectAllNewsGrp_Result> Co2Db_News_SelectAllNewsGrp(Nullable<int> newsGrpID)
        {
            var newsGrpIDParameter = newsGrpID.HasValue ?
                new ObjectParameter("NewsGrpID", newsGrpID) :
                new ObjectParameter("NewsGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_News_SelectAllNewsGrp_Result>("Co2Db_News_SelectAllNewsGrp", newsGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_News_SelectBySearch_Result> Co2Db_News_SelectBySearch(string search, Nullable<int> status, Nullable<int> newsGrpID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var newsGrpIDParameter = newsGrpID.HasValue ?
                new ObjectParameter("NewsGrpID", newsGrpID) :
                new ObjectParameter("NewsGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_News_SelectBySearch_Result>("Co2Db_News_SelectBySearch", searchParameter, statusParameter, newsGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_News_SelectID_Result> Co2Db_News_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_News_SelectID_Result>("Co2Db_News_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_News_SelectIDByNewsGrp(Nullable<int> newsGrpID)
        {
            var newsGrpIDParameter = newsGrpID.HasValue ?
                new ObjectParameter("NewsGrpID", newsGrpID) :
                new ObjectParameter("NewsGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_News_SelectIDByNewsGrp", newsGrpIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_News_SelectIDBySearch(string search, Nullable<int> status, Nullable<int> newsGrpID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var newsGrpIDParameter = newsGrpID.HasValue ?
                new ObjectParameter("NewsGrpID", newsGrpID) :
                new ObjectParameter("NewsGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_News_SelectIDBySearch", searchParameter, statusParameter, newsGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_News_SelectOne_Result> Co2Db_News_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_News_SelectOne_Result>("Co2Db_News_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_News_Update(Nullable<int> iD, Nullable<int> newsGrpID, Nullable<int> status, string title, string teaser, string body, string linkUrl, Nullable<int> linkTarget, Nullable<System.DateTime> publishDate, Nullable<System.DateTime> expiredDate, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var newsGrpIDParameter = newsGrpID.HasValue ?
                new ObjectParameter("NewsGrpID", newsGrpID) :
                new ObjectParameter("NewsGrpID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var teaserParameter = teaser != null ?
                new ObjectParameter("Teaser", teaser) :
                new ObjectParameter("Teaser", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var linkUrlParameter = linkUrl != null ?
                new ObjectParameter("LinkUrl", linkUrl) :
                new ObjectParameter("LinkUrl", typeof(string));
    
            var linkTargetParameter = linkTarget.HasValue ?
                new ObjectParameter("LinkTarget", linkTarget) :
                new ObjectParameter("LinkTarget", typeof(int));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_News_Update", iDParameter, newsGrpIDParameter, statusParameter, titleParameter, teaserParameter, bodyParameter, linkUrlParameter, linkTargetParameter, publishDateParameter, expiredDateParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_NewsGrp_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_NewsGrp_Delete", iDParameter);
        }
    
        public virtual int Co2Db_NewsGrp_Insert(Nullable<int> parentID, string newsGrpNr, string newsGrpTekst, ObjectParameter iD)
        {
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var newsGrpNrParameter = newsGrpNr != null ?
                new ObjectParameter("NewsGrpNr", newsGrpNr) :
                new ObjectParameter("NewsGrpNr", typeof(string));
    
            var newsGrpTekstParameter = newsGrpTekst != null ?
                new ObjectParameter("NewsGrpTekst", newsGrpTekst) :
                new ObjectParameter("NewsGrpTekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_NewsGrp_Insert", parentIDParameter, newsGrpNrParameter, newsGrpTekstParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_NewsGrp_SelectAll_Result> Co2Db_NewsGrp_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_NewsGrp_SelectAll_Result>("Co2Db_NewsGrp_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_NewsGrp_SelectAllByParent_Result> Co2Db_NewsGrp_SelectAllByParent(Nullable<int> parentID)
        {
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_NewsGrp_SelectAllByParent_Result>("Co2Db_NewsGrp_SelectAllByParent", parentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_NewsGrp_SelectAllList_Result> Co2Db_NewsGrp_SelectAllList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_NewsGrp_SelectAllList_Result>("Co2Db_NewsGrp_SelectAllList");
        }
    
        public virtual ObjectResult<Co2Db_NewsGrp_SelectBySearch_Result> Co2Db_NewsGrp_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_NewsGrp_SelectBySearch_Result>("Co2Db_NewsGrp_SelectBySearch", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_NewsGrp_SelectID_Result> Co2Db_NewsGrp_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_NewsGrp_SelectID_Result>("Co2Db_NewsGrp_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_NewsGrp_SelectOne_Result> Co2Db_NewsGrp_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_NewsGrp_SelectOne_Result>("Co2Db_NewsGrp_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_NewsGrp_Update(Nullable<int> iD, Nullable<int> parentID, string newsGrpNr, string newsGrpTekst)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var newsGrpNrParameter = newsGrpNr != null ?
                new ObjectParameter("NewsGrpNr", newsGrpNr) :
                new ObjectParameter("NewsGrpNr", typeof(string));
    
            var newsGrpTekstParameter = newsGrpTekst != null ?
                new ObjectParameter("NewsGrpTekst", newsGrpTekst) :
                new ObjectParameter("NewsGrpTekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_NewsGrp_Update", iDParameter, parentIDParameter, newsGrpNrParameter, newsGrpTekstParameter);
        }
    
        public virtual int Co2Db_Noter_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Noter_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Noter_Delete_ByCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Noter_Delete_ByCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Noter_GetCount(Nullable<int> companyID, Nullable<int> medarbejderID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Noter_GetCount", companyIDParameter, medarbejderIDParameter);
        }
    
        public virtual int Co2Db_Noter_Insert(Nullable<int> type, Nullable<int> companyID, Nullable<int> medarbejderID, Nullable<int> status, string overskrift, string tekst, Nullable<int> dokumentID, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var overskriftParameter = overskrift != null ?
                new ObjectParameter("Overskrift", overskrift) :
                new ObjectParameter("Overskrift", typeof(string));
    
            var tekstParameter = tekst != null ?
                new ObjectParameter("Tekst", tekst) :
                new ObjectParameter("Tekst", typeof(string));
    
            var dokumentIDParameter = dokumentID.HasValue ?
                new ObjectParameter("DokumentID", dokumentID) :
                new ObjectParameter("DokumentID", typeof(int));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Noter_Insert", typeParameter, companyIDParameter, medarbejderIDParameter, statusParameter, overskriftParameter, tekstParameter, dokumentIDParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Noter_SelectAll_Result> Co2Db_Noter_SelectAll(Nullable<int> companyID, Nullable<int> medarbejderID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Noter_SelectAll_Result>("Co2Db_Noter_SelectAll", companyIDParameter, medarbejderIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Noter_SelectByType_Result> Co2Db_Noter_SelectByType(Nullable<int> type, Nullable<int> companyID, Nullable<int> medarbejderID)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Noter_SelectByType_Result>("Co2Db_Noter_SelectByType", typeParameter, companyIDParameter, medarbejderIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Noter_SelectOne_Result> Co2Db_Noter_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Noter_SelectOne_Result>("Co2Db_Noter_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_Noter_Update(Nullable<int> iD, Nullable<int> type, Nullable<int> companyID, Nullable<int> medarbejderID, Nullable<int> status, string overskrift, string tekst, Nullable<int> dokumentID, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var medarbejderIDParameter = medarbejderID.HasValue ?
                new ObjectParameter("MedarbejderID", medarbejderID) :
                new ObjectParameter("MedarbejderID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var overskriftParameter = overskrift != null ?
                new ObjectParameter("Overskrift", overskrift) :
                new ObjectParameter("Overskrift", typeof(string));
    
            var tekstParameter = tekst != null ?
                new ObjectParameter("Tekst", tekst) :
                new ObjectParameter("Tekst", typeof(string));
    
            var dokumentIDParameter = dokumentID.HasValue ?
                new ObjectParameter("DokumentID", dokumentID) :
                new ObjectParameter("DokumentID", typeof(int));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Noter_Update", iDParameter, typeParameter, companyIDParameter, medarbejderIDParameter, statusParameter, overskriftParameter, tekstParameter, dokumentIDParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_PageAccess_Delete(string applicationName, string page)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageParameter = page != null ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PageAccess_Delete", applicationNameParameter, pageParameter);
        }
    
        public virtual int Co2Db_PageAccess_Get(string applicationName, string page)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageParameter = page != null ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PageAccess_Get", applicationNameParameter, pageParameter);
        }
    
        public virtual int Co2Db_PageAccess_GetOut(string applicationName, string page, ObjectParameter access)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageParameter = page != null ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PageAccess_GetOut", applicationNameParameter, pageParameter, access);
        }
    
        public virtual int Co2Db_PageAccess_Update(string applicationName, string page, string access, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageParameter = page != null ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(string));
    
            var accessParameter = access != null ?
                new ObjectParameter("Access", access) :
                new ObjectParameter("Access", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PageAccess_Update", applicationNameParameter, pageParameter, accessParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_Pax_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Pax_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Pax_Insert(Nullable<int> companyID, Nullable<int> status, Nullable<int> modelID, string serialNo, Nullable<int> invoiceID, Nullable<System.DateTime> salesDate, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var salesDateParameter = salesDate.HasValue ?
                new ObjectParameter("SalesDate", salesDate) :
                new ObjectParameter("SalesDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Pax_Insert", companyIDParameter, statusParameter, modelIDParameter, serialNoParameter, invoiceIDParameter, salesDateParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_Pax_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Pax_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pax_SelectAll_Result> Co2Db_Pax_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pax_SelectAll_Result>("Co2Db_Pax_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pax_SelectCompanyID_Result> Co2Db_Pax_SelectCompanyID(Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> companyID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pax_SelectCompanyID_Result>("Co2Db_Pax_SelectCompanyID", isAgentParameter, agentIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pax_SelectID_Result> Co2Db_Pax_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pax_SelectID_Result>("Co2Db_Pax_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pax_SelectModelID_Result> Co2Db_Pax_SelectModelID(Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> modelID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pax_SelectModelID_Result>("Co2Db_Pax_SelectModelID", isAgentParameter, agentIDParameter, modelIDParameter);
        }
    
        public virtual int Co2Db_Pax_Update(Nullable<int> iD, Nullable<int> companyID, Nullable<int> status, Nullable<int> modelID, string serialNo, Nullable<int> invoiceID, Nullable<System.DateTime> salesDate, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var salesDateParameter = salesDate.HasValue ?
                new ObjectParameter("SalesDate", salesDate) :
                new ObjectParameter("SalesDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Pax_Update", iDParameter, companyIDParameter, statusParameter, modelIDParameter, serialNoParameter, invoiceIDParameter, salesDateParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Pensionsopsparing_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Pensionsopsparing_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Pensionsopsparing_GetCount(Nullable<int> medarbejderGruppeID)
        {
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Pensionsopsparing_GetCount", medarbejderGruppeIDParameter);
        }
    
        public virtual int Co2Db_Pensionsopsparing_Insert(Nullable<int> status, Nullable<int> medarbejderGruppeID, Nullable<int> leverandorID, Nullable<System.DateTime> etableringsdato, Nullable<int> forfald, Nullable<int> indmeldelsestidspunkt, Nullable<int> indmeldelsestidspunktAnsat, Nullable<int> indmeldelsestidspunktAnciennitet, Nullable<int> indmeldelsestidspunktFyldte, Nullable<int> tidligst, Nullable<int> tidligstFyldte, Nullable<int> senest, Nullable<int> senest2FrivilligOver, Nullable<int> senest3IkkeNyansatteOver, Nullable<int> indmeldelseskriterier, Nullable<bool> indmeldelseskriterier2frivillig, Nullable<int> undtagelser, string undtagelser3Fritekst, Nullable<bool> invalidepension, Nullable<int> invalidepensionType, Nullable<int> basisInvalidepensioniPctAfGage, Nullable<int> basisInvalidepensioniPctAfGageUdlob, Nullable<int> basisInvalidepensionDaekning, Nullable<int> frivilligInvalidepensioniPctAfGage, Nullable<int> frivilligInvalidepensioniPctAfGageUdlob, Nullable<int> frivilligInvalidepensionDaekning, Nullable<int> frivilligInvalidepensionDaekning2PctAfGage, Nullable<decimal> basisInvalidepensioniKr, Nullable<int> basisInvalidepensioniKrUdlob, Nullable<decimal> frivilligInvalidepensioniKr, Nullable<int> frivilligInvalidepensioniKrUdlob, Nullable<decimal> invalidepensionMindstKr, Nullable<bool> invalidesum, Nullable<int> invalidesumType, Nullable<int> basisInvalidesumPctAfGage, Nullable<int> basisInvalidesumUdlob, Nullable<int> basisInvalidesumPctDaekning, Nullable<int> frivilligInvalidesumPctAfGage, Nullable<int> frivilligInvalidesumPctUdlob, Nullable<int> frivilligInvalidesumPctDaekning, Nullable<int> frivilligInvalidesumPctSolidariskDaekning, Nullable<int> basisInvalidesumSkattekode, Nullable<int> frivilligInvalidesumSkattekode, Nullable<decimal> basisInvalidesumKr, Nullable<int> basisInvalidesumKrUdlob, Nullable<int> basisInvalidesumKrDaekning, Nullable<decimal> frivilligInvalidesumKr, Nullable<int> frivilligInvalidesumKrUdlob, Nullable<int> frivilligInvalidesumKrDaekning, Nullable<decimal> frivilligInvalidesumKrGruppedaekningKr, Nullable<decimal> invalidesumMinimum, Nullable<bool> kritiskSygdom, Nullable<bool> kritiskSygdomType, Nullable<int> basisKritiskSygdomPctAfGage, Nullable<int> basisKritiskSygdomUdlob, Nullable<int> basisKritiskSygdomPctDaekning, Nullable<int> frivilligKritiskSygdomPctAfGage, Nullable<int> frivilligKritiskSygdomPctUdlob, Nullable<int> frivilligKritiskSygdomPctDaekning, Nullable<int> frivilligKritiskSygdomPctSolidariskDaekning, Nullable<decimal> basisKritiskSygdomKr, Nullable<int> basisKritiskSygdomKrUdlob, Nullable<int> basisKritiskSygdomKrDaekning, Nullable<decimal> frivilligKritiskSygdomKr, Nullable<int> frivilligKritiskSygdomKrUdlob, Nullable<int> frivilligKritiskSygdomKrDaekning, Nullable<decimal> frivilligKritiskSygdomKrGruppedaekningKr, Nullable<decimal> basisKritiskSygdomMinimum, Nullable<bool> sygdomBornepension, Nullable<int> basisSygdomBornepensionType, Nullable<int> basisSygdomBornepensioniPctAfGage, Nullable<int> basisSygdomBornepensioniPctAfGageUdlob, Nullable<int> basisSygdomBornepensionDaekning, Nullable<int> frivilligSygdomBornepensioniPctAfGage, Nullable<int> frivilligSygdomBornepensioniPctAfGageUdlob, Nullable<int> frivilligSygdomBornepensionDaekning, Nullable<int> frivilligSygdomBornepensionDaekning2PctSolidariskDaekning, Nullable<decimal> basisSygdomBornepensioniKr, Nullable<int> basisSygdomBornepensioniKrUdlob, Nullable<decimal> frivilligSygdomBornepensioniKr, Nullable<int> frivilligSygdomBornepensioniKrUdlob, Nullable<decimal> basisSygdomBornepensionMindstKr, Nullable<bool> dodfaldssum, Nullable<int> dodfaldssumType, Nullable<int> basisDodfaldssumPctAfGage, Nullable<int> basisDodfaldssumUdlob, Nullable<int> basisDodfaldssumPctDaekning, Nullable<int> frivilligDodfaldssumPctAfGage, Nullable<int> frivilligDodfaldssumPctUdlob, Nullable<int> frivilligDodfaldssumPctDaekning, Nullable<int> frivilligDodfaldssumPctSolidariskDaekning, Nullable<int> basisDodfaldssumSkattekode, Nullable<int> frivilligDodfaldssumSkattekode, Nullable<decimal> basisDodfaldssumKr, Nullable<int> basisDodfaldssumKrUdlob, Nullable<int> basisDodfaldssumKrDaekning, Nullable<decimal> frivilligDodfaldssumKr, Nullable<int> frivilligDodfaldssumKrUdlob, Nullable<int> frivilligDodfaldssumKrDaekning, Nullable<decimal> frivilligDodfaldssumKrGruppedaekningKr, Nullable<decimal> basisDodfaldssumMinimum, Nullable<bool> reservesikring, Nullable<int> reservesikringType, Nullable<int> reservesikringJa, Nullable<bool> dodBornepension, Nullable<int> basisDodBornepension, Nullable<int> basisDodBornepensioniPctAfGage, Nullable<int> basisDodBornepensioniPctAfGageUdlob, Nullable<int> basisDodBornepensionDaekning, Nullable<int> frivilligDodBornepensioniPctAfGage, Nullable<int> frivilligDodBornepensioniPctAfGageUdlob, Nullable<int> frivilligDodBornepensionDaekning, Nullable<int> frivilligDodBornepensionDaekning2SolidariskPctAfGage, Nullable<decimal> basisDodBornepensioniKr, Nullable<int> basisDodBornepensioniKrUdlob, Nullable<decimal> frivilligDodBornepensioniKr, Nullable<int> frivilligDodBornepensioniKrUdlob, Nullable<decimal> basisDodBornepensionMindstKr, Nullable<bool> aEgtefaellepension, Nullable<int> basisDodAEgtefaellepension, Nullable<int> basisDodAEgtefaellepensioniPctAfGage, Nullable<int> basisDodAEgtefaellepensioniPctAfGageUdlob, Nullable<int> basisDodAEgtefaellepensionDaekning, Nullable<int> frivilligDodAEgtefaellepensioniPctAfGage, Nullable<int> frivilligDodAEgtefaellepensioniPctAfGageUdlob, Nullable<int> frivilligDodAEgtefaellepensionDaekning, Nullable<int> frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage, Nullable<decimal> basisDodAEgtefaellepensioniKr, Nullable<int> basisDodAEgtefaellepensioniKrUdlob, Nullable<decimal> frivilligDodAEgtefaellepensioniKr, Nullable<int> frivilligDodAEgtefaellepensioniKrUdlob, Nullable<int> obligatoriskPensionsbidrag, Nullable<int> obligatoriskPensionsbidragSkala, Nullable<int> obligatoriskPensionsbidragIngenSkalaVirkBidragPct, Nullable<decimal> obligatoriskPensionsbidragIngenSkalaVirkBidragKr, Nullable<int> obligatoriskPensionsbidragIngenSkalaMedArbBidragPct, Nullable<decimal> obligatoriskPensionsbidragIngenSkalaMedArbBidragKr, Nullable<System.DateTime> skalaDato1, Nullable<int> skalaDatoVirksomhedsbidrag1, Nullable<int> skalaDatoMedarbejderbidrag1, Nullable<System.DateTime> skalaDato2, Nullable<int> skalaDatoVirksomhedsbidrag2, Nullable<int> skalaDatoMedarbejderbidrag2, Nullable<System.DateTime> skalaDato3, Nullable<int> skalaDatoVirksomhedsbidrag3, Nullable<int> skalaDatoMedarbejderbidrag3, Nullable<System.DateTime> skalaDato4, Nullable<int> skalaDatoVirksomhedsbidrag4, Nullable<int> skalaDatoMedarbejderbidrag4, Nullable<System.DateTime> skalaDato5, Nullable<int> skalaDatoVirksomhedsbidrag5, Nullable<int> skalaDatoMedarbejderbidrag5, Nullable<int> skalaAlder1, Nullable<int> skalaAlderVirksomhedsbidrag1, Nullable<int> skalaAlderMedarbejderbidrag1, Nullable<int> skalaAlder2, Nullable<int> skalaAlderVirksomhedsbidrag2, Nullable<int> skalaAlderMedarbejderbidrag2, Nullable<int> skalaAlder3, Nullable<int> skalaAlderVirksomhedsbidrag3, Nullable<int> skalaAlderMedarbejderbidrag3, Nullable<int> skalaAlder4, Nullable<int> skalaAlderVirksomhedsbidrag4, Nullable<int> skalaAlderMedarbejderbidrag4, Nullable<int> skalaAlder5, Nullable<int> skalaAlderVirksomhedsbidrag5, Nullable<int> skalaAlderMedarbejderbidrag5, Nullable<int> skalaAnciennitet1, Nullable<int> skalaAnciennitetVirksomhedsbidrag1, Nullable<int> skalaAnciennitetMedarbejderbidrag1, Nullable<int> skalaAnciennitet2, Nullable<int> skalaAnciennitetVirksomhedsbidrag2, Nullable<int> skalaAnciennitetMedarbejderbidrag2, Nullable<int> skalaAnciennitet3, Nullable<int> skalaAnciennitetVirksomhedsbidrag3, Nullable<int> skalaAnciennitetMedarbejderbidrag3, Nullable<int> skalaAnciennitet4, Nullable<int> skalaAnciennitetVirksomhedsbidrag4, Nullable<int> skalaAnciennitetMedarbejderbidrag4, Nullable<int> skalaAnciennitet5, Nullable<int> skalaAnciennitetVirksomhedsbidrag5, Nullable<int> skalaAnciennitetMedarbejderbidrag5, Nullable<int> overenskomstforhold, Nullable<int> overenskomstforholdOverenskomster, Nullable<int> genkob, Nullable<bool> opsparingstyperKapitalpension, Nullable<int> opsparingstyperKapitalpensionUdlob, Nullable<bool> opsparingstyperRatepension, Nullable<int> opsparingstyperRatepensionUdlob, Nullable<bool> opsparingstyperLivrentepension, Nullable<int> opsparingstyperLivrentepensionUdlob, Nullable<int> opsparingstyperKrav, Nullable<int> opsparingstyperKravRatePct, Nullable<int> opsparingstyperKravLivsvarigPct, Nullable<int> opsparingsform, Nullable<int> opsparingsform2LinkopsparingPct, Nullable<int> opsparingsform2AMPmarkedsopsparingPct, Nullable<int> helbredsoplysninger, Nullable<int> helbredsoplysningerNytegning, Nullable<int> helbredsoplysningerNytegning3PersonligeHelbredsoplysningerType, Nullable<int> helbredsoplysningerAttestgraense, Nullable<int> servicekonceptIndmeldelse, Nullable<int> policeudstedelse, Nullable<int> omkostninger, Nullable<bool> sitesInformationssite, Nullable<bool> sitesAdministrationssite, Nullable<int> sitesKontaktpersoner, string noter, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(int));
    
            var etableringsdatoParameter = etableringsdato.HasValue ?
                new ObjectParameter("Etableringsdato", etableringsdato) :
                new ObjectParameter("Etableringsdato", typeof(System.DateTime));
    
            var forfaldParameter = forfald.HasValue ?
                new ObjectParameter("Forfald", forfald) :
                new ObjectParameter("Forfald", typeof(int));
    
            var indmeldelsestidspunktParameter = indmeldelsestidspunkt.HasValue ?
                new ObjectParameter("Indmeldelsestidspunkt", indmeldelsestidspunkt) :
                new ObjectParameter("Indmeldelsestidspunkt", typeof(int));
    
            var indmeldelsestidspunktAnsatParameter = indmeldelsestidspunktAnsat.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktAnsat", indmeldelsestidspunktAnsat) :
                new ObjectParameter("IndmeldelsestidspunktAnsat", typeof(int));
    
            var indmeldelsestidspunktAnciennitetParameter = indmeldelsestidspunktAnciennitet.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktAnciennitet", indmeldelsestidspunktAnciennitet) :
                new ObjectParameter("IndmeldelsestidspunktAnciennitet", typeof(int));
    
            var indmeldelsestidspunktFyldteParameter = indmeldelsestidspunktFyldte.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktFyldte", indmeldelsestidspunktFyldte) :
                new ObjectParameter("IndmeldelsestidspunktFyldte", typeof(int));
    
            var tidligstParameter = tidligst.HasValue ?
                new ObjectParameter("Tidligst", tidligst) :
                new ObjectParameter("Tidligst", typeof(int));
    
            var tidligstFyldteParameter = tidligstFyldte.HasValue ?
                new ObjectParameter("TidligstFyldte", tidligstFyldte) :
                new ObjectParameter("TidligstFyldte", typeof(int));
    
            var senestParameter = senest.HasValue ?
                new ObjectParameter("Senest", senest) :
                new ObjectParameter("Senest", typeof(int));
    
            var senest2FrivilligOverParameter = senest2FrivilligOver.HasValue ?
                new ObjectParameter("Senest2FrivilligOver", senest2FrivilligOver) :
                new ObjectParameter("Senest2FrivilligOver", typeof(int));
    
            var senest3IkkeNyansatteOverParameter = senest3IkkeNyansatteOver.HasValue ?
                new ObjectParameter("Senest3IkkeNyansatteOver", senest3IkkeNyansatteOver) :
                new ObjectParameter("Senest3IkkeNyansatteOver", typeof(int));
    
            var indmeldelseskriterierParameter = indmeldelseskriterier.HasValue ?
                new ObjectParameter("Indmeldelseskriterier", indmeldelseskriterier) :
                new ObjectParameter("Indmeldelseskriterier", typeof(int));
    
            var indmeldelseskriterier2frivilligParameter = indmeldelseskriterier2frivillig.HasValue ?
                new ObjectParameter("Indmeldelseskriterier2frivillig", indmeldelseskriterier2frivillig) :
                new ObjectParameter("Indmeldelseskriterier2frivillig", typeof(bool));
    
            var undtagelserParameter = undtagelser.HasValue ?
                new ObjectParameter("Undtagelser", undtagelser) :
                new ObjectParameter("Undtagelser", typeof(int));
    
            var undtagelser3FritekstParameter = undtagelser3Fritekst != null ?
                new ObjectParameter("Undtagelser3Fritekst", undtagelser3Fritekst) :
                new ObjectParameter("Undtagelser3Fritekst", typeof(string));
    
            var invalidepensionParameter = invalidepension.HasValue ?
                new ObjectParameter("Invalidepension", invalidepension) :
                new ObjectParameter("Invalidepension", typeof(bool));
    
            var invalidepensionTypeParameter = invalidepensionType.HasValue ?
                new ObjectParameter("InvalidepensionType", invalidepensionType) :
                new ObjectParameter("InvalidepensionType", typeof(int));
    
            var basisInvalidepensioniPctAfGageParameter = basisInvalidepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisInvalidepensioniPctAfGage", basisInvalidepensioniPctAfGage) :
                new ObjectParameter("BasisInvalidepensioniPctAfGage", typeof(int));
    
            var basisInvalidepensioniPctAfGageUdlobParameter = basisInvalidepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisInvalidepensioniPctAfGageUdlob", basisInvalidepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisInvalidepensioniPctAfGageUdlob", typeof(int));
    
            var basisInvalidepensionDaekningParameter = basisInvalidepensionDaekning.HasValue ?
                new ObjectParameter("BasisInvalidepensionDaekning", basisInvalidepensionDaekning) :
                new ObjectParameter("BasisInvalidepensionDaekning", typeof(int));
    
            var frivilligInvalidepensioniPctAfGageParameter = frivilligInvalidepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniPctAfGage", frivilligInvalidepensioniPctAfGage) :
                new ObjectParameter("FrivilligInvalidepensioniPctAfGage", typeof(int));
    
            var frivilligInvalidepensioniPctAfGageUdlobParameter = frivilligInvalidepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniPctAfGageUdlob", frivilligInvalidepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligInvalidepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligInvalidepensionDaekningParameter = frivilligInvalidepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidepensionDaekning", frivilligInvalidepensionDaekning) :
                new ObjectParameter("FrivilligInvalidepensionDaekning", typeof(int));
    
            var frivilligInvalidepensionDaekning2PctAfGageParameter = frivilligInvalidepensionDaekning2PctAfGage.HasValue ?
                new ObjectParameter("FrivilligInvalidepensionDaekning2PctAfGage", frivilligInvalidepensionDaekning2PctAfGage) :
                new ObjectParameter("FrivilligInvalidepensionDaekning2PctAfGage", typeof(int));
    
            var basisInvalidepensioniKrParameter = basisInvalidepensioniKr.HasValue ?
                new ObjectParameter("BasisInvalidepensioniKr", basisInvalidepensioniKr) :
                new ObjectParameter("BasisInvalidepensioniKr", typeof(decimal));
    
            var basisInvalidepensioniKrUdlobParameter = basisInvalidepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisInvalidepensioniKrUdlob", basisInvalidepensioniKrUdlob) :
                new ObjectParameter("BasisInvalidepensioniKrUdlob", typeof(int));
    
            var frivilligInvalidepensioniKrParameter = frivilligInvalidepensioniKr.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniKr", frivilligInvalidepensioniKr) :
                new ObjectParameter("FrivilligInvalidepensioniKr", typeof(decimal));
    
            var frivilligInvalidepensioniKrUdlobParameter = frivilligInvalidepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniKrUdlob", frivilligInvalidepensioniKrUdlob) :
                new ObjectParameter("FrivilligInvalidepensioniKrUdlob", typeof(int));
    
            var invalidepensionMindstKrParameter = invalidepensionMindstKr.HasValue ?
                new ObjectParameter("InvalidepensionMindstKr", invalidepensionMindstKr) :
                new ObjectParameter("InvalidepensionMindstKr", typeof(decimal));
    
            var invalidesumParameter = invalidesum.HasValue ?
                new ObjectParameter("Invalidesum", invalidesum) :
                new ObjectParameter("Invalidesum", typeof(bool));
    
            var invalidesumTypeParameter = invalidesumType.HasValue ?
                new ObjectParameter("InvalidesumType", invalidesumType) :
                new ObjectParameter("InvalidesumType", typeof(int));
    
            var basisInvalidesumPctAfGageParameter = basisInvalidesumPctAfGage.HasValue ?
                new ObjectParameter("BasisInvalidesumPctAfGage", basisInvalidesumPctAfGage) :
                new ObjectParameter("BasisInvalidesumPctAfGage", typeof(int));
    
            var basisInvalidesumUdlobParameter = basisInvalidesumUdlob.HasValue ?
                new ObjectParameter("BasisInvalidesumUdlob", basisInvalidesumUdlob) :
                new ObjectParameter("BasisInvalidesumUdlob", typeof(int));
    
            var basisInvalidesumPctDaekningParameter = basisInvalidesumPctDaekning.HasValue ?
                new ObjectParameter("BasisInvalidesumPctDaekning", basisInvalidesumPctDaekning) :
                new ObjectParameter("BasisInvalidesumPctDaekning", typeof(int));
    
            var frivilligInvalidesumPctAfGageParameter = frivilligInvalidesumPctAfGage.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctAfGage", frivilligInvalidesumPctAfGage) :
                new ObjectParameter("FrivilligInvalidesumPctAfGage", typeof(int));
    
            var frivilligInvalidesumPctUdlobParameter = frivilligInvalidesumPctUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctUdlob", frivilligInvalidesumPctUdlob) :
                new ObjectParameter("FrivilligInvalidesumPctUdlob", typeof(int));
    
            var frivilligInvalidesumPctDaekningParameter = frivilligInvalidesumPctDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctDaekning", frivilligInvalidesumPctDaekning) :
                new ObjectParameter("FrivilligInvalidesumPctDaekning", typeof(int));
    
            var frivilligInvalidesumPctSolidariskDaekningParameter = frivilligInvalidesumPctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctSolidariskDaekning", frivilligInvalidesumPctSolidariskDaekning) :
                new ObjectParameter("FrivilligInvalidesumPctSolidariskDaekning", typeof(int));
    
            var basisInvalidesumSkattekodeParameter = basisInvalidesumSkattekode.HasValue ?
                new ObjectParameter("BasisInvalidesumSkattekode", basisInvalidesumSkattekode) :
                new ObjectParameter("BasisInvalidesumSkattekode", typeof(int));
    
            var frivilligInvalidesumSkattekodeParameter = frivilligInvalidesumSkattekode.HasValue ?
                new ObjectParameter("FrivilligInvalidesumSkattekode", frivilligInvalidesumSkattekode) :
                new ObjectParameter("FrivilligInvalidesumSkattekode", typeof(int));
    
            var basisInvalidesumKrParameter = basisInvalidesumKr.HasValue ?
                new ObjectParameter("BasisInvalidesumKr", basisInvalidesumKr) :
                new ObjectParameter("BasisInvalidesumKr", typeof(decimal));
    
            var basisInvalidesumKrUdlobParameter = basisInvalidesumKrUdlob.HasValue ?
                new ObjectParameter("BasisInvalidesumKrUdlob", basisInvalidesumKrUdlob) :
                new ObjectParameter("BasisInvalidesumKrUdlob", typeof(int));
    
            var basisInvalidesumKrDaekningParameter = basisInvalidesumKrDaekning.HasValue ?
                new ObjectParameter("BasisInvalidesumKrDaekning", basisInvalidesumKrDaekning) :
                new ObjectParameter("BasisInvalidesumKrDaekning", typeof(int));
    
            var frivilligInvalidesumKrParameter = frivilligInvalidesumKr.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKr", frivilligInvalidesumKr) :
                new ObjectParameter("FrivilligInvalidesumKr", typeof(decimal));
    
            var frivilligInvalidesumKrUdlobParameter = frivilligInvalidesumKrUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKrUdlob", frivilligInvalidesumKrUdlob) :
                new ObjectParameter("FrivilligInvalidesumKrUdlob", typeof(int));
    
            var frivilligInvalidesumKrDaekningParameter = frivilligInvalidesumKrDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKrDaekning", frivilligInvalidesumKrDaekning) :
                new ObjectParameter("FrivilligInvalidesumKrDaekning", typeof(int));
    
            var frivilligInvalidesumKrGruppedaekningKrParameter = frivilligInvalidesumKrGruppedaekningKr.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKrGruppedaekningKr", frivilligInvalidesumKrGruppedaekningKr) :
                new ObjectParameter("FrivilligInvalidesumKrGruppedaekningKr", typeof(decimal));
    
            var invalidesumMinimumParameter = invalidesumMinimum.HasValue ?
                new ObjectParameter("InvalidesumMinimum", invalidesumMinimum) :
                new ObjectParameter("InvalidesumMinimum", typeof(decimal));
    
            var kritiskSygdomParameter = kritiskSygdom.HasValue ?
                new ObjectParameter("KritiskSygdom", kritiskSygdom) :
                new ObjectParameter("KritiskSygdom", typeof(bool));
    
            var kritiskSygdomTypeParameter = kritiskSygdomType.HasValue ?
                new ObjectParameter("KritiskSygdomType", kritiskSygdomType) :
                new ObjectParameter("KritiskSygdomType", typeof(bool));
    
            var basisKritiskSygdomPctAfGageParameter = basisKritiskSygdomPctAfGage.HasValue ?
                new ObjectParameter("BasisKritiskSygdomPctAfGage", basisKritiskSygdomPctAfGage) :
                new ObjectParameter("BasisKritiskSygdomPctAfGage", typeof(int));
    
            var basisKritiskSygdomUdlobParameter = basisKritiskSygdomUdlob.HasValue ?
                new ObjectParameter("BasisKritiskSygdomUdlob", basisKritiskSygdomUdlob) :
                new ObjectParameter("BasisKritiskSygdomUdlob", typeof(int));
    
            var basisKritiskSygdomPctDaekningParameter = basisKritiskSygdomPctDaekning.HasValue ?
                new ObjectParameter("BasisKritiskSygdomPctDaekning", basisKritiskSygdomPctDaekning) :
                new ObjectParameter("BasisKritiskSygdomPctDaekning", typeof(int));
    
            var frivilligKritiskSygdomPctAfGageParameter = frivilligKritiskSygdomPctAfGage.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctAfGage", frivilligKritiskSygdomPctAfGage) :
                new ObjectParameter("FrivilligKritiskSygdomPctAfGage", typeof(int));
    
            var frivilligKritiskSygdomPctUdlobParameter = frivilligKritiskSygdomPctUdlob.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctUdlob", frivilligKritiskSygdomPctUdlob) :
                new ObjectParameter("FrivilligKritiskSygdomPctUdlob", typeof(int));
    
            var frivilligKritiskSygdomPctDaekningParameter = frivilligKritiskSygdomPctDaekning.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctDaekning", frivilligKritiskSygdomPctDaekning) :
                new ObjectParameter("FrivilligKritiskSygdomPctDaekning", typeof(int));
    
            var frivilligKritiskSygdomPctSolidariskDaekningParameter = frivilligKritiskSygdomPctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctSolidariskDaekning", frivilligKritiskSygdomPctSolidariskDaekning) :
                new ObjectParameter("FrivilligKritiskSygdomPctSolidariskDaekning", typeof(int));
    
            var basisKritiskSygdomKrParameter = basisKritiskSygdomKr.HasValue ?
                new ObjectParameter("BasisKritiskSygdomKr", basisKritiskSygdomKr) :
                new ObjectParameter("BasisKritiskSygdomKr", typeof(decimal));
    
            var basisKritiskSygdomKrUdlobParameter = basisKritiskSygdomKrUdlob.HasValue ?
                new ObjectParameter("BasisKritiskSygdomKrUdlob", basisKritiskSygdomKrUdlob) :
                new ObjectParameter("BasisKritiskSygdomKrUdlob", typeof(int));
    
            var basisKritiskSygdomKrDaekningParameter = basisKritiskSygdomKrDaekning.HasValue ?
                new ObjectParameter("BasisKritiskSygdomKrDaekning", basisKritiskSygdomKrDaekning) :
                new ObjectParameter("BasisKritiskSygdomKrDaekning", typeof(int));
    
            var frivilligKritiskSygdomKrParameter = frivilligKritiskSygdomKr.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKr", frivilligKritiskSygdomKr) :
                new ObjectParameter("FrivilligKritiskSygdomKr", typeof(decimal));
    
            var frivilligKritiskSygdomKrUdlobParameter = frivilligKritiskSygdomKrUdlob.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKrUdlob", frivilligKritiskSygdomKrUdlob) :
                new ObjectParameter("FrivilligKritiskSygdomKrUdlob", typeof(int));
    
            var frivilligKritiskSygdomKrDaekningParameter = frivilligKritiskSygdomKrDaekning.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKrDaekning", frivilligKritiskSygdomKrDaekning) :
                new ObjectParameter("FrivilligKritiskSygdomKrDaekning", typeof(int));
    
            var frivilligKritiskSygdomKrGruppedaekningKrParameter = frivilligKritiskSygdomKrGruppedaekningKr.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKrGruppedaekningKr", frivilligKritiskSygdomKrGruppedaekningKr) :
                new ObjectParameter("FrivilligKritiskSygdomKrGruppedaekningKr", typeof(decimal));
    
            var basisKritiskSygdomMinimumParameter = basisKritiskSygdomMinimum.HasValue ?
                new ObjectParameter("BasisKritiskSygdomMinimum", basisKritiskSygdomMinimum) :
                new ObjectParameter("BasisKritiskSygdomMinimum", typeof(decimal));
    
            var sygdomBornepensionParameter = sygdomBornepension.HasValue ?
                new ObjectParameter("SygdomBornepension", sygdomBornepension) :
                new ObjectParameter("SygdomBornepension", typeof(bool));
    
            var basisSygdomBornepensionTypeParameter = basisSygdomBornepensionType.HasValue ?
                new ObjectParameter("BasisSygdomBornepensionType", basisSygdomBornepensionType) :
                new ObjectParameter("BasisSygdomBornepensionType", typeof(int));
    
            var basisSygdomBornepensioniPctAfGageParameter = basisSygdomBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniPctAfGage", basisSygdomBornepensioniPctAfGage) :
                new ObjectParameter("BasisSygdomBornepensioniPctAfGage", typeof(int));
    
            var basisSygdomBornepensioniPctAfGageUdlobParameter = basisSygdomBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniPctAfGageUdlob", basisSygdomBornepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisSygdomBornepensioniPctAfGageUdlob", typeof(int));
    
            var basisSygdomBornepensionDaekningParameter = basisSygdomBornepensionDaekning.HasValue ?
                new ObjectParameter("BasisSygdomBornepensionDaekning", basisSygdomBornepensionDaekning) :
                new ObjectParameter("BasisSygdomBornepensionDaekning", typeof(int));
    
            var frivilligSygdomBornepensioniPctAfGageParameter = frivilligSygdomBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGage", frivilligSygdomBornepensioniPctAfGage) :
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGage", typeof(int));
    
            var frivilligSygdomBornepensioniPctAfGageUdlobParameter = frivilligSygdomBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGageUdlob", frivilligSygdomBornepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligSygdomBornepensionDaekningParameter = frivilligSygdomBornepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensionDaekning", frivilligSygdomBornepensionDaekning) :
                new ObjectParameter("FrivilligSygdomBornepensionDaekning", typeof(int));
    
            var frivilligSygdomBornepensionDaekning2PctSolidariskDaekningParameter = frivilligSygdomBornepensionDaekning2PctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensionDaekning2PctSolidariskDaekning", frivilligSygdomBornepensionDaekning2PctSolidariskDaekning) :
                new ObjectParameter("FrivilligSygdomBornepensionDaekning2PctSolidariskDaekning", typeof(int));
    
            var basisSygdomBornepensioniKrParameter = basisSygdomBornepensioniKr.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniKr", basisSygdomBornepensioniKr) :
                new ObjectParameter("BasisSygdomBornepensioniKr", typeof(decimal));
    
            var basisSygdomBornepensioniKrUdlobParameter = basisSygdomBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniKrUdlob", basisSygdomBornepensioniKrUdlob) :
                new ObjectParameter("BasisSygdomBornepensioniKrUdlob", typeof(int));
    
            var frivilligSygdomBornepensioniKrParameter = frivilligSygdomBornepensioniKr.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniKr", frivilligSygdomBornepensioniKr) :
                new ObjectParameter("FrivilligSygdomBornepensioniKr", typeof(decimal));
    
            var frivilligSygdomBornepensioniKrUdlobParameter = frivilligSygdomBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniKrUdlob", frivilligSygdomBornepensioniKrUdlob) :
                new ObjectParameter("FrivilligSygdomBornepensioniKrUdlob", typeof(int));
    
            var basisSygdomBornepensionMindstKrParameter = basisSygdomBornepensionMindstKr.HasValue ?
                new ObjectParameter("BasisSygdomBornepensionMindstKr", basisSygdomBornepensionMindstKr) :
                new ObjectParameter("BasisSygdomBornepensionMindstKr", typeof(decimal));
    
            var dodfaldssumParameter = dodfaldssum.HasValue ?
                new ObjectParameter("Dodfaldssum", dodfaldssum) :
                new ObjectParameter("Dodfaldssum", typeof(bool));
    
            var dodfaldssumTypeParameter = dodfaldssumType.HasValue ?
                new ObjectParameter("DodfaldssumType", dodfaldssumType) :
                new ObjectParameter("DodfaldssumType", typeof(int));
    
            var basisDodfaldssumPctAfGageParameter = basisDodfaldssumPctAfGage.HasValue ?
                new ObjectParameter("BasisDodfaldssumPctAfGage", basisDodfaldssumPctAfGage) :
                new ObjectParameter("BasisDodfaldssumPctAfGage", typeof(int));
    
            var basisDodfaldssumUdlobParameter = basisDodfaldssumUdlob.HasValue ?
                new ObjectParameter("BasisDodfaldssumUdlob", basisDodfaldssumUdlob) :
                new ObjectParameter("BasisDodfaldssumUdlob", typeof(int));
    
            var basisDodfaldssumPctDaekningParameter = basisDodfaldssumPctDaekning.HasValue ?
                new ObjectParameter("BasisDodfaldssumPctDaekning", basisDodfaldssumPctDaekning) :
                new ObjectParameter("BasisDodfaldssumPctDaekning", typeof(int));
    
            var frivilligDodfaldssumPctAfGageParameter = frivilligDodfaldssumPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctAfGage", frivilligDodfaldssumPctAfGage) :
                new ObjectParameter("FrivilligDodfaldssumPctAfGage", typeof(int));
    
            var frivilligDodfaldssumPctUdlobParameter = frivilligDodfaldssumPctUdlob.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctUdlob", frivilligDodfaldssumPctUdlob) :
                new ObjectParameter("FrivilligDodfaldssumPctUdlob", typeof(int));
    
            var frivilligDodfaldssumPctDaekningParameter = frivilligDodfaldssumPctDaekning.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctDaekning", frivilligDodfaldssumPctDaekning) :
                new ObjectParameter("FrivilligDodfaldssumPctDaekning", typeof(int));
    
            var frivilligDodfaldssumPctSolidariskDaekningParameter = frivilligDodfaldssumPctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctSolidariskDaekning", frivilligDodfaldssumPctSolidariskDaekning) :
                new ObjectParameter("FrivilligDodfaldssumPctSolidariskDaekning", typeof(int));
    
            var basisDodfaldssumSkattekodeParameter = basisDodfaldssumSkattekode.HasValue ?
                new ObjectParameter("BasisDodfaldssumSkattekode", basisDodfaldssumSkattekode) :
                new ObjectParameter("BasisDodfaldssumSkattekode", typeof(int));
    
            var frivilligDodfaldssumSkattekodeParameter = frivilligDodfaldssumSkattekode.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumSkattekode", frivilligDodfaldssumSkattekode) :
                new ObjectParameter("FrivilligDodfaldssumSkattekode", typeof(int));
    
            var basisDodfaldssumKrParameter = basisDodfaldssumKr.HasValue ?
                new ObjectParameter("BasisDodfaldssumKr", basisDodfaldssumKr) :
                new ObjectParameter("BasisDodfaldssumKr", typeof(decimal));
    
            var basisDodfaldssumKrUdlobParameter = basisDodfaldssumKrUdlob.HasValue ?
                new ObjectParameter("BasisDodfaldssumKrUdlob", basisDodfaldssumKrUdlob) :
                new ObjectParameter("BasisDodfaldssumKrUdlob", typeof(int));
    
            var basisDodfaldssumKrDaekningParameter = basisDodfaldssumKrDaekning.HasValue ?
                new ObjectParameter("BasisDodfaldssumKrDaekning", basisDodfaldssumKrDaekning) :
                new ObjectParameter("BasisDodfaldssumKrDaekning", typeof(int));
    
            var frivilligDodfaldssumKrParameter = frivilligDodfaldssumKr.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKr", frivilligDodfaldssumKr) :
                new ObjectParameter("FrivilligDodfaldssumKr", typeof(decimal));
    
            var frivilligDodfaldssumKrUdlobParameter = frivilligDodfaldssumKrUdlob.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKrUdlob", frivilligDodfaldssumKrUdlob) :
                new ObjectParameter("FrivilligDodfaldssumKrUdlob", typeof(int));
    
            var frivilligDodfaldssumKrDaekningParameter = frivilligDodfaldssumKrDaekning.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKrDaekning", frivilligDodfaldssumKrDaekning) :
                new ObjectParameter("FrivilligDodfaldssumKrDaekning", typeof(int));
    
            var frivilligDodfaldssumKrGruppedaekningKrParameter = frivilligDodfaldssumKrGruppedaekningKr.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKrGruppedaekningKr", frivilligDodfaldssumKrGruppedaekningKr) :
                new ObjectParameter("FrivilligDodfaldssumKrGruppedaekningKr", typeof(decimal));
    
            var basisDodfaldssumMinimumParameter = basisDodfaldssumMinimum.HasValue ?
                new ObjectParameter("BasisDodfaldssumMinimum", basisDodfaldssumMinimum) :
                new ObjectParameter("BasisDodfaldssumMinimum", typeof(decimal));
    
            var reservesikringParameter = reservesikring.HasValue ?
                new ObjectParameter("Reservesikring", reservesikring) :
                new ObjectParameter("Reservesikring", typeof(bool));
    
            var reservesikringTypeParameter = reservesikringType.HasValue ?
                new ObjectParameter("ReservesikringType", reservesikringType) :
                new ObjectParameter("ReservesikringType", typeof(int));
    
            var reservesikringJaParameter = reservesikringJa.HasValue ?
                new ObjectParameter("ReservesikringJa", reservesikringJa) :
                new ObjectParameter("ReservesikringJa", typeof(int));
    
            var dodBornepensionParameter = dodBornepension.HasValue ?
                new ObjectParameter("DodBornepension", dodBornepension) :
                new ObjectParameter("DodBornepension", typeof(bool));
    
            var basisDodBornepensionParameter = basisDodBornepension.HasValue ?
                new ObjectParameter("BasisDodBornepension", basisDodBornepension) :
                new ObjectParameter("BasisDodBornepension", typeof(int));
    
            var basisDodBornepensioniPctAfGageParameter = basisDodBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisDodBornepensioniPctAfGage", basisDodBornepensioniPctAfGage) :
                new ObjectParameter("BasisDodBornepensioniPctAfGage", typeof(int));
    
            var basisDodBornepensioniPctAfGageUdlobParameter = basisDodBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisDodBornepensioniPctAfGageUdlob", basisDodBornepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisDodBornepensioniPctAfGageUdlob", typeof(int));
    
            var basisDodBornepensionDaekningParameter = basisDodBornepensionDaekning.HasValue ?
                new ObjectParameter("BasisDodBornepensionDaekning", basisDodBornepensionDaekning) :
                new ObjectParameter("BasisDodBornepensionDaekning", typeof(int));
    
            var frivilligDodBornepensioniPctAfGageParameter = frivilligDodBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniPctAfGage", frivilligDodBornepensioniPctAfGage) :
                new ObjectParameter("FrivilligDodBornepensioniPctAfGage", typeof(int));
    
            var frivilligDodBornepensioniPctAfGageUdlobParameter = frivilligDodBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniPctAfGageUdlob", frivilligDodBornepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligDodBornepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligDodBornepensionDaekningParameter = frivilligDodBornepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligDodBornepensionDaekning", frivilligDodBornepensionDaekning) :
                new ObjectParameter("FrivilligDodBornepensionDaekning", typeof(int));
    
            var frivilligDodBornepensionDaekning2SolidariskPctAfGageParameter = frivilligDodBornepensionDaekning2SolidariskPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodBornepensionDaekning2SolidariskPctAfGage", frivilligDodBornepensionDaekning2SolidariskPctAfGage) :
                new ObjectParameter("FrivilligDodBornepensionDaekning2SolidariskPctAfGage", typeof(int));
    
            var basisDodBornepensioniKrParameter = basisDodBornepensioniKr.HasValue ?
                new ObjectParameter("BasisDodBornepensioniKr", basisDodBornepensioniKr) :
                new ObjectParameter("BasisDodBornepensioniKr", typeof(decimal));
    
            var basisDodBornepensioniKrUdlobParameter = basisDodBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisDodBornepensioniKrUdlob", basisDodBornepensioniKrUdlob) :
                new ObjectParameter("BasisDodBornepensioniKrUdlob", typeof(int));
    
            var frivilligDodBornepensioniKrParameter = frivilligDodBornepensioniKr.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniKr", frivilligDodBornepensioniKr) :
                new ObjectParameter("FrivilligDodBornepensioniKr", typeof(decimal));
    
            var frivilligDodBornepensioniKrUdlobParameter = frivilligDodBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniKrUdlob", frivilligDodBornepensioniKrUdlob) :
                new ObjectParameter("FrivilligDodBornepensioniKrUdlob", typeof(int));
    
            var basisDodBornepensionMindstKrParameter = basisDodBornepensionMindstKr.HasValue ?
                new ObjectParameter("BasisDodBornepensionMindstKr", basisDodBornepensionMindstKr) :
                new ObjectParameter("BasisDodBornepensionMindstKr", typeof(decimal));
    
            var aEgtefaellepensionParameter = aEgtefaellepension.HasValue ?
                new ObjectParameter("AEgtefaellepension", aEgtefaellepension) :
                new ObjectParameter("AEgtefaellepension", typeof(bool));
    
            var basisDodAEgtefaellepensionParameter = basisDodAEgtefaellepension.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepension", basisDodAEgtefaellepension) :
                new ObjectParameter("BasisDodAEgtefaellepension", typeof(int));
    
            var basisDodAEgtefaellepensioniPctAfGageParameter = basisDodAEgtefaellepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGage", basisDodAEgtefaellepensioniPctAfGage) :
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGage", typeof(int));
    
            var basisDodAEgtefaellepensioniPctAfGageUdlobParameter = basisDodAEgtefaellepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGageUdlob", basisDodAEgtefaellepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGageUdlob", typeof(int));
    
            var basisDodAEgtefaellepensionDaekningParameter = basisDodAEgtefaellepensionDaekning.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensionDaekning", basisDodAEgtefaellepensionDaekning) :
                new ObjectParameter("BasisDodAEgtefaellepensionDaekning", typeof(int));
    
            var frivilligDodAEgtefaellepensioniPctAfGageParameter = frivilligDodAEgtefaellepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGage", frivilligDodAEgtefaellepensioniPctAfGage) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGage", typeof(int));
    
            var frivilligDodAEgtefaellepensioniPctAfGageUdlobParameter = frivilligDodAEgtefaellepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGageUdlob", frivilligDodAEgtefaellepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligDodAEgtefaellepensionDaekningParameter = frivilligDodAEgtefaellepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning", frivilligDodAEgtefaellepensionDaekning) :
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning", typeof(int));
    
            var frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGageParameter = frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage", frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage) :
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage", typeof(int));
    
            var basisDodAEgtefaellepensioniKrParameter = basisDodAEgtefaellepensioniKr.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniKr", basisDodAEgtefaellepensioniKr) :
                new ObjectParameter("BasisDodAEgtefaellepensioniKr", typeof(decimal));
    
            var basisDodAEgtefaellepensioniKrUdlobParameter = basisDodAEgtefaellepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniKrUdlob", basisDodAEgtefaellepensioniKrUdlob) :
                new ObjectParameter("BasisDodAEgtefaellepensioniKrUdlob", typeof(int));
    
            var frivilligDodAEgtefaellepensioniKrParameter = frivilligDodAEgtefaellepensioniKr.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKr", frivilligDodAEgtefaellepensioniKr) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKr", typeof(decimal));
    
            var frivilligDodAEgtefaellepensioniKrUdlobParameter = frivilligDodAEgtefaellepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKrUdlob", frivilligDodAEgtefaellepensioniKrUdlob) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKrUdlob", typeof(int));
    
            var obligatoriskPensionsbidragParameter = obligatoriskPensionsbidrag.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidrag", obligatoriskPensionsbidrag) :
                new ObjectParameter("ObligatoriskPensionsbidrag", typeof(int));
    
            var obligatoriskPensionsbidragSkalaParameter = obligatoriskPensionsbidragSkala.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragSkala", obligatoriskPensionsbidragSkala) :
                new ObjectParameter("ObligatoriskPensionsbidragSkala", typeof(int));
    
            var obligatoriskPensionsbidragIngenSkalaVirkBidragPctParameter = obligatoriskPensionsbidragIngenSkalaVirkBidragPct.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragPct", obligatoriskPensionsbidragIngenSkalaVirkBidragPct) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragPct", typeof(int));
    
            var obligatoriskPensionsbidragIngenSkalaVirkBidragKrParameter = obligatoriskPensionsbidragIngenSkalaVirkBidragKr.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragKr", obligatoriskPensionsbidragIngenSkalaVirkBidragKr) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragKr", typeof(decimal));
    
            var obligatoriskPensionsbidragIngenSkalaMedArbBidragPctParameter = obligatoriskPensionsbidragIngenSkalaMedArbBidragPct.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragPct", obligatoriskPensionsbidragIngenSkalaMedArbBidragPct) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragPct", typeof(int));
    
            var obligatoriskPensionsbidragIngenSkalaMedArbBidragKrParameter = obligatoriskPensionsbidragIngenSkalaMedArbBidragKr.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragKr", obligatoriskPensionsbidragIngenSkalaMedArbBidragKr) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragKr", typeof(decimal));
    
            var skalaDato1Parameter = skalaDato1.HasValue ?
                new ObjectParameter("SkalaDato1", skalaDato1) :
                new ObjectParameter("SkalaDato1", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag1Parameter = skalaDatoVirksomhedsbidrag1.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag1", skalaDatoVirksomhedsbidrag1) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag1", typeof(int));
    
            var skalaDatoMedarbejderbidrag1Parameter = skalaDatoMedarbejderbidrag1.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag1", skalaDatoMedarbejderbidrag1) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag1", typeof(int));
    
            var skalaDato2Parameter = skalaDato2.HasValue ?
                new ObjectParameter("SkalaDato2", skalaDato2) :
                new ObjectParameter("SkalaDato2", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag2Parameter = skalaDatoVirksomhedsbidrag2.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag2", skalaDatoVirksomhedsbidrag2) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag2", typeof(int));
    
            var skalaDatoMedarbejderbidrag2Parameter = skalaDatoMedarbejderbidrag2.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag2", skalaDatoMedarbejderbidrag2) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag2", typeof(int));
    
            var skalaDato3Parameter = skalaDato3.HasValue ?
                new ObjectParameter("SkalaDato3", skalaDato3) :
                new ObjectParameter("SkalaDato3", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag3Parameter = skalaDatoVirksomhedsbidrag3.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag3", skalaDatoVirksomhedsbidrag3) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag3", typeof(int));
    
            var skalaDatoMedarbejderbidrag3Parameter = skalaDatoMedarbejderbidrag3.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag3", skalaDatoMedarbejderbidrag3) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag3", typeof(int));
    
            var skalaDato4Parameter = skalaDato4.HasValue ?
                new ObjectParameter("SkalaDato4", skalaDato4) :
                new ObjectParameter("SkalaDato4", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag4Parameter = skalaDatoVirksomhedsbidrag4.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag4", skalaDatoVirksomhedsbidrag4) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag4", typeof(int));
    
            var skalaDatoMedarbejderbidrag4Parameter = skalaDatoMedarbejderbidrag4.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag4", skalaDatoMedarbejderbidrag4) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag4", typeof(int));
    
            var skalaDato5Parameter = skalaDato5.HasValue ?
                new ObjectParameter("SkalaDato5", skalaDato5) :
                new ObjectParameter("SkalaDato5", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag5Parameter = skalaDatoVirksomhedsbidrag5.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag5", skalaDatoVirksomhedsbidrag5) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag5", typeof(int));
    
            var skalaDatoMedarbejderbidrag5Parameter = skalaDatoMedarbejderbidrag5.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag5", skalaDatoMedarbejderbidrag5) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag5", typeof(int));
    
            var skalaAlder1Parameter = skalaAlder1.HasValue ?
                new ObjectParameter("SkalaAlder1", skalaAlder1) :
                new ObjectParameter("SkalaAlder1", typeof(int));
    
            var skalaAlderVirksomhedsbidrag1Parameter = skalaAlderVirksomhedsbidrag1.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag1", skalaAlderVirksomhedsbidrag1) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag1", typeof(int));
    
            var skalaAlderMedarbejderbidrag1Parameter = skalaAlderMedarbejderbidrag1.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag1", skalaAlderMedarbejderbidrag1) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag1", typeof(int));
    
            var skalaAlder2Parameter = skalaAlder2.HasValue ?
                new ObjectParameter("SkalaAlder2", skalaAlder2) :
                new ObjectParameter("SkalaAlder2", typeof(int));
    
            var skalaAlderVirksomhedsbidrag2Parameter = skalaAlderVirksomhedsbidrag2.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag2", skalaAlderVirksomhedsbidrag2) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag2", typeof(int));
    
            var skalaAlderMedarbejderbidrag2Parameter = skalaAlderMedarbejderbidrag2.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag2", skalaAlderMedarbejderbidrag2) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag2", typeof(int));
    
            var skalaAlder3Parameter = skalaAlder3.HasValue ?
                new ObjectParameter("SkalaAlder3", skalaAlder3) :
                new ObjectParameter("SkalaAlder3", typeof(int));
    
            var skalaAlderVirksomhedsbidrag3Parameter = skalaAlderVirksomhedsbidrag3.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag3", skalaAlderVirksomhedsbidrag3) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag3", typeof(int));
    
            var skalaAlderMedarbejderbidrag3Parameter = skalaAlderMedarbejderbidrag3.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag3", skalaAlderMedarbejderbidrag3) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag3", typeof(int));
    
            var skalaAlder4Parameter = skalaAlder4.HasValue ?
                new ObjectParameter("SkalaAlder4", skalaAlder4) :
                new ObjectParameter("SkalaAlder4", typeof(int));
    
            var skalaAlderVirksomhedsbidrag4Parameter = skalaAlderVirksomhedsbidrag4.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag4", skalaAlderVirksomhedsbidrag4) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag4", typeof(int));
    
            var skalaAlderMedarbejderbidrag4Parameter = skalaAlderMedarbejderbidrag4.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag4", skalaAlderMedarbejderbidrag4) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag4", typeof(int));
    
            var skalaAlder5Parameter = skalaAlder5.HasValue ?
                new ObjectParameter("SkalaAlder5", skalaAlder5) :
                new ObjectParameter("SkalaAlder5", typeof(int));
    
            var skalaAlderVirksomhedsbidrag5Parameter = skalaAlderVirksomhedsbidrag5.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag5", skalaAlderVirksomhedsbidrag5) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag5", typeof(int));
    
            var skalaAlderMedarbejderbidrag5Parameter = skalaAlderMedarbejderbidrag5.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag5", skalaAlderMedarbejderbidrag5) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag5", typeof(int));
    
            var skalaAnciennitet1Parameter = skalaAnciennitet1.HasValue ?
                new ObjectParameter("SkalaAnciennitet1", skalaAnciennitet1) :
                new ObjectParameter("SkalaAnciennitet1", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag1Parameter = skalaAnciennitetVirksomhedsbidrag1.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag1", skalaAnciennitetVirksomhedsbidrag1) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag1", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag1Parameter = skalaAnciennitetMedarbejderbidrag1.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag1", skalaAnciennitetMedarbejderbidrag1) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag1", typeof(int));
    
            var skalaAnciennitet2Parameter = skalaAnciennitet2.HasValue ?
                new ObjectParameter("SkalaAnciennitet2", skalaAnciennitet2) :
                new ObjectParameter("SkalaAnciennitet2", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag2Parameter = skalaAnciennitetVirksomhedsbidrag2.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag2", skalaAnciennitetVirksomhedsbidrag2) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag2", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag2Parameter = skalaAnciennitetMedarbejderbidrag2.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag2", skalaAnciennitetMedarbejderbidrag2) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag2", typeof(int));
    
            var skalaAnciennitet3Parameter = skalaAnciennitet3.HasValue ?
                new ObjectParameter("SkalaAnciennitet3", skalaAnciennitet3) :
                new ObjectParameter("SkalaAnciennitet3", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag3Parameter = skalaAnciennitetVirksomhedsbidrag3.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag3", skalaAnciennitetVirksomhedsbidrag3) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag3", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag3Parameter = skalaAnciennitetMedarbejderbidrag3.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag3", skalaAnciennitetMedarbejderbidrag3) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag3", typeof(int));
    
            var skalaAnciennitet4Parameter = skalaAnciennitet4.HasValue ?
                new ObjectParameter("SkalaAnciennitet4", skalaAnciennitet4) :
                new ObjectParameter("SkalaAnciennitet4", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag4Parameter = skalaAnciennitetVirksomhedsbidrag4.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag4", skalaAnciennitetVirksomhedsbidrag4) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag4", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag4Parameter = skalaAnciennitetMedarbejderbidrag4.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag4", skalaAnciennitetMedarbejderbidrag4) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag4", typeof(int));
    
            var skalaAnciennitet5Parameter = skalaAnciennitet5.HasValue ?
                new ObjectParameter("SkalaAnciennitet5", skalaAnciennitet5) :
                new ObjectParameter("SkalaAnciennitet5", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag5Parameter = skalaAnciennitetVirksomhedsbidrag5.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag5", skalaAnciennitetVirksomhedsbidrag5) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag5", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag5Parameter = skalaAnciennitetMedarbejderbidrag5.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag5", skalaAnciennitetMedarbejderbidrag5) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag5", typeof(int));
    
            var overenskomstforholdParameter = overenskomstforhold.HasValue ?
                new ObjectParameter("Overenskomstforhold", overenskomstforhold) :
                new ObjectParameter("Overenskomstforhold", typeof(int));
    
            var overenskomstforholdOverenskomsterParameter = overenskomstforholdOverenskomster.HasValue ?
                new ObjectParameter("OverenskomstforholdOverenskomster", overenskomstforholdOverenskomster) :
                new ObjectParameter("OverenskomstforholdOverenskomster", typeof(int));
    
            var genkobParameter = genkob.HasValue ?
                new ObjectParameter("Genkob", genkob) :
                new ObjectParameter("Genkob", typeof(int));
    
            var opsparingstyperKapitalpensionParameter = opsparingstyperKapitalpension.HasValue ?
                new ObjectParameter("OpsparingstyperKapitalpension", opsparingstyperKapitalpension) :
                new ObjectParameter("OpsparingstyperKapitalpension", typeof(bool));
    
            var opsparingstyperKapitalpensionUdlobParameter = opsparingstyperKapitalpensionUdlob.HasValue ?
                new ObjectParameter("OpsparingstyperKapitalpensionUdlob", opsparingstyperKapitalpensionUdlob) :
                new ObjectParameter("OpsparingstyperKapitalpensionUdlob", typeof(int));
    
            var opsparingstyperRatepensionParameter = opsparingstyperRatepension.HasValue ?
                new ObjectParameter("OpsparingstyperRatepension", opsparingstyperRatepension) :
                new ObjectParameter("OpsparingstyperRatepension", typeof(bool));
    
            var opsparingstyperRatepensionUdlobParameter = opsparingstyperRatepensionUdlob.HasValue ?
                new ObjectParameter("OpsparingstyperRatepensionUdlob", opsparingstyperRatepensionUdlob) :
                new ObjectParameter("OpsparingstyperRatepensionUdlob", typeof(int));
    
            var opsparingstyperLivrentepensionParameter = opsparingstyperLivrentepension.HasValue ?
                new ObjectParameter("OpsparingstyperLivrentepension", opsparingstyperLivrentepension) :
                new ObjectParameter("OpsparingstyperLivrentepension", typeof(bool));
    
            var opsparingstyperLivrentepensionUdlobParameter = opsparingstyperLivrentepensionUdlob.HasValue ?
                new ObjectParameter("OpsparingstyperLivrentepensionUdlob", opsparingstyperLivrentepensionUdlob) :
                new ObjectParameter("OpsparingstyperLivrentepensionUdlob", typeof(int));
    
            var opsparingstyperKravParameter = opsparingstyperKrav.HasValue ?
                new ObjectParameter("OpsparingstyperKrav", opsparingstyperKrav) :
                new ObjectParameter("OpsparingstyperKrav", typeof(int));
    
            var opsparingstyperKravRatePctParameter = opsparingstyperKravRatePct.HasValue ?
                new ObjectParameter("OpsparingstyperKravRatePct", opsparingstyperKravRatePct) :
                new ObjectParameter("OpsparingstyperKravRatePct", typeof(int));
    
            var opsparingstyperKravLivsvarigPctParameter = opsparingstyperKravLivsvarigPct.HasValue ?
                new ObjectParameter("OpsparingstyperKravLivsvarigPct", opsparingstyperKravLivsvarigPct) :
                new ObjectParameter("OpsparingstyperKravLivsvarigPct", typeof(int));
    
            var opsparingsformParameter = opsparingsform.HasValue ?
                new ObjectParameter("Opsparingsform", opsparingsform) :
                new ObjectParameter("Opsparingsform", typeof(int));
    
            var opsparingsform2LinkopsparingPctParameter = opsparingsform2LinkopsparingPct.HasValue ?
                new ObjectParameter("Opsparingsform2LinkopsparingPct", opsparingsform2LinkopsparingPct) :
                new ObjectParameter("Opsparingsform2LinkopsparingPct", typeof(int));
    
            var opsparingsform2AMPmarkedsopsparingPctParameter = opsparingsform2AMPmarkedsopsparingPct.HasValue ?
                new ObjectParameter("Opsparingsform2AMPmarkedsopsparingPct", opsparingsform2AMPmarkedsopsparingPct) :
                new ObjectParameter("Opsparingsform2AMPmarkedsopsparingPct", typeof(int));
    
            var helbredsoplysningerParameter = helbredsoplysninger.HasValue ?
                new ObjectParameter("Helbredsoplysninger", helbredsoplysninger) :
                new ObjectParameter("Helbredsoplysninger", typeof(int));
    
            var helbredsoplysningerNytegningParameter = helbredsoplysningerNytegning.HasValue ?
                new ObjectParameter("HelbredsoplysningerNytegning", helbredsoplysningerNytegning) :
                new ObjectParameter("HelbredsoplysningerNytegning", typeof(int));
    
            var helbredsoplysningerNytegning3PersonligeHelbredsoplysningerTypeParameter = helbredsoplysningerNytegning3PersonligeHelbredsoplysningerType.HasValue ?
                new ObjectParameter("HelbredsoplysningerNytegning3PersonligeHelbredsoplysningerType", helbredsoplysningerNytegning3PersonligeHelbredsoplysningerType) :
                new ObjectParameter("HelbredsoplysningerNytegning3PersonligeHelbredsoplysningerType", typeof(int));
    
            var helbredsoplysningerAttestgraenseParameter = helbredsoplysningerAttestgraense.HasValue ?
                new ObjectParameter("HelbredsoplysningerAttestgraense", helbredsoplysningerAttestgraense) :
                new ObjectParameter("HelbredsoplysningerAttestgraense", typeof(int));
    
            var servicekonceptIndmeldelseParameter = servicekonceptIndmeldelse.HasValue ?
                new ObjectParameter("ServicekonceptIndmeldelse", servicekonceptIndmeldelse) :
                new ObjectParameter("ServicekonceptIndmeldelse", typeof(int));
    
            var policeudstedelseParameter = policeudstedelse.HasValue ?
                new ObjectParameter("Policeudstedelse", policeudstedelse) :
                new ObjectParameter("Policeudstedelse", typeof(int));
    
            var omkostningerParameter = omkostninger.HasValue ?
                new ObjectParameter("Omkostninger", omkostninger) :
                new ObjectParameter("Omkostninger", typeof(int));
    
            var sitesInformationssiteParameter = sitesInformationssite.HasValue ?
                new ObjectParameter("SitesInformationssite", sitesInformationssite) :
                new ObjectParameter("SitesInformationssite", typeof(bool));
    
            var sitesAdministrationssiteParameter = sitesAdministrationssite.HasValue ?
                new ObjectParameter("SitesAdministrationssite", sitesAdministrationssite) :
                new ObjectParameter("SitesAdministrationssite", typeof(bool));
    
            var sitesKontaktpersonerParameter = sitesKontaktpersoner.HasValue ?
                new ObjectParameter("SitesKontaktpersoner", sitesKontaktpersoner) :
                new ObjectParameter("SitesKontaktpersoner", typeof(int));
    
            var noterParameter = noter != null ?
                new ObjectParameter("Noter", noter) :
                new ObjectParameter("Noter", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Pensionsopsparing_Insert", statusParameter, medarbejderGruppeIDParameter, leverandorIDParameter, etableringsdatoParameter, forfaldParameter, indmeldelsestidspunktParameter, indmeldelsestidspunktAnsatParameter, indmeldelsestidspunktAnciennitetParameter, indmeldelsestidspunktFyldteParameter, tidligstParameter, tidligstFyldteParameter, senestParameter, senest2FrivilligOverParameter, senest3IkkeNyansatteOverParameter, indmeldelseskriterierParameter, indmeldelseskriterier2frivilligParameter, undtagelserParameter, undtagelser3FritekstParameter, invalidepensionParameter, invalidepensionTypeParameter, basisInvalidepensioniPctAfGageParameter, basisInvalidepensioniPctAfGageUdlobParameter, basisInvalidepensionDaekningParameter, frivilligInvalidepensioniPctAfGageParameter, frivilligInvalidepensioniPctAfGageUdlobParameter, frivilligInvalidepensionDaekningParameter, frivilligInvalidepensionDaekning2PctAfGageParameter, basisInvalidepensioniKrParameter, basisInvalidepensioniKrUdlobParameter, frivilligInvalidepensioniKrParameter, frivilligInvalidepensioniKrUdlobParameter, invalidepensionMindstKrParameter, invalidesumParameter, invalidesumTypeParameter, basisInvalidesumPctAfGageParameter, basisInvalidesumUdlobParameter, basisInvalidesumPctDaekningParameter, frivilligInvalidesumPctAfGageParameter, frivilligInvalidesumPctUdlobParameter, frivilligInvalidesumPctDaekningParameter, frivilligInvalidesumPctSolidariskDaekningParameter, basisInvalidesumSkattekodeParameter, frivilligInvalidesumSkattekodeParameter, basisInvalidesumKrParameter, basisInvalidesumKrUdlobParameter, basisInvalidesumKrDaekningParameter, frivilligInvalidesumKrParameter, frivilligInvalidesumKrUdlobParameter, frivilligInvalidesumKrDaekningParameter, frivilligInvalidesumKrGruppedaekningKrParameter, invalidesumMinimumParameter, kritiskSygdomParameter, kritiskSygdomTypeParameter, basisKritiskSygdomPctAfGageParameter, basisKritiskSygdomUdlobParameter, basisKritiskSygdomPctDaekningParameter, frivilligKritiskSygdomPctAfGageParameter, frivilligKritiskSygdomPctUdlobParameter, frivilligKritiskSygdomPctDaekningParameter, frivilligKritiskSygdomPctSolidariskDaekningParameter, basisKritiskSygdomKrParameter, basisKritiskSygdomKrUdlobParameter, basisKritiskSygdomKrDaekningParameter, frivilligKritiskSygdomKrParameter, frivilligKritiskSygdomKrUdlobParameter, frivilligKritiskSygdomKrDaekningParameter, frivilligKritiskSygdomKrGruppedaekningKrParameter, basisKritiskSygdomMinimumParameter, sygdomBornepensionParameter, basisSygdomBornepensionTypeParameter, basisSygdomBornepensioniPctAfGageParameter, basisSygdomBornepensioniPctAfGageUdlobParameter, basisSygdomBornepensionDaekningParameter, frivilligSygdomBornepensioniPctAfGageParameter, frivilligSygdomBornepensioniPctAfGageUdlobParameter, frivilligSygdomBornepensionDaekningParameter, frivilligSygdomBornepensionDaekning2PctSolidariskDaekningParameter, basisSygdomBornepensioniKrParameter, basisSygdomBornepensioniKrUdlobParameter, frivilligSygdomBornepensioniKrParameter, frivilligSygdomBornepensioniKrUdlobParameter, basisSygdomBornepensionMindstKrParameter, dodfaldssumParameter, dodfaldssumTypeParameter, basisDodfaldssumPctAfGageParameter, basisDodfaldssumUdlobParameter, basisDodfaldssumPctDaekningParameter, frivilligDodfaldssumPctAfGageParameter, frivilligDodfaldssumPctUdlobParameter, frivilligDodfaldssumPctDaekningParameter, frivilligDodfaldssumPctSolidariskDaekningParameter, basisDodfaldssumSkattekodeParameter, frivilligDodfaldssumSkattekodeParameter, basisDodfaldssumKrParameter, basisDodfaldssumKrUdlobParameter, basisDodfaldssumKrDaekningParameter, frivilligDodfaldssumKrParameter, frivilligDodfaldssumKrUdlobParameter, frivilligDodfaldssumKrDaekningParameter, frivilligDodfaldssumKrGruppedaekningKrParameter, basisDodfaldssumMinimumParameter, reservesikringParameter, reservesikringTypeParameter, reservesikringJaParameter, dodBornepensionParameter, basisDodBornepensionParameter, basisDodBornepensioniPctAfGageParameter, basisDodBornepensioniPctAfGageUdlobParameter, basisDodBornepensionDaekningParameter, frivilligDodBornepensioniPctAfGageParameter, frivilligDodBornepensioniPctAfGageUdlobParameter, frivilligDodBornepensionDaekningParameter, frivilligDodBornepensionDaekning2SolidariskPctAfGageParameter, basisDodBornepensioniKrParameter, basisDodBornepensioniKrUdlobParameter, frivilligDodBornepensioniKrParameter, frivilligDodBornepensioniKrUdlobParameter, basisDodBornepensionMindstKrParameter, aEgtefaellepensionParameter, basisDodAEgtefaellepensionParameter, basisDodAEgtefaellepensioniPctAfGageParameter, basisDodAEgtefaellepensioniPctAfGageUdlobParameter, basisDodAEgtefaellepensionDaekningParameter, frivilligDodAEgtefaellepensioniPctAfGageParameter, frivilligDodAEgtefaellepensioniPctAfGageUdlobParameter, frivilligDodAEgtefaellepensionDaekningParameter, frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGageParameter, basisDodAEgtefaellepensioniKrParameter, basisDodAEgtefaellepensioniKrUdlobParameter, frivilligDodAEgtefaellepensioniKrParameter, frivilligDodAEgtefaellepensioniKrUdlobParameter, obligatoriskPensionsbidragParameter, obligatoriskPensionsbidragSkalaParameter, obligatoriskPensionsbidragIngenSkalaVirkBidragPctParameter, obligatoriskPensionsbidragIngenSkalaVirkBidragKrParameter, obligatoriskPensionsbidragIngenSkalaMedArbBidragPctParameter, obligatoriskPensionsbidragIngenSkalaMedArbBidragKrParameter, skalaDato1Parameter, skalaDatoVirksomhedsbidrag1Parameter, skalaDatoMedarbejderbidrag1Parameter, skalaDato2Parameter, skalaDatoVirksomhedsbidrag2Parameter, skalaDatoMedarbejderbidrag2Parameter, skalaDato3Parameter, skalaDatoVirksomhedsbidrag3Parameter, skalaDatoMedarbejderbidrag3Parameter, skalaDato4Parameter, skalaDatoVirksomhedsbidrag4Parameter, skalaDatoMedarbejderbidrag4Parameter, skalaDato5Parameter, skalaDatoVirksomhedsbidrag5Parameter, skalaDatoMedarbejderbidrag5Parameter, skalaAlder1Parameter, skalaAlderVirksomhedsbidrag1Parameter, skalaAlderMedarbejderbidrag1Parameter, skalaAlder2Parameter, skalaAlderVirksomhedsbidrag2Parameter, skalaAlderMedarbejderbidrag2Parameter, skalaAlder3Parameter, skalaAlderVirksomhedsbidrag3Parameter, skalaAlderMedarbejderbidrag3Parameter, skalaAlder4Parameter, skalaAlderVirksomhedsbidrag4Parameter, skalaAlderMedarbejderbidrag4Parameter, skalaAlder5Parameter, skalaAlderVirksomhedsbidrag5Parameter, skalaAlderMedarbejderbidrag5Parameter, skalaAnciennitet1Parameter, skalaAnciennitetVirksomhedsbidrag1Parameter, skalaAnciennitetMedarbejderbidrag1Parameter, skalaAnciennitet2Parameter, skalaAnciennitetVirksomhedsbidrag2Parameter, skalaAnciennitetMedarbejderbidrag2Parameter, skalaAnciennitet3Parameter, skalaAnciennitetVirksomhedsbidrag3Parameter, skalaAnciennitetMedarbejderbidrag3Parameter, skalaAnciennitet4Parameter, skalaAnciennitetVirksomhedsbidrag4Parameter, skalaAnciennitetMedarbejderbidrag4Parameter, skalaAnciennitet5Parameter, skalaAnciennitetVirksomhedsbidrag5Parameter, skalaAnciennitetMedarbejderbidrag5Parameter, overenskomstforholdParameter, overenskomstforholdOverenskomsterParameter, genkobParameter, opsparingstyperKapitalpensionParameter, opsparingstyperKapitalpensionUdlobParameter, opsparingstyperRatepensionParameter, opsparingstyperRatepensionUdlobParameter, opsparingstyperLivrentepensionParameter, opsparingstyperLivrentepensionUdlobParameter, opsparingstyperKravParameter, opsparingstyperKravRatePctParameter, opsparingstyperKravLivsvarigPctParameter, opsparingsformParameter, opsparingsform2LinkopsparingPctParameter, opsparingsform2AMPmarkedsopsparingPctParameter, helbredsoplysningerParameter, helbredsoplysningerNytegningParameter, helbredsoplysningerNytegning3PersonligeHelbredsoplysningerTypeParameter, helbredsoplysningerAttestgraenseParameter, servicekonceptIndmeldelseParameter, policeudstedelseParameter, omkostningerParameter, sitesInformationssiteParameter, sitesAdministrationssiteParameter, sitesKontaktpersonerParameter, noterParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Pensionsopsparing_SelectAll_Result> Co2Db_Pensionsopsparing_SelectAll(Nullable<int> medarbejderGruppeID)
        {
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pensionsopsparing_SelectAll_Result>("Co2Db_Pensionsopsparing_SelectAll", medarbejderGruppeIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pensionsopsparing_SelectByMedarbGrp_Result> Co2Db_Pensionsopsparing_SelectByMedarbGrp(Nullable<int> medarbejderGruppeID)
        {
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pensionsopsparing_SelectByMedarbGrp_Result>("Co2Db_Pensionsopsparing_SelectByMedarbGrp", medarbejderGruppeIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pensionsopsparing_SelectBySearch_Result> Co2Db_Pensionsopsparing_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pensionsopsparing_SelectBySearch_Result>("Co2Db_Pensionsopsparing_SelectBySearch", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pensionsopsparing_SelectByStatus_Result> Co2Db_Pensionsopsparing_SelectByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pensionsopsparing_SelectByStatus_Result>("Co2Db_Pensionsopsparing_SelectByStatus", statusParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pensionsopsparing_SelectByStatusCompany_Result> Co2Db_Pensionsopsparing_SelectByStatusCompany(Nullable<int> status, Nullable<int> medarbejderGruppeID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pensionsopsparing_SelectByStatusCompany_Result>("Co2Db_Pensionsopsparing_SelectByStatusCompany", statusParameter, medarbejderGruppeIDParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Pensionsopsparing_SelectName(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Pensionsopsparing_SelectName", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Pensionsopsparing_SelectOne_Result> Co2Db_Pensionsopsparing_SelectOne(Nullable<int> iD, Nullable<int> medarbejderGruppeID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Pensionsopsparing_SelectOne_Result>("Co2Db_Pensionsopsparing_SelectOne", iDParameter, medarbejderGruppeIDParameter);
        }
    
        public virtual int Co2Db_Pensionsopsparing_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> medarbejderGruppeID, Nullable<int> leverandorID, Nullable<System.DateTime> etableringsdato, Nullable<int> forfald, Nullable<int> indmeldelsestidspunkt, Nullable<int> indmeldelsestidspunktAnsat, Nullable<int> indmeldelsestidspunktAnciennitet, Nullable<int> indmeldelsestidspunktFyldte, Nullable<int> tidligst, Nullable<int> tidligstFyldte, Nullable<int> senest, Nullable<int> senest2FrivilligOver, Nullable<int> senest3IkkeNyansatteOver, Nullable<int> indmeldelseskriterier, Nullable<bool> indmeldelseskriterier2frivillig, Nullable<int> undtagelser, string undtagelser3Fritekst, Nullable<bool> invalidepension, Nullable<int> invalidepensionType, Nullable<int> basisInvalidepensioniPctAfGage, Nullable<int> basisInvalidepensioniPctAfGageUdlob, Nullable<int> basisInvalidepensionDaekning, Nullable<int> frivilligInvalidepensioniPctAfGage, Nullable<int> frivilligInvalidepensioniPctAfGageUdlob, Nullable<int> frivilligInvalidepensionDaekning, Nullable<int> frivilligInvalidepensionDaekning2PctAfGage, Nullable<decimal> basisInvalidepensioniKr, Nullable<int> basisInvalidepensioniKrUdlob, Nullable<decimal> frivilligInvalidepensioniKr, Nullable<int> frivilligInvalidepensioniKrUdlob, Nullable<decimal> invalidepensionMindstKr, Nullable<bool> invalidesum, Nullable<int> invalidesumType, Nullable<int> basisInvalidesumPctAfGage, Nullable<int> basisInvalidesumUdlob, Nullable<int> basisInvalidesumPctDaekning, Nullable<int> frivilligInvalidesumPctAfGage, Nullable<int> frivilligInvalidesumPctUdlob, Nullable<int> frivilligInvalidesumPctDaekning, Nullable<int> frivilligInvalidesumPctSolidariskDaekning, Nullable<int> basisInvalidesumSkattekode, Nullable<int> frivilligInvalidesumSkattekode, Nullable<decimal> basisInvalidesumKr, Nullable<int> basisInvalidesumKrUdlob, Nullable<int> basisInvalidesumKrDaekning, Nullable<decimal> frivilligInvalidesumKr, Nullable<int> frivilligInvalidesumKrUdlob, Nullable<int> frivilligInvalidesumKrDaekning, Nullable<decimal> frivilligInvalidesumKrGruppedaekningKr, Nullable<decimal> invalidesumMinimum, Nullable<bool> kritiskSygdom, Nullable<bool> kritiskSygdomType, Nullable<int> basisKritiskSygdomPctAfGage, Nullable<int> basisKritiskSygdomUdlob, Nullable<int> basisKritiskSygdomPctDaekning, Nullable<int> frivilligKritiskSygdomPctAfGage, Nullable<int> frivilligKritiskSygdomPctUdlob, Nullable<int> frivilligKritiskSygdomPctDaekning, Nullable<int> frivilligKritiskSygdomPctSolidariskDaekning, Nullable<decimal> basisKritiskSygdomKr, Nullable<int> basisKritiskSygdomKrUdlob, Nullable<int> basisKritiskSygdomKrDaekning, Nullable<decimal> frivilligKritiskSygdomKr, Nullable<int> frivilligKritiskSygdomKrUdlob, Nullable<int> frivilligKritiskSygdomKrDaekning, Nullable<decimal> frivilligKritiskSygdomKrGruppedaekningKr, Nullable<decimal> basisKritiskSygdomMinimum, Nullable<bool> sygdomBornepension, Nullable<int> sygdomBornepensionType, Nullable<int> basisSygdomBornepensioniPctAfGage, Nullable<int> basisSygdomBornepensioniPctAfGageUdlob, Nullable<int> basisSygdomBornepensionDaekning, Nullable<int> frivilligSygdomBornepensioniPctAfGage, Nullable<int> frivilligSygdomBornepensioniPctAfGageUdlob, Nullable<int> frivilligSygdomBornepensionDaekning, Nullable<int> frivilligSygdomBornepensionDaekning2PctSolidariskDaekning, Nullable<decimal> basisSygdomBornepensioniKr, Nullable<int> basisSygdomBornepensioniKrUdlob, Nullable<decimal> frivilligSygdomBornepensioniKr, Nullable<int> frivilligSygdomBornepensioniKrUdlob, Nullable<decimal> basisSygdomBornepensionMindstKr, Nullable<bool> dodfaldssum, Nullable<int> dodfaldssumType, Nullable<int> basisDodfaldssumPctAfGage, Nullable<int> basisDodfaldssumUdlob, Nullable<int> basisDodfaldssumPctDaekning, Nullable<int> frivilligDodfaldssumPctAfGage, Nullable<int> frivilligDodfaldssumPctUdlob, Nullable<int> frivilligDodfaldssumPctDaekning, Nullable<int> frivilligDodfaldssumPctSolidariskDaekning, Nullable<int> basisDodfaldssumSkattekode, Nullable<int> frivilligDodfaldssumSkattekode, Nullable<decimal> basisDodfaldssumKr, Nullable<int> basisDodfaldssumKrUdlob, Nullable<int> basisDodfaldssumKrDaekning, Nullable<decimal> frivilligDodfaldssumKr, Nullable<int> frivilligDodfaldssumKrUdlob, Nullable<int> frivilligDodfaldssumKrDaekning, Nullable<decimal> frivilligDodfaldssumKrGruppedaekningKr, Nullable<decimal> basisDodfaldssumMinimum, Nullable<bool> reservesikring, Nullable<int> reservesikringType, Nullable<int> reservesikringJa, Nullable<bool> dodBornepension, Nullable<int> basisDodBornepension, Nullable<int> basisDodBornepensioniPctAfGage, Nullable<int> basisDodBornepensioniPctAfGageUdlob, Nullable<int> basisDodBornepensionDaekning, Nullable<int> frivilligDodBornepensioniPctAfGage, Nullable<int> frivilligDodBornepensioniPctAfGageUdlob, Nullable<int> frivilligDodBornepensionDaekning, Nullable<int> frivilligDodBornepensionDaekning2SolidariskPctAfGage, Nullable<decimal> basisDodBornepensioniKr, Nullable<int> basisDodBornepensioniKrUdlob, Nullable<decimal> frivilligDodBornepensioniKr, Nullable<int> frivilligDodBornepensioniKrUdlob, Nullable<decimal> basisDodBornepensionMindstKr, Nullable<bool> aEgtefaellepension, Nullable<int> basisDodAEgtefaellepension, Nullable<int> basisDodAEgtefaellepensioniPctAfGage, Nullable<int> basisDodAEgtefaellepensioniPctAfGageUdlob, Nullable<int> basisDodAEgtefaellepensionDaekning, Nullable<int> frivilligDodAEgtefaellepensioniPctAfGage, Nullable<int> frivilligDodAEgtefaellepensioniPctAfGageUdlob, Nullable<int> frivilligDodAEgtefaellepensionDaekning, Nullable<int> frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage, Nullable<decimal> basisDodAEgtefaellepensioniKr, Nullable<int> basisDodAEgtefaellepensioniKrUdlob, Nullable<decimal> frivilligDodAEgtefaellepensioniKr, Nullable<int> frivilligDodAEgtefaellepensioniKrUdlob, Nullable<int> obligatoriskPensionsbidrag, Nullable<int> obligatoriskPensionsbidragSkala, Nullable<int> obligatoriskPensionsbidragIngenSkalaVirkBidragPct, Nullable<decimal> obligatoriskPensionsbidragIngenSkalaVirkBidragKr, Nullable<int> obligatoriskPensionsbidragIngenSkalaMedArbBidragPct, Nullable<decimal> obligatoriskPensionsbidragIngenSkalaMedArbBidragKr, Nullable<System.DateTime> skalaDato1, Nullable<int> skalaDatoVirksomhedsbidrag1, Nullable<int> skalaDatoMedarbejderbidrag1, Nullable<System.DateTime> skalaDato2, Nullable<int> skalaDatoVirksomhedsbidrag2, Nullable<int> skalaDatoMedarbejderbidrag2, Nullable<System.DateTime> skalaDato3, Nullable<int> skalaDatoVirksomhedsbidrag3, Nullable<int> skalaDatoMedarbejderbidrag3, Nullable<System.DateTime> skalaDato4, Nullable<int> skalaDatoVirksomhedsbidrag4, Nullable<int> skalaDatoMedarbejderbidrag4, Nullable<System.DateTime> skalaDato5, Nullable<int> skalaDatoVirksomhedsbidrag5, Nullable<int> skalaDatoMedarbejderbidrag5, Nullable<int> skalaAlder1, Nullable<int> skalaAlderVirksomhedsbidrag1, Nullable<int> skalaAlderMedarbejderbidrag1, Nullable<int> skalaAlder2, Nullable<int> skalaAlderVirksomhedsbidrag2, Nullable<int> skalaAlderMedarbejderbidrag2, Nullable<int> skalaAlder3, Nullable<int> skalaAlderVirksomhedsbidrag3, Nullable<int> skalaAlderMedarbejderbidrag3, Nullable<int> skalaAlder4, Nullable<int> skalaAlderVirksomhedsbidrag4, Nullable<int> skalaAlderMedarbejderbidrag4, Nullable<int> skalaAlder5, Nullable<int> skalaAlderVirksomhedsbidrag5, Nullable<int> skalaAlderMedarbejderbidrag5, Nullable<int> skalaAnciennitet1, Nullable<int> skalaAnciennitetVirksomhedsbidrag1, Nullable<int> skalaAnciennitetMedarbejderbidrag1, Nullable<int> skalaAnciennitet2, Nullable<int> skalaAnciennitetVirksomhedsbidrag2, Nullable<int> skalaAnciennitetMedarbejderbidrag2, Nullable<int> skalaAnciennitet3, Nullable<int> skalaAnciennitetVirksomhedsbidrag3, Nullable<int> skalaAnciennitetMedarbejderbidrag3, Nullable<int> skalaAnciennitet4, Nullable<int> skalaAnciennitetVirksomhedsbidrag4, Nullable<int> skalaAnciennitetMedarbejderbidrag4, Nullable<int> skalaAnciennitet5, Nullable<int> skalaAnciennitetVirksomhedsbidrag5, Nullable<int> skalaAnciennitetMedarbejderbidrag5, Nullable<int> overenskomstforhold, Nullable<int> overenskomstforholdOverenskomster, Nullable<int> genkob, Nullable<bool> opsparingstyperKapitalpension, Nullable<int> opsparingstyperKapitalpensionUdlob, Nullable<bool> opsparingstyperRatepension, Nullable<int> opsparingstyperRatepensionUdlob, Nullable<bool> opsparingstyperLivrentepension, Nullable<int> opsparingstyperLivrentepensionUdlob, Nullable<int> opsparingstyperKrav, Nullable<int> opsparingstyperKravRatePct, Nullable<int> opsparingstyperKravLivsvarigPct, Nullable<int> opsparingsform, Nullable<int> opsparingsform2LinkopsparingPct, Nullable<int> opsparingsform2AMPmarkedsopsparingPct, Nullable<int> helbredsoplysninger, Nullable<int> helbredsoplysningerNytegning, Nullable<int> helbredsoplysningerNytegning3PersonligeHelbredsoplysningerType, Nullable<int> helbredsoplysningerAttestgraense, Nullable<int> servicekonceptIndmeldelse, Nullable<int> policeudstedelse, Nullable<int> omkostninger, Nullable<bool> sitesInformationssite, Nullable<bool> sitesAdministrationssite, Nullable<int> sitesKontaktpersoner, string noter, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var medarbejderGruppeIDParameter = medarbejderGruppeID.HasValue ?
                new ObjectParameter("MedarbejderGruppeID", medarbejderGruppeID) :
                new ObjectParameter("MedarbejderGruppeID", typeof(int));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(int));
    
            var etableringsdatoParameter = etableringsdato.HasValue ?
                new ObjectParameter("Etableringsdato", etableringsdato) :
                new ObjectParameter("Etableringsdato", typeof(System.DateTime));
    
            var forfaldParameter = forfald.HasValue ?
                new ObjectParameter("Forfald", forfald) :
                new ObjectParameter("Forfald", typeof(int));
    
            var indmeldelsestidspunktParameter = indmeldelsestidspunkt.HasValue ?
                new ObjectParameter("Indmeldelsestidspunkt", indmeldelsestidspunkt) :
                new ObjectParameter("Indmeldelsestidspunkt", typeof(int));
    
            var indmeldelsestidspunktAnsatParameter = indmeldelsestidspunktAnsat.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktAnsat", indmeldelsestidspunktAnsat) :
                new ObjectParameter("IndmeldelsestidspunktAnsat", typeof(int));
    
            var indmeldelsestidspunktAnciennitetParameter = indmeldelsestidspunktAnciennitet.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktAnciennitet", indmeldelsestidspunktAnciennitet) :
                new ObjectParameter("IndmeldelsestidspunktAnciennitet", typeof(int));
    
            var indmeldelsestidspunktFyldteParameter = indmeldelsestidspunktFyldte.HasValue ?
                new ObjectParameter("IndmeldelsestidspunktFyldte", indmeldelsestidspunktFyldte) :
                new ObjectParameter("IndmeldelsestidspunktFyldte", typeof(int));
    
            var tidligstParameter = tidligst.HasValue ?
                new ObjectParameter("Tidligst", tidligst) :
                new ObjectParameter("Tidligst", typeof(int));
    
            var tidligstFyldteParameter = tidligstFyldte.HasValue ?
                new ObjectParameter("TidligstFyldte", tidligstFyldte) :
                new ObjectParameter("TidligstFyldte", typeof(int));
    
            var senestParameter = senest.HasValue ?
                new ObjectParameter("Senest", senest) :
                new ObjectParameter("Senest", typeof(int));
    
            var senest2FrivilligOverParameter = senest2FrivilligOver.HasValue ?
                new ObjectParameter("Senest2FrivilligOver", senest2FrivilligOver) :
                new ObjectParameter("Senest2FrivilligOver", typeof(int));
    
            var senest3IkkeNyansatteOverParameter = senest3IkkeNyansatteOver.HasValue ?
                new ObjectParameter("Senest3IkkeNyansatteOver", senest3IkkeNyansatteOver) :
                new ObjectParameter("Senest3IkkeNyansatteOver", typeof(int));
    
            var indmeldelseskriterierParameter = indmeldelseskriterier.HasValue ?
                new ObjectParameter("Indmeldelseskriterier", indmeldelseskriterier) :
                new ObjectParameter("Indmeldelseskriterier", typeof(int));
    
            var indmeldelseskriterier2frivilligParameter = indmeldelseskriterier2frivillig.HasValue ?
                new ObjectParameter("Indmeldelseskriterier2frivillig", indmeldelseskriterier2frivillig) :
                new ObjectParameter("Indmeldelseskriterier2frivillig", typeof(bool));
    
            var undtagelserParameter = undtagelser.HasValue ?
                new ObjectParameter("Undtagelser", undtagelser) :
                new ObjectParameter("Undtagelser", typeof(int));
    
            var undtagelser3FritekstParameter = undtagelser3Fritekst != null ?
                new ObjectParameter("Undtagelser3Fritekst", undtagelser3Fritekst) :
                new ObjectParameter("Undtagelser3Fritekst", typeof(string));
    
            var invalidepensionParameter = invalidepension.HasValue ?
                new ObjectParameter("Invalidepension", invalidepension) :
                new ObjectParameter("Invalidepension", typeof(bool));
    
            var invalidepensionTypeParameter = invalidepensionType.HasValue ?
                new ObjectParameter("InvalidepensionType", invalidepensionType) :
                new ObjectParameter("InvalidepensionType", typeof(int));
    
            var basisInvalidepensioniPctAfGageParameter = basisInvalidepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisInvalidepensioniPctAfGage", basisInvalidepensioniPctAfGage) :
                new ObjectParameter("BasisInvalidepensioniPctAfGage", typeof(int));
    
            var basisInvalidepensioniPctAfGageUdlobParameter = basisInvalidepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisInvalidepensioniPctAfGageUdlob", basisInvalidepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisInvalidepensioniPctAfGageUdlob", typeof(int));
    
            var basisInvalidepensionDaekningParameter = basisInvalidepensionDaekning.HasValue ?
                new ObjectParameter("BasisInvalidepensionDaekning", basisInvalidepensionDaekning) :
                new ObjectParameter("BasisInvalidepensionDaekning", typeof(int));
    
            var frivilligInvalidepensioniPctAfGageParameter = frivilligInvalidepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniPctAfGage", frivilligInvalidepensioniPctAfGage) :
                new ObjectParameter("FrivilligInvalidepensioniPctAfGage", typeof(int));
    
            var frivilligInvalidepensioniPctAfGageUdlobParameter = frivilligInvalidepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniPctAfGageUdlob", frivilligInvalidepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligInvalidepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligInvalidepensionDaekningParameter = frivilligInvalidepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidepensionDaekning", frivilligInvalidepensionDaekning) :
                new ObjectParameter("FrivilligInvalidepensionDaekning", typeof(int));
    
            var frivilligInvalidepensionDaekning2PctAfGageParameter = frivilligInvalidepensionDaekning2PctAfGage.HasValue ?
                new ObjectParameter("FrivilligInvalidepensionDaekning2PctAfGage", frivilligInvalidepensionDaekning2PctAfGage) :
                new ObjectParameter("FrivilligInvalidepensionDaekning2PctAfGage", typeof(int));
    
            var basisInvalidepensioniKrParameter = basisInvalidepensioniKr.HasValue ?
                new ObjectParameter("BasisInvalidepensioniKr", basisInvalidepensioniKr) :
                new ObjectParameter("BasisInvalidepensioniKr", typeof(decimal));
    
            var basisInvalidepensioniKrUdlobParameter = basisInvalidepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisInvalidepensioniKrUdlob", basisInvalidepensioniKrUdlob) :
                new ObjectParameter("BasisInvalidepensioniKrUdlob", typeof(int));
    
            var frivilligInvalidepensioniKrParameter = frivilligInvalidepensioniKr.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniKr", frivilligInvalidepensioniKr) :
                new ObjectParameter("FrivilligInvalidepensioniKr", typeof(decimal));
    
            var frivilligInvalidepensioniKrUdlobParameter = frivilligInvalidepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidepensioniKrUdlob", frivilligInvalidepensioniKrUdlob) :
                new ObjectParameter("FrivilligInvalidepensioniKrUdlob", typeof(int));
    
            var invalidepensionMindstKrParameter = invalidepensionMindstKr.HasValue ?
                new ObjectParameter("InvalidepensionMindstKr", invalidepensionMindstKr) :
                new ObjectParameter("InvalidepensionMindstKr", typeof(decimal));
    
            var invalidesumParameter = invalidesum.HasValue ?
                new ObjectParameter("Invalidesum", invalidesum) :
                new ObjectParameter("Invalidesum", typeof(bool));
    
            var invalidesumTypeParameter = invalidesumType.HasValue ?
                new ObjectParameter("InvalidesumType", invalidesumType) :
                new ObjectParameter("InvalidesumType", typeof(int));
    
            var basisInvalidesumPctAfGageParameter = basisInvalidesumPctAfGage.HasValue ?
                new ObjectParameter("BasisInvalidesumPctAfGage", basisInvalidesumPctAfGage) :
                new ObjectParameter("BasisInvalidesumPctAfGage", typeof(int));
    
            var basisInvalidesumUdlobParameter = basisInvalidesumUdlob.HasValue ?
                new ObjectParameter("BasisInvalidesumUdlob", basisInvalidesumUdlob) :
                new ObjectParameter("BasisInvalidesumUdlob", typeof(int));
    
            var basisInvalidesumPctDaekningParameter = basisInvalidesumPctDaekning.HasValue ?
                new ObjectParameter("BasisInvalidesumPctDaekning", basisInvalidesumPctDaekning) :
                new ObjectParameter("BasisInvalidesumPctDaekning", typeof(int));
    
            var frivilligInvalidesumPctAfGageParameter = frivilligInvalidesumPctAfGage.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctAfGage", frivilligInvalidesumPctAfGage) :
                new ObjectParameter("FrivilligInvalidesumPctAfGage", typeof(int));
    
            var frivilligInvalidesumPctUdlobParameter = frivilligInvalidesumPctUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctUdlob", frivilligInvalidesumPctUdlob) :
                new ObjectParameter("FrivilligInvalidesumPctUdlob", typeof(int));
    
            var frivilligInvalidesumPctDaekningParameter = frivilligInvalidesumPctDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctDaekning", frivilligInvalidesumPctDaekning) :
                new ObjectParameter("FrivilligInvalidesumPctDaekning", typeof(int));
    
            var frivilligInvalidesumPctSolidariskDaekningParameter = frivilligInvalidesumPctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidesumPctSolidariskDaekning", frivilligInvalidesumPctSolidariskDaekning) :
                new ObjectParameter("FrivilligInvalidesumPctSolidariskDaekning", typeof(int));
    
            var basisInvalidesumSkattekodeParameter = basisInvalidesumSkattekode.HasValue ?
                new ObjectParameter("BasisInvalidesumSkattekode", basisInvalidesumSkattekode) :
                new ObjectParameter("BasisInvalidesumSkattekode", typeof(int));
    
            var frivilligInvalidesumSkattekodeParameter = frivilligInvalidesumSkattekode.HasValue ?
                new ObjectParameter("FrivilligInvalidesumSkattekode", frivilligInvalidesumSkattekode) :
                new ObjectParameter("FrivilligInvalidesumSkattekode", typeof(int));
    
            var basisInvalidesumKrParameter = basisInvalidesumKr.HasValue ?
                new ObjectParameter("BasisInvalidesumKr", basisInvalidesumKr) :
                new ObjectParameter("BasisInvalidesumKr", typeof(decimal));
    
            var basisInvalidesumKrUdlobParameter = basisInvalidesumKrUdlob.HasValue ?
                new ObjectParameter("BasisInvalidesumKrUdlob", basisInvalidesumKrUdlob) :
                new ObjectParameter("BasisInvalidesumKrUdlob", typeof(int));
    
            var basisInvalidesumKrDaekningParameter = basisInvalidesumKrDaekning.HasValue ?
                new ObjectParameter("BasisInvalidesumKrDaekning", basisInvalidesumKrDaekning) :
                new ObjectParameter("BasisInvalidesumKrDaekning", typeof(int));
    
            var frivilligInvalidesumKrParameter = frivilligInvalidesumKr.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKr", frivilligInvalidesumKr) :
                new ObjectParameter("FrivilligInvalidesumKr", typeof(decimal));
    
            var frivilligInvalidesumKrUdlobParameter = frivilligInvalidesumKrUdlob.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKrUdlob", frivilligInvalidesumKrUdlob) :
                new ObjectParameter("FrivilligInvalidesumKrUdlob", typeof(int));
    
            var frivilligInvalidesumKrDaekningParameter = frivilligInvalidesumKrDaekning.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKrDaekning", frivilligInvalidesumKrDaekning) :
                new ObjectParameter("FrivilligInvalidesumKrDaekning", typeof(int));
    
            var frivilligInvalidesumKrGruppedaekningKrParameter = frivilligInvalidesumKrGruppedaekningKr.HasValue ?
                new ObjectParameter("FrivilligInvalidesumKrGruppedaekningKr", frivilligInvalidesumKrGruppedaekningKr) :
                new ObjectParameter("FrivilligInvalidesumKrGruppedaekningKr", typeof(decimal));
    
            var invalidesumMinimumParameter = invalidesumMinimum.HasValue ?
                new ObjectParameter("InvalidesumMinimum", invalidesumMinimum) :
                new ObjectParameter("InvalidesumMinimum", typeof(decimal));
    
            var kritiskSygdomParameter = kritiskSygdom.HasValue ?
                new ObjectParameter("KritiskSygdom", kritiskSygdom) :
                new ObjectParameter("KritiskSygdom", typeof(bool));
    
            var kritiskSygdomTypeParameter = kritiskSygdomType.HasValue ?
                new ObjectParameter("KritiskSygdomType", kritiskSygdomType) :
                new ObjectParameter("KritiskSygdomType", typeof(bool));
    
            var basisKritiskSygdomPctAfGageParameter = basisKritiskSygdomPctAfGage.HasValue ?
                new ObjectParameter("BasisKritiskSygdomPctAfGage", basisKritiskSygdomPctAfGage) :
                new ObjectParameter("BasisKritiskSygdomPctAfGage", typeof(int));
    
            var basisKritiskSygdomUdlobParameter = basisKritiskSygdomUdlob.HasValue ?
                new ObjectParameter("BasisKritiskSygdomUdlob", basisKritiskSygdomUdlob) :
                new ObjectParameter("BasisKritiskSygdomUdlob", typeof(int));
    
            var basisKritiskSygdomPctDaekningParameter = basisKritiskSygdomPctDaekning.HasValue ?
                new ObjectParameter("BasisKritiskSygdomPctDaekning", basisKritiskSygdomPctDaekning) :
                new ObjectParameter("BasisKritiskSygdomPctDaekning", typeof(int));
    
            var frivilligKritiskSygdomPctAfGageParameter = frivilligKritiskSygdomPctAfGage.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctAfGage", frivilligKritiskSygdomPctAfGage) :
                new ObjectParameter("FrivilligKritiskSygdomPctAfGage", typeof(int));
    
            var frivilligKritiskSygdomPctUdlobParameter = frivilligKritiskSygdomPctUdlob.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctUdlob", frivilligKritiskSygdomPctUdlob) :
                new ObjectParameter("FrivilligKritiskSygdomPctUdlob", typeof(int));
    
            var frivilligKritiskSygdomPctDaekningParameter = frivilligKritiskSygdomPctDaekning.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctDaekning", frivilligKritiskSygdomPctDaekning) :
                new ObjectParameter("FrivilligKritiskSygdomPctDaekning", typeof(int));
    
            var frivilligKritiskSygdomPctSolidariskDaekningParameter = frivilligKritiskSygdomPctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomPctSolidariskDaekning", frivilligKritiskSygdomPctSolidariskDaekning) :
                new ObjectParameter("FrivilligKritiskSygdomPctSolidariskDaekning", typeof(int));
    
            var basisKritiskSygdomKrParameter = basisKritiskSygdomKr.HasValue ?
                new ObjectParameter("BasisKritiskSygdomKr", basisKritiskSygdomKr) :
                new ObjectParameter("BasisKritiskSygdomKr", typeof(decimal));
    
            var basisKritiskSygdomKrUdlobParameter = basisKritiskSygdomKrUdlob.HasValue ?
                new ObjectParameter("BasisKritiskSygdomKrUdlob", basisKritiskSygdomKrUdlob) :
                new ObjectParameter("BasisKritiskSygdomKrUdlob", typeof(int));
    
            var basisKritiskSygdomKrDaekningParameter = basisKritiskSygdomKrDaekning.HasValue ?
                new ObjectParameter("BasisKritiskSygdomKrDaekning", basisKritiskSygdomKrDaekning) :
                new ObjectParameter("BasisKritiskSygdomKrDaekning", typeof(int));
    
            var frivilligKritiskSygdomKrParameter = frivilligKritiskSygdomKr.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKr", frivilligKritiskSygdomKr) :
                new ObjectParameter("FrivilligKritiskSygdomKr", typeof(decimal));
    
            var frivilligKritiskSygdomKrUdlobParameter = frivilligKritiskSygdomKrUdlob.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKrUdlob", frivilligKritiskSygdomKrUdlob) :
                new ObjectParameter("FrivilligKritiskSygdomKrUdlob", typeof(int));
    
            var frivilligKritiskSygdomKrDaekningParameter = frivilligKritiskSygdomKrDaekning.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKrDaekning", frivilligKritiskSygdomKrDaekning) :
                new ObjectParameter("FrivilligKritiskSygdomKrDaekning", typeof(int));
    
            var frivilligKritiskSygdomKrGruppedaekningKrParameter = frivilligKritiskSygdomKrGruppedaekningKr.HasValue ?
                new ObjectParameter("FrivilligKritiskSygdomKrGruppedaekningKr", frivilligKritiskSygdomKrGruppedaekningKr) :
                new ObjectParameter("FrivilligKritiskSygdomKrGruppedaekningKr", typeof(decimal));
    
            var basisKritiskSygdomMinimumParameter = basisKritiskSygdomMinimum.HasValue ?
                new ObjectParameter("BasisKritiskSygdomMinimum", basisKritiskSygdomMinimum) :
                new ObjectParameter("BasisKritiskSygdomMinimum", typeof(decimal));
    
            var sygdomBornepensionParameter = sygdomBornepension.HasValue ?
                new ObjectParameter("SygdomBornepension", sygdomBornepension) :
                new ObjectParameter("SygdomBornepension", typeof(bool));
    
            var sygdomBornepensionTypeParameter = sygdomBornepensionType.HasValue ?
                new ObjectParameter("SygdomBornepensionType", sygdomBornepensionType) :
                new ObjectParameter("SygdomBornepensionType", typeof(int));
    
            var basisSygdomBornepensioniPctAfGageParameter = basisSygdomBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniPctAfGage", basisSygdomBornepensioniPctAfGage) :
                new ObjectParameter("BasisSygdomBornepensioniPctAfGage", typeof(int));
    
            var basisSygdomBornepensioniPctAfGageUdlobParameter = basisSygdomBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniPctAfGageUdlob", basisSygdomBornepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisSygdomBornepensioniPctAfGageUdlob", typeof(int));
    
            var basisSygdomBornepensionDaekningParameter = basisSygdomBornepensionDaekning.HasValue ?
                new ObjectParameter("BasisSygdomBornepensionDaekning", basisSygdomBornepensionDaekning) :
                new ObjectParameter("BasisSygdomBornepensionDaekning", typeof(int));
    
            var frivilligSygdomBornepensioniPctAfGageParameter = frivilligSygdomBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGage", frivilligSygdomBornepensioniPctAfGage) :
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGage", typeof(int));
    
            var frivilligSygdomBornepensioniPctAfGageUdlobParameter = frivilligSygdomBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGageUdlob", frivilligSygdomBornepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligSygdomBornepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligSygdomBornepensionDaekningParameter = frivilligSygdomBornepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensionDaekning", frivilligSygdomBornepensionDaekning) :
                new ObjectParameter("FrivilligSygdomBornepensionDaekning", typeof(int));
    
            var frivilligSygdomBornepensionDaekning2PctSolidariskDaekningParameter = frivilligSygdomBornepensionDaekning2PctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensionDaekning2PctSolidariskDaekning", frivilligSygdomBornepensionDaekning2PctSolidariskDaekning) :
                new ObjectParameter("FrivilligSygdomBornepensionDaekning2PctSolidariskDaekning", typeof(int));
    
            var basisSygdomBornepensioniKrParameter = basisSygdomBornepensioniKr.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniKr", basisSygdomBornepensioniKr) :
                new ObjectParameter("BasisSygdomBornepensioniKr", typeof(decimal));
    
            var basisSygdomBornepensioniKrUdlobParameter = basisSygdomBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisSygdomBornepensioniKrUdlob", basisSygdomBornepensioniKrUdlob) :
                new ObjectParameter("BasisSygdomBornepensioniKrUdlob", typeof(int));
    
            var frivilligSygdomBornepensioniKrParameter = frivilligSygdomBornepensioniKr.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniKr", frivilligSygdomBornepensioniKr) :
                new ObjectParameter("FrivilligSygdomBornepensioniKr", typeof(decimal));
    
            var frivilligSygdomBornepensioniKrUdlobParameter = frivilligSygdomBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligSygdomBornepensioniKrUdlob", frivilligSygdomBornepensioniKrUdlob) :
                new ObjectParameter("FrivilligSygdomBornepensioniKrUdlob", typeof(int));
    
            var basisSygdomBornepensionMindstKrParameter = basisSygdomBornepensionMindstKr.HasValue ?
                new ObjectParameter("BasisSygdomBornepensionMindstKr", basisSygdomBornepensionMindstKr) :
                new ObjectParameter("BasisSygdomBornepensionMindstKr", typeof(decimal));
    
            var dodfaldssumParameter = dodfaldssum.HasValue ?
                new ObjectParameter("Dodfaldssum", dodfaldssum) :
                new ObjectParameter("Dodfaldssum", typeof(bool));
    
            var dodfaldssumTypeParameter = dodfaldssumType.HasValue ?
                new ObjectParameter("DodfaldssumType", dodfaldssumType) :
                new ObjectParameter("DodfaldssumType", typeof(int));
    
            var basisDodfaldssumPctAfGageParameter = basisDodfaldssumPctAfGage.HasValue ?
                new ObjectParameter("BasisDodfaldssumPctAfGage", basisDodfaldssumPctAfGage) :
                new ObjectParameter("BasisDodfaldssumPctAfGage", typeof(int));
    
            var basisDodfaldssumUdlobParameter = basisDodfaldssumUdlob.HasValue ?
                new ObjectParameter("BasisDodfaldssumUdlob", basisDodfaldssumUdlob) :
                new ObjectParameter("BasisDodfaldssumUdlob", typeof(int));
    
            var basisDodfaldssumPctDaekningParameter = basisDodfaldssumPctDaekning.HasValue ?
                new ObjectParameter("BasisDodfaldssumPctDaekning", basisDodfaldssumPctDaekning) :
                new ObjectParameter("BasisDodfaldssumPctDaekning", typeof(int));
    
            var frivilligDodfaldssumPctAfGageParameter = frivilligDodfaldssumPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctAfGage", frivilligDodfaldssumPctAfGage) :
                new ObjectParameter("FrivilligDodfaldssumPctAfGage", typeof(int));
    
            var frivilligDodfaldssumPctUdlobParameter = frivilligDodfaldssumPctUdlob.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctUdlob", frivilligDodfaldssumPctUdlob) :
                new ObjectParameter("FrivilligDodfaldssumPctUdlob", typeof(int));
    
            var frivilligDodfaldssumPctDaekningParameter = frivilligDodfaldssumPctDaekning.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctDaekning", frivilligDodfaldssumPctDaekning) :
                new ObjectParameter("FrivilligDodfaldssumPctDaekning", typeof(int));
    
            var frivilligDodfaldssumPctSolidariskDaekningParameter = frivilligDodfaldssumPctSolidariskDaekning.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumPctSolidariskDaekning", frivilligDodfaldssumPctSolidariskDaekning) :
                new ObjectParameter("FrivilligDodfaldssumPctSolidariskDaekning", typeof(int));
    
            var basisDodfaldssumSkattekodeParameter = basisDodfaldssumSkattekode.HasValue ?
                new ObjectParameter("BasisDodfaldssumSkattekode", basisDodfaldssumSkattekode) :
                new ObjectParameter("BasisDodfaldssumSkattekode", typeof(int));
    
            var frivilligDodfaldssumSkattekodeParameter = frivilligDodfaldssumSkattekode.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumSkattekode", frivilligDodfaldssumSkattekode) :
                new ObjectParameter("FrivilligDodfaldssumSkattekode", typeof(int));
    
            var basisDodfaldssumKrParameter = basisDodfaldssumKr.HasValue ?
                new ObjectParameter("BasisDodfaldssumKr", basisDodfaldssumKr) :
                new ObjectParameter("BasisDodfaldssumKr", typeof(decimal));
    
            var basisDodfaldssumKrUdlobParameter = basisDodfaldssumKrUdlob.HasValue ?
                new ObjectParameter("BasisDodfaldssumKrUdlob", basisDodfaldssumKrUdlob) :
                new ObjectParameter("BasisDodfaldssumKrUdlob", typeof(int));
    
            var basisDodfaldssumKrDaekningParameter = basisDodfaldssumKrDaekning.HasValue ?
                new ObjectParameter("BasisDodfaldssumKrDaekning", basisDodfaldssumKrDaekning) :
                new ObjectParameter("BasisDodfaldssumKrDaekning", typeof(int));
    
            var frivilligDodfaldssumKrParameter = frivilligDodfaldssumKr.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKr", frivilligDodfaldssumKr) :
                new ObjectParameter("FrivilligDodfaldssumKr", typeof(decimal));
    
            var frivilligDodfaldssumKrUdlobParameter = frivilligDodfaldssumKrUdlob.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKrUdlob", frivilligDodfaldssumKrUdlob) :
                new ObjectParameter("FrivilligDodfaldssumKrUdlob", typeof(int));
    
            var frivilligDodfaldssumKrDaekningParameter = frivilligDodfaldssumKrDaekning.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKrDaekning", frivilligDodfaldssumKrDaekning) :
                new ObjectParameter("FrivilligDodfaldssumKrDaekning", typeof(int));
    
            var frivilligDodfaldssumKrGruppedaekningKrParameter = frivilligDodfaldssumKrGruppedaekningKr.HasValue ?
                new ObjectParameter("FrivilligDodfaldssumKrGruppedaekningKr", frivilligDodfaldssumKrGruppedaekningKr) :
                new ObjectParameter("FrivilligDodfaldssumKrGruppedaekningKr", typeof(decimal));
    
            var basisDodfaldssumMinimumParameter = basisDodfaldssumMinimum.HasValue ?
                new ObjectParameter("BasisDodfaldssumMinimum", basisDodfaldssumMinimum) :
                new ObjectParameter("BasisDodfaldssumMinimum", typeof(decimal));
    
            var reservesikringParameter = reservesikring.HasValue ?
                new ObjectParameter("Reservesikring", reservesikring) :
                new ObjectParameter("Reservesikring", typeof(bool));
    
            var reservesikringTypeParameter = reservesikringType.HasValue ?
                new ObjectParameter("ReservesikringType", reservesikringType) :
                new ObjectParameter("ReservesikringType", typeof(int));
    
            var reservesikringJaParameter = reservesikringJa.HasValue ?
                new ObjectParameter("ReservesikringJa", reservesikringJa) :
                new ObjectParameter("ReservesikringJa", typeof(int));
    
            var dodBornepensionParameter = dodBornepension.HasValue ?
                new ObjectParameter("DodBornepension", dodBornepension) :
                new ObjectParameter("DodBornepension", typeof(bool));
    
            var basisDodBornepensionParameter = basisDodBornepension.HasValue ?
                new ObjectParameter("BasisDodBornepension", basisDodBornepension) :
                new ObjectParameter("BasisDodBornepension", typeof(int));
    
            var basisDodBornepensioniPctAfGageParameter = basisDodBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisDodBornepensioniPctAfGage", basisDodBornepensioniPctAfGage) :
                new ObjectParameter("BasisDodBornepensioniPctAfGage", typeof(int));
    
            var basisDodBornepensioniPctAfGageUdlobParameter = basisDodBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisDodBornepensioniPctAfGageUdlob", basisDodBornepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisDodBornepensioniPctAfGageUdlob", typeof(int));
    
            var basisDodBornepensionDaekningParameter = basisDodBornepensionDaekning.HasValue ?
                new ObjectParameter("BasisDodBornepensionDaekning", basisDodBornepensionDaekning) :
                new ObjectParameter("BasisDodBornepensionDaekning", typeof(int));
    
            var frivilligDodBornepensioniPctAfGageParameter = frivilligDodBornepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniPctAfGage", frivilligDodBornepensioniPctAfGage) :
                new ObjectParameter("FrivilligDodBornepensioniPctAfGage", typeof(int));
    
            var frivilligDodBornepensioniPctAfGageUdlobParameter = frivilligDodBornepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniPctAfGageUdlob", frivilligDodBornepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligDodBornepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligDodBornepensionDaekningParameter = frivilligDodBornepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligDodBornepensionDaekning", frivilligDodBornepensionDaekning) :
                new ObjectParameter("FrivilligDodBornepensionDaekning", typeof(int));
    
            var frivilligDodBornepensionDaekning2SolidariskPctAfGageParameter = frivilligDodBornepensionDaekning2SolidariskPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodBornepensionDaekning2SolidariskPctAfGage", frivilligDodBornepensionDaekning2SolidariskPctAfGage) :
                new ObjectParameter("FrivilligDodBornepensionDaekning2SolidariskPctAfGage", typeof(int));
    
            var basisDodBornepensioniKrParameter = basisDodBornepensioniKr.HasValue ?
                new ObjectParameter("BasisDodBornepensioniKr", basisDodBornepensioniKr) :
                new ObjectParameter("BasisDodBornepensioniKr", typeof(decimal));
    
            var basisDodBornepensioniKrUdlobParameter = basisDodBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisDodBornepensioniKrUdlob", basisDodBornepensioniKrUdlob) :
                new ObjectParameter("BasisDodBornepensioniKrUdlob", typeof(int));
    
            var frivilligDodBornepensioniKrParameter = frivilligDodBornepensioniKr.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniKr", frivilligDodBornepensioniKr) :
                new ObjectParameter("FrivilligDodBornepensioniKr", typeof(decimal));
    
            var frivilligDodBornepensioniKrUdlobParameter = frivilligDodBornepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligDodBornepensioniKrUdlob", frivilligDodBornepensioniKrUdlob) :
                new ObjectParameter("FrivilligDodBornepensioniKrUdlob", typeof(int));
    
            var basisDodBornepensionMindstKrParameter = basisDodBornepensionMindstKr.HasValue ?
                new ObjectParameter("BasisDodBornepensionMindstKr", basisDodBornepensionMindstKr) :
                new ObjectParameter("BasisDodBornepensionMindstKr", typeof(decimal));
    
            var aEgtefaellepensionParameter = aEgtefaellepension.HasValue ?
                new ObjectParameter("AEgtefaellepension", aEgtefaellepension) :
                new ObjectParameter("AEgtefaellepension", typeof(bool));
    
            var basisDodAEgtefaellepensionParameter = basisDodAEgtefaellepension.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepension", basisDodAEgtefaellepension) :
                new ObjectParameter("BasisDodAEgtefaellepension", typeof(int));
    
            var basisDodAEgtefaellepensioniPctAfGageParameter = basisDodAEgtefaellepensioniPctAfGage.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGage", basisDodAEgtefaellepensioniPctAfGage) :
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGage", typeof(int));
    
            var basisDodAEgtefaellepensioniPctAfGageUdlobParameter = basisDodAEgtefaellepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGageUdlob", basisDodAEgtefaellepensioniPctAfGageUdlob) :
                new ObjectParameter("BasisDodAEgtefaellepensioniPctAfGageUdlob", typeof(int));
    
            var basisDodAEgtefaellepensionDaekningParameter = basisDodAEgtefaellepensionDaekning.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensionDaekning", basisDodAEgtefaellepensionDaekning) :
                new ObjectParameter("BasisDodAEgtefaellepensionDaekning", typeof(int));
    
            var frivilligDodAEgtefaellepensioniPctAfGageParameter = frivilligDodAEgtefaellepensioniPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGage", frivilligDodAEgtefaellepensioniPctAfGage) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGage", typeof(int));
    
            var frivilligDodAEgtefaellepensioniPctAfGageUdlobParameter = frivilligDodAEgtefaellepensioniPctAfGageUdlob.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGageUdlob", frivilligDodAEgtefaellepensioniPctAfGageUdlob) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniPctAfGageUdlob", typeof(int));
    
            var frivilligDodAEgtefaellepensionDaekningParameter = frivilligDodAEgtefaellepensionDaekning.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning", frivilligDodAEgtefaellepensionDaekning) :
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning", typeof(int));
    
            var frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGageParameter = frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage", frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage) :
                new ObjectParameter("FrivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGage", typeof(int));
    
            var basisDodAEgtefaellepensioniKrParameter = basisDodAEgtefaellepensioniKr.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniKr", basisDodAEgtefaellepensioniKr) :
                new ObjectParameter("BasisDodAEgtefaellepensioniKr", typeof(decimal));
    
            var basisDodAEgtefaellepensioniKrUdlobParameter = basisDodAEgtefaellepensioniKrUdlob.HasValue ?
                new ObjectParameter("BasisDodAEgtefaellepensioniKrUdlob", basisDodAEgtefaellepensioniKrUdlob) :
                new ObjectParameter("BasisDodAEgtefaellepensioniKrUdlob", typeof(int));
    
            var frivilligDodAEgtefaellepensioniKrParameter = frivilligDodAEgtefaellepensioniKr.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKr", frivilligDodAEgtefaellepensioniKr) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKr", typeof(decimal));
    
            var frivilligDodAEgtefaellepensioniKrUdlobParameter = frivilligDodAEgtefaellepensioniKrUdlob.HasValue ?
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKrUdlob", frivilligDodAEgtefaellepensioniKrUdlob) :
                new ObjectParameter("FrivilligDodAEgtefaellepensioniKrUdlob", typeof(int));
    
            var obligatoriskPensionsbidragParameter = obligatoriskPensionsbidrag.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidrag", obligatoriskPensionsbidrag) :
                new ObjectParameter("ObligatoriskPensionsbidrag", typeof(int));
    
            var obligatoriskPensionsbidragSkalaParameter = obligatoriskPensionsbidragSkala.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragSkala", obligatoriskPensionsbidragSkala) :
                new ObjectParameter("ObligatoriskPensionsbidragSkala", typeof(int));
    
            var obligatoriskPensionsbidragIngenSkalaVirkBidragPctParameter = obligatoriskPensionsbidragIngenSkalaVirkBidragPct.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragPct", obligatoriskPensionsbidragIngenSkalaVirkBidragPct) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragPct", typeof(int));
    
            var obligatoriskPensionsbidragIngenSkalaVirkBidragKrParameter = obligatoriskPensionsbidragIngenSkalaVirkBidragKr.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragKr", obligatoriskPensionsbidragIngenSkalaVirkBidragKr) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaVirkBidragKr", typeof(decimal));
    
            var obligatoriskPensionsbidragIngenSkalaMedArbBidragPctParameter = obligatoriskPensionsbidragIngenSkalaMedArbBidragPct.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragPct", obligatoriskPensionsbidragIngenSkalaMedArbBidragPct) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragPct", typeof(int));
    
            var obligatoriskPensionsbidragIngenSkalaMedArbBidragKrParameter = obligatoriskPensionsbidragIngenSkalaMedArbBidragKr.HasValue ?
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragKr", obligatoriskPensionsbidragIngenSkalaMedArbBidragKr) :
                new ObjectParameter("ObligatoriskPensionsbidragIngenSkalaMedArbBidragKr", typeof(decimal));
    
            var skalaDato1Parameter = skalaDato1.HasValue ?
                new ObjectParameter("SkalaDato1", skalaDato1) :
                new ObjectParameter("SkalaDato1", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag1Parameter = skalaDatoVirksomhedsbidrag1.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag1", skalaDatoVirksomhedsbidrag1) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag1", typeof(int));
    
            var skalaDatoMedarbejderbidrag1Parameter = skalaDatoMedarbejderbidrag1.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag1", skalaDatoMedarbejderbidrag1) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag1", typeof(int));
    
            var skalaDato2Parameter = skalaDato2.HasValue ?
                new ObjectParameter("SkalaDato2", skalaDato2) :
                new ObjectParameter("SkalaDato2", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag2Parameter = skalaDatoVirksomhedsbidrag2.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag2", skalaDatoVirksomhedsbidrag2) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag2", typeof(int));
    
            var skalaDatoMedarbejderbidrag2Parameter = skalaDatoMedarbejderbidrag2.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag2", skalaDatoMedarbejderbidrag2) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag2", typeof(int));
    
            var skalaDato3Parameter = skalaDato3.HasValue ?
                new ObjectParameter("SkalaDato3", skalaDato3) :
                new ObjectParameter("SkalaDato3", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag3Parameter = skalaDatoVirksomhedsbidrag3.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag3", skalaDatoVirksomhedsbidrag3) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag3", typeof(int));
    
            var skalaDatoMedarbejderbidrag3Parameter = skalaDatoMedarbejderbidrag3.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag3", skalaDatoMedarbejderbidrag3) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag3", typeof(int));
    
            var skalaDato4Parameter = skalaDato4.HasValue ?
                new ObjectParameter("SkalaDato4", skalaDato4) :
                new ObjectParameter("SkalaDato4", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag4Parameter = skalaDatoVirksomhedsbidrag4.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag4", skalaDatoVirksomhedsbidrag4) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag4", typeof(int));
    
            var skalaDatoMedarbejderbidrag4Parameter = skalaDatoMedarbejderbidrag4.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag4", skalaDatoMedarbejderbidrag4) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag4", typeof(int));
    
            var skalaDato5Parameter = skalaDato5.HasValue ?
                new ObjectParameter("SkalaDato5", skalaDato5) :
                new ObjectParameter("SkalaDato5", typeof(System.DateTime));
    
            var skalaDatoVirksomhedsbidrag5Parameter = skalaDatoVirksomhedsbidrag5.HasValue ?
                new ObjectParameter("SkalaDatoVirksomhedsbidrag5", skalaDatoVirksomhedsbidrag5) :
                new ObjectParameter("SkalaDatoVirksomhedsbidrag5", typeof(int));
    
            var skalaDatoMedarbejderbidrag5Parameter = skalaDatoMedarbejderbidrag5.HasValue ?
                new ObjectParameter("SkalaDatoMedarbejderbidrag5", skalaDatoMedarbejderbidrag5) :
                new ObjectParameter("SkalaDatoMedarbejderbidrag5", typeof(int));
    
            var skalaAlder1Parameter = skalaAlder1.HasValue ?
                new ObjectParameter("SkalaAlder1", skalaAlder1) :
                new ObjectParameter("SkalaAlder1", typeof(int));
    
            var skalaAlderVirksomhedsbidrag1Parameter = skalaAlderVirksomhedsbidrag1.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag1", skalaAlderVirksomhedsbidrag1) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag1", typeof(int));
    
            var skalaAlderMedarbejderbidrag1Parameter = skalaAlderMedarbejderbidrag1.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag1", skalaAlderMedarbejderbidrag1) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag1", typeof(int));
    
            var skalaAlder2Parameter = skalaAlder2.HasValue ?
                new ObjectParameter("SkalaAlder2", skalaAlder2) :
                new ObjectParameter("SkalaAlder2", typeof(int));
    
            var skalaAlderVirksomhedsbidrag2Parameter = skalaAlderVirksomhedsbidrag2.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag2", skalaAlderVirksomhedsbidrag2) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag2", typeof(int));
    
            var skalaAlderMedarbejderbidrag2Parameter = skalaAlderMedarbejderbidrag2.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag2", skalaAlderMedarbejderbidrag2) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag2", typeof(int));
    
            var skalaAlder3Parameter = skalaAlder3.HasValue ?
                new ObjectParameter("SkalaAlder3", skalaAlder3) :
                new ObjectParameter("SkalaAlder3", typeof(int));
    
            var skalaAlderVirksomhedsbidrag3Parameter = skalaAlderVirksomhedsbidrag3.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag3", skalaAlderVirksomhedsbidrag3) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag3", typeof(int));
    
            var skalaAlderMedarbejderbidrag3Parameter = skalaAlderMedarbejderbidrag3.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag3", skalaAlderMedarbejderbidrag3) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag3", typeof(int));
    
            var skalaAlder4Parameter = skalaAlder4.HasValue ?
                new ObjectParameter("SkalaAlder4", skalaAlder4) :
                new ObjectParameter("SkalaAlder4", typeof(int));
    
            var skalaAlderVirksomhedsbidrag4Parameter = skalaAlderVirksomhedsbidrag4.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag4", skalaAlderVirksomhedsbidrag4) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag4", typeof(int));
    
            var skalaAlderMedarbejderbidrag4Parameter = skalaAlderMedarbejderbidrag4.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag4", skalaAlderMedarbejderbidrag4) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag4", typeof(int));
    
            var skalaAlder5Parameter = skalaAlder5.HasValue ?
                new ObjectParameter("SkalaAlder5", skalaAlder5) :
                new ObjectParameter("SkalaAlder5", typeof(int));
    
            var skalaAlderVirksomhedsbidrag5Parameter = skalaAlderVirksomhedsbidrag5.HasValue ?
                new ObjectParameter("SkalaAlderVirksomhedsbidrag5", skalaAlderVirksomhedsbidrag5) :
                new ObjectParameter("SkalaAlderVirksomhedsbidrag5", typeof(int));
    
            var skalaAlderMedarbejderbidrag5Parameter = skalaAlderMedarbejderbidrag5.HasValue ?
                new ObjectParameter("SkalaAlderMedarbejderbidrag5", skalaAlderMedarbejderbidrag5) :
                new ObjectParameter("SkalaAlderMedarbejderbidrag5", typeof(int));
    
            var skalaAnciennitet1Parameter = skalaAnciennitet1.HasValue ?
                new ObjectParameter("SkalaAnciennitet1", skalaAnciennitet1) :
                new ObjectParameter("SkalaAnciennitet1", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag1Parameter = skalaAnciennitetVirksomhedsbidrag1.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag1", skalaAnciennitetVirksomhedsbidrag1) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag1", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag1Parameter = skalaAnciennitetMedarbejderbidrag1.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag1", skalaAnciennitetMedarbejderbidrag1) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag1", typeof(int));
    
            var skalaAnciennitet2Parameter = skalaAnciennitet2.HasValue ?
                new ObjectParameter("SkalaAnciennitet2", skalaAnciennitet2) :
                new ObjectParameter("SkalaAnciennitet2", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag2Parameter = skalaAnciennitetVirksomhedsbidrag2.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag2", skalaAnciennitetVirksomhedsbidrag2) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag2", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag2Parameter = skalaAnciennitetMedarbejderbidrag2.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag2", skalaAnciennitetMedarbejderbidrag2) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag2", typeof(int));
    
            var skalaAnciennitet3Parameter = skalaAnciennitet3.HasValue ?
                new ObjectParameter("SkalaAnciennitet3", skalaAnciennitet3) :
                new ObjectParameter("SkalaAnciennitet3", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag3Parameter = skalaAnciennitetVirksomhedsbidrag3.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag3", skalaAnciennitetVirksomhedsbidrag3) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag3", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag3Parameter = skalaAnciennitetMedarbejderbidrag3.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag3", skalaAnciennitetMedarbejderbidrag3) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag3", typeof(int));
    
            var skalaAnciennitet4Parameter = skalaAnciennitet4.HasValue ?
                new ObjectParameter("SkalaAnciennitet4", skalaAnciennitet4) :
                new ObjectParameter("SkalaAnciennitet4", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag4Parameter = skalaAnciennitetVirksomhedsbidrag4.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag4", skalaAnciennitetVirksomhedsbidrag4) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag4", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag4Parameter = skalaAnciennitetMedarbejderbidrag4.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag4", skalaAnciennitetMedarbejderbidrag4) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag4", typeof(int));
    
            var skalaAnciennitet5Parameter = skalaAnciennitet5.HasValue ?
                new ObjectParameter("SkalaAnciennitet5", skalaAnciennitet5) :
                new ObjectParameter("SkalaAnciennitet5", typeof(int));
    
            var skalaAnciennitetVirksomhedsbidrag5Parameter = skalaAnciennitetVirksomhedsbidrag5.HasValue ?
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag5", skalaAnciennitetVirksomhedsbidrag5) :
                new ObjectParameter("SkalaAnciennitetVirksomhedsbidrag5", typeof(int));
    
            var skalaAnciennitetMedarbejderbidrag5Parameter = skalaAnciennitetMedarbejderbidrag5.HasValue ?
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag5", skalaAnciennitetMedarbejderbidrag5) :
                new ObjectParameter("SkalaAnciennitetMedarbejderbidrag5", typeof(int));
    
            var overenskomstforholdParameter = overenskomstforhold.HasValue ?
                new ObjectParameter("Overenskomstforhold", overenskomstforhold) :
                new ObjectParameter("Overenskomstforhold", typeof(int));
    
            var overenskomstforholdOverenskomsterParameter = overenskomstforholdOverenskomster.HasValue ?
                new ObjectParameter("OverenskomstforholdOverenskomster", overenskomstforholdOverenskomster) :
                new ObjectParameter("OverenskomstforholdOverenskomster", typeof(int));
    
            var genkobParameter = genkob.HasValue ?
                new ObjectParameter("Genkob", genkob) :
                new ObjectParameter("Genkob", typeof(int));
    
            var opsparingstyperKapitalpensionParameter = opsparingstyperKapitalpension.HasValue ?
                new ObjectParameter("OpsparingstyperKapitalpension", opsparingstyperKapitalpension) :
                new ObjectParameter("OpsparingstyperKapitalpension", typeof(bool));
    
            var opsparingstyperKapitalpensionUdlobParameter = opsparingstyperKapitalpensionUdlob.HasValue ?
                new ObjectParameter("OpsparingstyperKapitalpensionUdlob", opsparingstyperKapitalpensionUdlob) :
                new ObjectParameter("OpsparingstyperKapitalpensionUdlob", typeof(int));
    
            var opsparingstyperRatepensionParameter = opsparingstyperRatepension.HasValue ?
                new ObjectParameter("OpsparingstyperRatepension", opsparingstyperRatepension) :
                new ObjectParameter("OpsparingstyperRatepension", typeof(bool));
    
            var opsparingstyperRatepensionUdlobParameter = opsparingstyperRatepensionUdlob.HasValue ?
                new ObjectParameter("OpsparingstyperRatepensionUdlob", opsparingstyperRatepensionUdlob) :
                new ObjectParameter("OpsparingstyperRatepensionUdlob", typeof(int));
    
            var opsparingstyperLivrentepensionParameter = opsparingstyperLivrentepension.HasValue ?
                new ObjectParameter("OpsparingstyperLivrentepension", opsparingstyperLivrentepension) :
                new ObjectParameter("OpsparingstyperLivrentepension", typeof(bool));
    
            var opsparingstyperLivrentepensionUdlobParameter = opsparingstyperLivrentepensionUdlob.HasValue ?
                new ObjectParameter("OpsparingstyperLivrentepensionUdlob", opsparingstyperLivrentepensionUdlob) :
                new ObjectParameter("OpsparingstyperLivrentepensionUdlob", typeof(int));
    
            var opsparingstyperKravParameter = opsparingstyperKrav.HasValue ?
                new ObjectParameter("OpsparingstyperKrav", opsparingstyperKrav) :
                new ObjectParameter("OpsparingstyperKrav", typeof(int));
    
            var opsparingstyperKravRatePctParameter = opsparingstyperKravRatePct.HasValue ?
                new ObjectParameter("OpsparingstyperKravRatePct", opsparingstyperKravRatePct) :
                new ObjectParameter("OpsparingstyperKravRatePct", typeof(int));
    
            var opsparingstyperKravLivsvarigPctParameter = opsparingstyperKravLivsvarigPct.HasValue ?
                new ObjectParameter("OpsparingstyperKravLivsvarigPct", opsparingstyperKravLivsvarigPct) :
                new ObjectParameter("OpsparingstyperKravLivsvarigPct", typeof(int));
    
            var opsparingsformParameter = opsparingsform.HasValue ?
                new ObjectParameter("Opsparingsform", opsparingsform) :
                new ObjectParameter("Opsparingsform", typeof(int));
    
            var opsparingsform2LinkopsparingPctParameter = opsparingsform2LinkopsparingPct.HasValue ?
                new ObjectParameter("Opsparingsform2LinkopsparingPct", opsparingsform2LinkopsparingPct) :
                new ObjectParameter("Opsparingsform2LinkopsparingPct", typeof(int));
    
            var opsparingsform2AMPmarkedsopsparingPctParameter = opsparingsform2AMPmarkedsopsparingPct.HasValue ?
                new ObjectParameter("Opsparingsform2AMPmarkedsopsparingPct", opsparingsform2AMPmarkedsopsparingPct) :
                new ObjectParameter("Opsparingsform2AMPmarkedsopsparingPct", typeof(int));
    
            var helbredsoplysningerParameter = helbredsoplysninger.HasValue ?
                new ObjectParameter("Helbredsoplysninger", helbredsoplysninger) :
                new ObjectParameter("Helbredsoplysninger", typeof(int));
    
            var helbredsoplysningerNytegningParameter = helbredsoplysningerNytegning.HasValue ?
                new ObjectParameter("HelbredsoplysningerNytegning", helbredsoplysningerNytegning) :
                new ObjectParameter("HelbredsoplysningerNytegning", typeof(int));
    
            var helbredsoplysningerNytegning3PersonligeHelbredsoplysningerTypeParameter = helbredsoplysningerNytegning3PersonligeHelbredsoplysningerType.HasValue ?
                new ObjectParameter("HelbredsoplysningerNytegning3PersonligeHelbredsoplysningerType", helbredsoplysningerNytegning3PersonligeHelbredsoplysningerType) :
                new ObjectParameter("HelbredsoplysningerNytegning3PersonligeHelbredsoplysningerType", typeof(int));
    
            var helbredsoplysningerAttestgraenseParameter = helbredsoplysningerAttestgraense.HasValue ?
                new ObjectParameter("HelbredsoplysningerAttestgraense", helbredsoplysningerAttestgraense) :
                new ObjectParameter("HelbredsoplysningerAttestgraense", typeof(int));
    
            var servicekonceptIndmeldelseParameter = servicekonceptIndmeldelse.HasValue ?
                new ObjectParameter("ServicekonceptIndmeldelse", servicekonceptIndmeldelse) :
                new ObjectParameter("ServicekonceptIndmeldelse", typeof(int));
    
            var policeudstedelseParameter = policeudstedelse.HasValue ?
                new ObjectParameter("Policeudstedelse", policeudstedelse) :
                new ObjectParameter("Policeudstedelse", typeof(int));
    
            var omkostningerParameter = omkostninger.HasValue ?
                new ObjectParameter("Omkostninger", omkostninger) :
                new ObjectParameter("Omkostninger", typeof(int));
    
            var sitesInformationssiteParameter = sitesInformationssite.HasValue ?
                new ObjectParameter("SitesInformationssite", sitesInformationssite) :
                new ObjectParameter("SitesInformationssite", typeof(bool));
    
            var sitesAdministrationssiteParameter = sitesAdministrationssite.HasValue ?
                new ObjectParameter("SitesAdministrationssite", sitesAdministrationssite) :
                new ObjectParameter("SitesAdministrationssite", typeof(bool));
    
            var sitesKontaktpersonerParameter = sitesKontaktpersoner.HasValue ?
                new ObjectParameter("SitesKontaktpersoner", sitesKontaktpersoner) :
                new ObjectParameter("SitesKontaktpersoner", typeof(int));
    
            var noterParameter = noter != null ?
                new ObjectParameter("Noter", noter) :
                new ObjectParameter("Noter", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Pensionsopsparing_Update", iDParameter, statusParameter, medarbejderGruppeIDParameter, leverandorIDParameter, etableringsdatoParameter, forfaldParameter, indmeldelsestidspunktParameter, indmeldelsestidspunktAnsatParameter, indmeldelsestidspunktAnciennitetParameter, indmeldelsestidspunktFyldteParameter, tidligstParameter, tidligstFyldteParameter, senestParameter, senest2FrivilligOverParameter, senest3IkkeNyansatteOverParameter, indmeldelseskriterierParameter, indmeldelseskriterier2frivilligParameter, undtagelserParameter, undtagelser3FritekstParameter, invalidepensionParameter, invalidepensionTypeParameter, basisInvalidepensioniPctAfGageParameter, basisInvalidepensioniPctAfGageUdlobParameter, basisInvalidepensionDaekningParameter, frivilligInvalidepensioniPctAfGageParameter, frivilligInvalidepensioniPctAfGageUdlobParameter, frivilligInvalidepensionDaekningParameter, frivilligInvalidepensionDaekning2PctAfGageParameter, basisInvalidepensioniKrParameter, basisInvalidepensioniKrUdlobParameter, frivilligInvalidepensioniKrParameter, frivilligInvalidepensioniKrUdlobParameter, invalidepensionMindstKrParameter, invalidesumParameter, invalidesumTypeParameter, basisInvalidesumPctAfGageParameter, basisInvalidesumUdlobParameter, basisInvalidesumPctDaekningParameter, frivilligInvalidesumPctAfGageParameter, frivilligInvalidesumPctUdlobParameter, frivilligInvalidesumPctDaekningParameter, frivilligInvalidesumPctSolidariskDaekningParameter, basisInvalidesumSkattekodeParameter, frivilligInvalidesumSkattekodeParameter, basisInvalidesumKrParameter, basisInvalidesumKrUdlobParameter, basisInvalidesumKrDaekningParameter, frivilligInvalidesumKrParameter, frivilligInvalidesumKrUdlobParameter, frivilligInvalidesumKrDaekningParameter, frivilligInvalidesumKrGruppedaekningKrParameter, invalidesumMinimumParameter, kritiskSygdomParameter, kritiskSygdomTypeParameter, basisKritiskSygdomPctAfGageParameter, basisKritiskSygdomUdlobParameter, basisKritiskSygdomPctDaekningParameter, frivilligKritiskSygdomPctAfGageParameter, frivilligKritiskSygdomPctUdlobParameter, frivilligKritiskSygdomPctDaekningParameter, frivilligKritiskSygdomPctSolidariskDaekningParameter, basisKritiskSygdomKrParameter, basisKritiskSygdomKrUdlobParameter, basisKritiskSygdomKrDaekningParameter, frivilligKritiskSygdomKrParameter, frivilligKritiskSygdomKrUdlobParameter, frivilligKritiskSygdomKrDaekningParameter, frivilligKritiskSygdomKrGruppedaekningKrParameter, basisKritiskSygdomMinimumParameter, sygdomBornepensionParameter, sygdomBornepensionTypeParameter, basisSygdomBornepensioniPctAfGageParameter, basisSygdomBornepensioniPctAfGageUdlobParameter, basisSygdomBornepensionDaekningParameter, frivilligSygdomBornepensioniPctAfGageParameter, frivilligSygdomBornepensioniPctAfGageUdlobParameter, frivilligSygdomBornepensionDaekningParameter, frivilligSygdomBornepensionDaekning2PctSolidariskDaekningParameter, basisSygdomBornepensioniKrParameter, basisSygdomBornepensioniKrUdlobParameter, frivilligSygdomBornepensioniKrParameter, frivilligSygdomBornepensioniKrUdlobParameter, basisSygdomBornepensionMindstKrParameter, dodfaldssumParameter, dodfaldssumTypeParameter, basisDodfaldssumPctAfGageParameter, basisDodfaldssumUdlobParameter, basisDodfaldssumPctDaekningParameter, frivilligDodfaldssumPctAfGageParameter, frivilligDodfaldssumPctUdlobParameter, frivilligDodfaldssumPctDaekningParameter, frivilligDodfaldssumPctSolidariskDaekningParameter, basisDodfaldssumSkattekodeParameter, frivilligDodfaldssumSkattekodeParameter, basisDodfaldssumKrParameter, basisDodfaldssumKrUdlobParameter, basisDodfaldssumKrDaekningParameter, frivilligDodfaldssumKrParameter, frivilligDodfaldssumKrUdlobParameter, frivilligDodfaldssumKrDaekningParameter, frivilligDodfaldssumKrGruppedaekningKrParameter, basisDodfaldssumMinimumParameter, reservesikringParameter, reservesikringTypeParameter, reservesikringJaParameter, dodBornepensionParameter, basisDodBornepensionParameter, basisDodBornepensioniPctAfGageParameter, basisDodBornepensioniPctAfGageUdlobParameter, basisDodBornepensionDaekningParameter, frivilligDodBornepensioniPctAfGageParameter, frivilligDodBornepensioniPctAfGageUdlobParameter, frivilligDodBornepensionDaekningParameter, frivilligDodBornepensionDaekning2SolidariskPctAfGageParameter, basisDodBornepensioniKrParameter, basisDodBornepensioniKrUdlobParameter, frivilligDodBornepensioniKrParameter, frivilligDodBornepensioniKrUdlobParameter, basisDodBornepensionMindstKrParameter, aEgtefaellepensionParameter, basisDodAEgtefaellepensionParameter, basisDodAEgtefaellepensioniPctAfGageParameter, basisDodAEgtefaellepensioniPctAfGageUdlobParameter, basisDodAEgtefaellepensionDaekningParameter, frivilligDodAEgtefaellepensioniPctAfGageParameter, frivilligDodAEgtefaellepensioniPctAfGageUdlobParameter, frivilligDodAEgtefaellepensionDaekningParameter, frivilligDodAEgtefaellepensionDaekning2SolidariskPctAfGageParameter, basisDodAEgtefaellepensioniKrParameter, basisDodAEgtefaellepensioniKrUdlobParameter, frivilligDodAEgtefaellepensioniKrParameter, frivilligDodAEgtefaellepensioniKrUdlobParameter, obligatoriskPensionsbidragParameter, obligatoriskPensionsbidragSkalaParameter, obligatoriskPensionsbidragIngenSkalaVirkBidragPctParameter, obligatoriskPensionsbidragIngenSkalaVirkBidragKrParameter, obligatoriskPensionsbidragIngenSkalaMedArbBidragPctParameter, obligatoriskPensionsbidragIngenSkalaMedArbBidragKrParameter, skalaDato1Parameter, skalaDatoVirksomhedsbidrag1Parameter, skalaDatoMedarbejderbidrag1Parameter, skalaDato2Parameter, skalaDatoVirksomhedsbidrag2Parameter, skalaDatoMedarbejderbidrag2Parameter, skalaDato3Parameter, skalaDatoVirksomhedsbidrag3Parameter, skalaDatoMedarbejderbidrag3Parameter, skalaDato4Parameter, skalaDatoVirksomhedsbidrag4Parameter, skalaDatoMedarbejderbidrag4Parameter, skalaDato5Parameter, skalaDatoVirksomhedsbidrag5Parameter, skalaDatoMedarbejderbidrag5Parameter, skalaAlder1Parameter, skalaAlderVirksomhedsbidrag1Parameter, skalaAlderMedarbejderbidrag1Parameter, skalaAlder2Parameter, skalaAlderVirksomhedsbidrag2Parameter, skalaAlderMedarbejderbidrag2Parameter, skalaAlder3Parameter, skalaAlderVirksomhedsbidrag3Parameter, skalaAlderMedarbejderbidrag3Parameter, skalaAlder4Parameter, skalaAlderVirksomhedsbidrag4Parameter, skalaAlderMedarbejderbidrag4Parameter, skalaAlder5Parameter, skalaAlderVirksomhedsbidrag5Parameter, skalaAlderMedarbejderbidrag5Parameter, skalaAnciennitet1Parameter, skalaAnciennitetVirksomhedsbidrag1Parameter, skalaAnciennitetMedarbejderbidrag1Parameter, skalaAnciennitet2Parameter, skalaAnciennitetVirksomhedsbidrag2Parameter, skalaAnciennitetMedarbejderbidrag2Parameter, skalaAnciennitet3Parameter, skalaAnciennitetVirksomhedsbidrag3Parameter, skalaAnciennitetMedarbejderbidrag3Parameter, skalaAnciennitet4Parameter, skalaAnciennitetVirksomhedsbidrag4Parameter, skalaAnciennitetMedarbejderbidrag4Parameter, skalaAnciennitet5Parameter, skalaAnciennitetVirksomhedsbidrag5Parameter, skalaAnciennitetMedarbejderbidrag5Parameter, overenskomstforholdParameter, overenskomstforholdOverenskomsterParameter, genkobParameter, opsparingstyperKapitalpensionParameter, opsparingstyperKapitalpensionUdlobParameter, opsparingstyperRatepensionParameter, opsparingstyperRatepensionUdlobParameter, opsparingstyperLivrentepensionParameter, opsparingstyperLivrentepensionUdlobParameter, opsparingstyperKravParameter, opsparingstyperKravRatePctParameter, opsparingstyperKravLivsvarigPctParameter, opsparingsformParameter, opsparingsform2LinkopsparingPctParameter, opsparingsform2AMPmarkedsopsparingPctParameter, helbredsoplysningerParameter, helbredsoplysningerNytegningParameter, helbredsoplysningerNytegning3PersonligeHelbredsoplysningerTypeParameter, helbredsoplysningerAttestgraenseParameter, servicekonceptIndmeldelseParameter, policeudstedelseParameter, omkostningerParameter, sitesInformationssiteParameter, sitesAdministrationssiteParameter, sitesKontaktpersonerParameter, noterParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Postnr_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Postnr_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Postnr_Insert(string postnr, string bynavn, string gade, string firma, Nullable<bool> provins, Nullable<int> land, ObjectParameter iD)
        {
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var bynavnParameter = bynavn != null ?
                new ObjectParameter("Bynavn", bynavn) :
                new ObjectParameter("Bynavn", typeof(string));
    
            var gadeParameter = gade != null ?
                new ObjectParameter("Gade", gade) :
                new ObjectParameter("Gade", typeof(string));
    
            var firmaParameter = firma != null ?
                new ObjectParameter("Firma", firma) :
                new ObjectParameter("Firma", typeof(string));
    
            var provinsParameter = provins.HasValue ?
                new ObjectParameter("Provins", provins) :
                new ObjectParameter("Provins", typeof(bool));
    
            var landParameter = land.HasValue ?
                new ObjectParameter("Land", land) :
                new ObjectParameter("Land", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Postnr_Insert", postnrParameter, bynavnParameter, gadeParameter, firmaParameter, provinsParameter, landParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Postnr_Search_Result> Co2Db_Postnr_Search(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Postnr_Search_Result>("Co2Db_Postnr_Search", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_Postnr_SelectAll_Result> Co2Db_Postnr_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Postnr_SelectAll_Result>("Co2Db_Postnr_SelectAll");
        }
    
        public virtual ObjectResult<string> Co2Db_Postnr_SelectBynavn(string postnr, Nullable<int> land)
        {
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var landParameter = land.HasValue ?
                new ObjectParameter("Land", land) :
                new ObjectParameter("Land", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Postnr_SelectBynavn", postnrParameter, landParameter);
        }
    
        public virtual ObjectResult<Co2Db_Postnr_SelectOne_Result> Co2Db_Postnr_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Postnr_SelectOne_Result>("Co2Db_Postnr_SelectOne", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Postnr_SelectOnePostnr_Result> Co2Db_Postnr_SelectOnePostnr(string postnr, Nullable<int> land)
        {
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var landParameter = land.HasValue ?
                new ObjectParameter("Land", land) :
                new ObjectParameter("Land", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Postnr_SelectOnePostnr_Result>("Co2Db_Postnr_SelectOnePostnr", postnrParameter, landParameter);
        }
    
        public virtual int Co2Db_Postnr_Update(Nullable<int> iD, string postnr, string bynavn, string gade, string firma, Nullable<bool> provins, Nullable<int> land)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var bynavnParameter = bynavn != null ?
                new ObjectParameter("Bynavn", bynavn) :
                new ObjectParameter("Bynavn", typeof(string));
    
            var gadeParameter = gade != null ?
                new ObjectParameter("Gade", gade) :
                new ObjectParameter("Gade", typeof(string));
    
            var firmaParameter = firma != null ?
                new ObjectParameter("Firma", firma) :
                new ObjectParameter("Firma", typeof(string));
    
            var provinsParameter = provins.HasValue ?
                new ObjectParameter("Provins", provins) :
                new ObjectParameter("Provins", typeof(bool));
    
            var landParameter = land.HasValue ?
                new ObjectParameter("Land", land) :
                new ObjectParameter("Land", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Postnr_Update", iDParameter, postnrParameter, bynavnParameter, gadeParameter, firmaParameter, provinsParameter, landParameter);
        }
    
        public virtual int Co2Db_PractiMan_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PractiMan_Delete", iDParameter);
        }
    
        public virtual int Co2Db_PractiMan_Insert(Nullable<int> companyID, Nullable<int> status, Nullable<int> modelID, string serialNo, Nullable<int> invoiceID, Nullable<System.DateTime> salesDate, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var salesDateParameter = salesDate.HasValue ?
                new ObjectParameter("SalesDate", salesDate) :
                new ObjectParameter("SalesDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PractiMan_Insert", companyIDParameter, statusParameter, modelIDParameter, serialNoParameter, invoiceIDParameter, salesDateParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_PractiMan_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PractiMan_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PractiMan_SelectAll_Result> Co2Db_PractiMan_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PractiMan_SelectAll_Result>("Co2Db_PractiMan_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PractiMan_SelectCompanyID_Result> Co2Db_PractiMan_SelectCompanyID(Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> companyID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PractiMan_SelectCompanyID_Result>("Co2Db_PractiMan_SelectCompanyID", isAgentParameter, agentIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PractiMan_SelectID_Result> Co2Db_PractiMan_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PractiMan_SelectID_Result>("Co2Db_PractiMan_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PractiMan_SelectModelID_Result> Co2Db_PractiMan_SelectModelID(Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> modelID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PractiMan_SelectModelID_Result>("Co2Db_PractiMan_SelectModelID", isAgentParameter, agentIDParameter, modelIDParameter);
        }
    
        public virtual int Co2Db_PractiMan_Update(Nullable<int> iD, Nullable<int> companyID, Nullable<int> status, Nullable<int> modelID, string serialNo, Nullable<int> invoiceID, Nullable<System.DateTime> salesDate, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var salesDateParameter = salesDate.HasValue ?
                new ObjectParameter("SalesDate", salesDate) :
                new ObjectParameter("SalesDate", typeof(System.DateTime));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PractiMan_Update", iDParameter, companyIDParameter, statusParameter, modelIDParameter, serialNoParameter, invoiceIDParameter, salesDateParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_PurchaseOrder_Delete(Nullable<int> iD, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrder_Delete", iDParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_PurchaseOrder_GetSupplierPurchaseOrderCount(Nullable<int> supplierID)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_PurchaseOrder_GetSupplierPurchaseOrderCount", supplierIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Co2Db_PurchaseOrder_GetTotalPrice(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Co2Db_PurchaseOrder_GetTotalPrice", iDParameter);
        }
    
        public virtual int Co2Db_PurchaseOrder_Insert(Nullable<int> status, string orderCreatedBy, Nullable<System.DateTime> purchaseDate, Nullable<int> supplierID, string supplierEmail, string purchaseOrderEmailCopy, Nullable<int> paymentID, Nullable<int> freightID, Nullable<int> currencyID, Nullable<decimal> freightPrice, Nullable<decimal> totalPurchaseOrder, string shipToEANno, string shipToName, string shipToAddress1, string shipToAddress2, string shipToZipCode, string shipToCity, string shipToState, string shipToCountry, string shipToAtt, string shipToRef, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var orderCreatedByParameter = orderCreatedBy != null ?
                new ObjectParameter("OrderCreatedBy", orderCreatedBy) :
                new ObjectParameter("OrderCreatedBy", typeof(string));
    
            var purchaseDateParameter = purchaseDate.HasValue ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(System.DateTime));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var supplierEmailParameter = supplierEmail != null ?
                new ObjectParameter("SupplierEmail", supplierEmail) :
                new ObjectParameter("SupplierEmail", typeof(string));
    
            var purchaseOrderEmailCopyParameter = purchaseOrderEmailCopy != null ?
                new ObjectParameter("PurchaseOrderEmailCopy", purchaseOrderEmailCopy) :
                new ObjectParameter("PurchaseOrderEmailCopy", typeof(string));
    
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));
    
            var freightIDParameter = freightID.HasValue ?
                new ObjectParameter("FreightID", freightID) :
                new ObjectParameter("FreightID", typeof(int));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(int));
    
            var freightPriceParameter = freightPrice.HasValue ?
                new ObjectParameter("FreightPrice", freightPrice) :
                new ObjectParameter("FreightPrice", typeof(decimal));
    
            var totalPurchaseOrderParameter = totalPurchaseOrder.HasValue ?
                new ObjectParameter("TotalPurchaseOrder", totalPurchaseOrder) :
                new ObjectParameter("TotalPurchaseOrder", typeof(decimal));
    
            var shipToEANnoParameter = shipToEANno != null ?
                new ObjectParameter("ShipToEANno", shipToEANno) :
                new ObjectParameter("ShipToEANno", typeof(string));
    
            var shipToNameParameter = shipToName != null ?
                new ObjectParameter("ShipToName", shipToName) :
                new ObjectParameter("ShipToName", typeof(string));
    
            var shipToAddress1Parameter = shipToAddress1 != null ?
                new ObjectParameter("ShipToAddress1", shipToAddress1) :
                new ObjectParameter("ShipToAddress1", typeof(string));
    
            var shipToAddress2Parameter = shipToAddress2 != null ?
                new ObjectParameter("ShipToAddress2", shipToAddress2) :
                new ObjectParameter("ShipToAddress2", typeof(string));
    
            var shipToZipCodeParameter = shipToZipCode != null ?
                new ObjectParameter("ShipToZipCode", shipToZipCode) :
                new ObjectParameter("ShipToZipCode", typeof(string));
    
            var shipToCityParameter = shipToCity != null ?
                new ObjectParameter("ShipToCity", shipToCity) :
                new ObjectParameter("ShipToCity", typeof(string));
    
            var shipToStateParameter = shipToState != null ?
                new ObjectParameter("ShipToState", shipToState) :
                new ObjectParameter("ShipToState", typeof(string));
    
            var shipToCountryParameter = shipToCountry != null ?
                new ObjectParameter("ShipToCountry", shipToCountry) :
                new ObjectParameter("ShipToCountry", typeof(string));
    
            var shipToAttParameter = shipToAtt != null ?
                new ObjectParameter("ShipToAtt", shipToAtt) :
                new ObjectParameter("ShipToAtt", typeof(string));
    
            var shipToRefParameter = shipToRef != null ?
                new ObjectParameter("ShipToRef", shipToRef) :
                new ObjectParameter("ShipToRef", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrder_Insert", statusParameter, orderCreatedByParameter, purchaseDateParameter, supplierIDParameter, supplierEmailParameter, purchaseOrderEmailCopyParameter, paymentIDParameter, freightIDParameter, currencyIDParameter, freightPriceParameter, totalPurchaseOrderParameter, shipToEANnoParameter, shipToNameParameter, shipToAddress1Parameter, shipToAddress2Parameter, shipToZipCodeParameter, shipToCityParameter, shipToStateParameter, shipToCountryParameter, shipToAttParameter, shipToRefParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_PurchaseOrder_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrder_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrder_Search_Result> Co2Db_PurchaseOrder_Search(Nullable<int> supplierID, Nullable<int> purchaseOrderID, Nullable<int> status, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrder_Search_Result>("Co2Db_PurchaseOrder_Search", supplierIDParameter, purchaseOrderIDParameter, statusParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrder_SelectAll_Result> Co2Db_PurchaseOrder_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrder_SelectAll_Result>("Co2Db_PurchaseOrder_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrder_SelectByStatus_Result> Co2Db_PurchaseOrder_SelectByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrder_SelectByStatus_Result>("Co2Db_PurchaseOrder_SelectByStatus", statusParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrder_SelectByStatusSupplier_Result> Co2Db_PurchaseOrder_SelectByStatusSupplier(Nullable<int> status, Nullable<int> supplierID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrder_SelectByStatusSupplier_Result>("Co2Db_PurchaseOrder_SelectByStatusSupplier", statusParameter, supplierIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrder_SelectBySupplier_Result> Co2Db_PurchaseOrder_SelectBySupplier(Nullable<int> supplierID)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrder_SelectBySupplier_Result>("Co2Db_PurchaseOrder_SelectBySupplier", supplierIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrder_SelectID_Result> Co2Db_PurchaseOrder_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrder_SelectID_Result>("Co2Db_PurchaseOrder_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrder_SelectOne_Result> Co2Db_PurchaseOrder_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrder_SelectOne_Result>("Co2Db_PurchaseOrder_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_PurchaseOrder_SetStatus(Nullable<int> iD, Nullable<int> status, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrder_SetStatus", iDParameter, statusParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_PurchaseOrder_Update(Nullable<int> iD, Nullable<int> status, string orderCreatedBy, Nullable<System.DateTime> purchaseDate, Nullable<int> supplierID, string supplierEmail, string purchaseOrderEmailCopy, Nullable<int> paymentID, Nullable<int> freightID, Nullable<int> currencyID, Nullable<decimal> freightPrice, Nullable<decimal> totalPurchaseOrder, string shipToEANno, string shipToName, string shipToAddress1, string shipToAddress2, string shipToZipCode, string shipToCity, string shipToState, string shipToCountry, string shipToAtt, string shipToRef, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var orderCreatedByParameter = orderCreatedBy != null ?
                new ObjectParameter("OrderCreatedBy", orderCreatedBy) :
                new ObjectParameter("OrderCreatedBy", typeof(string));
    
            var purchaseDateParameter = purchaseDate.HasValue ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(System.DateTime));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var supplierEmailParameter = supplierEmail != null ?
                new ObjectParameter("SupplierEmail", supplierEmail) :
                new ObjectParameter("SupplierEmail", typeof(string));
    
            var purchaseOrderEmailCopyParameter = purchaseOrderEmailCopy != null ?
                new ObjectParameter("PurchaseOrderEmailCopy", purchaseOrderEmailCopy) :
                new ObjectParameter("PurchaseOrderEmailCopy", typeof(string));
    
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));
    
            var freightIDParameter = freightID.HasValue ?
                new ObjectParameter("FreightID", freightID) :
                new ObjectParameter("FreightID", typeof(int));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(int));
    
            var freightPriceParameter = freightPrice.HasValue ?
                new ObjectParameter("FreightPrice", freightPrice) :
                new ObjectParameter("FreightPrice", typeof(decimal));
    
            var totalPurchaseOrderParameter = totalPurchaseOrder.HasValue ?
                new ObjectParameter("TotalPurchaseOrder", totalPurchaseOrder) :
                new ObjectParameter("TotalPurchaseOrder", typeof(decimal));
    
            var shipToEANnoParameter = shipToEANno != null ?
                new ObjectParameter("ShipToEANno", shipToEANno) :
                new ObjectParameter("ShipToEANno", typeof(string));
    
            var shipToNameParameter = shipToName != null ?
                new ObjectParameter("ShipToName", shipToName) :
                new ObjectParameter("ShipToName", typeof(string));
    
            var shipToAddress1Parameter = shipToAddress1 != null ?
                new ObjectParameter("ShipToAddress1", shipToAddress1) :
                new ObjectParameter("ShipToAddress1", typeof(string));
    
            var shipToAddress2Parameter = shipToAddress2 != null ?
                new ObjectParameter("ShipToAddress2", shipToAddress2) :
                new ObjectParameter("ShipToAddress2", typeof(string));
    
            var shipToZipCodeParameter = shipToZipCode != null ?
                new ObjectParameter("ShipToZipCode", shipToZipCode) :
                new ObjectParameter("ShipToZipCode", typeof(string));
    
            var shipToCityParameter = shipToCity != null ?
                new ObjectParameter("ShipToCity", shipToCity) :
                new ObjectParameter("ShipToCity", typeof(string));
    
            var shipToStateParameter = shipToState != null ?
                new ObjectParameter("ShipToState", shipToState) :
                new ObjectParameter("ShipToState", typeof(string));
    
            var shipToCountryParameter = shipToCountry != null ?
                new ObjectParameter("ShipToCountry", shipToCountry) :
                new ObjectParameter("ShipToCountry", typeof(string));
    
            var shipToAttParameter = shipToAtt != null ?
                new ObjectParameter("ShipToAtt", shipToAtt) :
                new ObjectParameter("ShipToAtt", typeof(string));
    
            var shipToRefParameter = shipToRef != null ?
                new ObjectParameter("ShipToRef", shipToRef) :
                new ObjectParameter("ShipToRef", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrder_Update", iDParameter, statusParameter, orderCreatedByParameter, purchaseDateParameter, supplierIDParameter, supplierEmailParameter, purchaseOrderEmailCopyParameter, paymentIDParameter, freightIDParameter, currencyIDParameter, freightPriceParameter, totalPurchaseOrderParameter, shipToEANnoParameter, shipToNameParameter, shipToAddress1Parameter, shipToAddress2Parameter, shipToZipCodeParameter, shipToCityParameter, shipToStateParameter, shipToCountryParameter, shipToAttParameter, shipToRefParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_PurchaseOrderItem_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrderItem_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_PurchaseOrderItem_GetSupplier(Nullable<int> purchaseOrderID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_PurchaseOrderItem_GetSupplier", purchaseOrderIDParameter);
        }
    
        public virtual int Co2Db_PurchaseOrderItem_Insert(Nullable<int> purchaseOrderID, Nullable<int> pos, Nullable<int> status, Nullable<int> itemID, string itemName, string supplierItemID, string supplierItemName, Nullable<double> quantity, Nullable<decimal> itemPrice, Nullable<decimal> linePrice, Nullable<System.DateTime> expectedReceiptDate, Nullable<System.DateTime> receiptDate, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("Pos", pos) :
                new ObjectParameter("Pos", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var supplierItemIDParameter = supplierItemID != null ?
                new ObjectParameter("SupplierItemID", supplierItemID) :
                new ObjectParameter("SupplierItemID", typeof(string));
    
            var supplierItemNameParameter = supplierItemName != null ?
                new ObjectParameter("SupplierItemName", supplierItemName) :
                new ObjectParameter("SupplierItemName", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var itemPriceParameter = itemPrice.HasValue ?
                new ObjectParameter("ItemPrice", itemPrice) :
                new ObjectParameter("ItemPrice", typeof(decimal));
    
            var linePriceParameter = linePrice.HasValue ?
                new ObjectParameter("LinePrice", linePrice) :
                new ObjectParameter("LinePrice", typeof(decimal));
    
            var expectedReceiptDateParameter = expectedReceiptDate.HasValue ?
                new ObjectParameter("ExpectedReceiptDate", expectedReceiptDate) :
                new ObjectParameter("ExpectedReceiptDate", typeof(System.DateTime));
    
            var receiptDateParameter = receiptDate.HasValue ?
                new ObjectParameter("ReceiptDate", receiptDate) :
                new ObjectParameter("ReceiptDate", typeof(System.DateTime));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrderItem_Insert", purchaseOrderIDParameter, posParameter, statusParameter, itemIDParameter, itemNameParameter, supplierItemIDParameter, supplierItemNameParameter, quantityParameter, itemPriceParameter, linePriceParameter, expectedReceiptDateParameter, receiptDateParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrderItem_Search_Result> Co2Db_PurchaseOrderItem_Search(Nullable<int> purchaseOrderID, Nullable<int> supplierID, Nullable<int> status)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrderItem_Search_Result>("Co2Db_PurchaseOrderItem_Search", purchaseOrderIDParameter, supplierIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrderItem_SelectAll_Result> Co2Db_PurchaseOrderItem_SelectAll(Nullable<int> purchaseOrderID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrderItem_SelectAll_Result>("Co2Db_PurchaseOrderItem_SelectAll", purchaseOrderIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrderItem_SelectID_Result> Co2Db_PurchaseOrderItem_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrderItem_SelectID_Result>("Co2Db_PurchaseOrderItem_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_PurchaseOrderItem_SelectOne_Result> Co2Db_PurchaseOrderItem_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_PurchaseOrderItem_SelectOne_Result>("Co2Db_PurchaseOrderItem_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_PurchaseOrderItem_Update(Nullable<int> iD, Nullable<int> purchaseOrderID, Nullable<int> pos, Nullable<int> status, Nullable<int> itemID, string itemName, string supplierItemID, string supplierItemName, Nullable<double> quantity, Nullable<decimal> itemPrice, Nullable<decimal> linePrice, Nullable<System.DateTime> expectedReceiptDate, Nullable<System.DateTime> receiptDate, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("Pos", pos) :
                new ObjectParameter("Pos", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var supplierItemIDParameter = supplierItemID != null ?
                new ObjectParameter("SupplierItemID", supplierItemID) :
                new ObjectParameter("SupplierItemID", typeof(string));
    
            var supplierItemNameParameter = supplierItemName != null ?
                new ObjectParameter("SupplierItemName", supplierItemName) :
                new ObjectParameter("SupplierItemName", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var itemPriceParameter = itemPrice.HasValue ?
                new ObjectParameter("ItemPrice", itemPrice) :
                new ObjectParameter("ItemPrice", typeof(decimal));
    
            var linePriceParameter = linePrice.HasValue ?
                new ObjectParameter("LinePrice", linePrice) :
                new ObjectParameter("LinePrice", typeof(decimal));
    
            var expectedReceiptDateParameter = expectedReceiptDate.HasValue ?
                new ObjectParameter("ExpectedReceiptDate", expectedReceiptDate) :
                new ObjectParameter("ExpectedReceiptDate", typeof(System.DateTime));
    
            var receiptDateParameter = receiptDate.HasValue ?
                new ObjectParameter("ReceiptDate", receiptDate) :
                new ObjectParameter("ReceiptDate", typeof(System.DateTime));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_PurchaseOrderItem_Update", iDParameter, purchaseOrderIDParameter, posParameter, statusParameter, itemIDParameter, itemNameParameter, supplierItemIDParameter, supplierItemNameParameter, quantityParameter, itemPriceParameter, linePriceParameter, expectedReceiptDateParameter, receiptDateParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Sysparm_Delete(string applicationName, string title)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Sysparm_Delete", applicationNameParameter, titleParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Sysparm_Get(string applicationName, string title)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Sysparm_Get", applicationNameParameter, titleParameter);
        }
    
        public virtual int Co2Db_Sysparm_GetOut(string applicationName, string title, ObjectParameter value)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Sysparm_GetOut", applicationNameParameter, titleParameter, value);
        }
    
        public virtual int Co2Db_Sysparm_Update(string applicationName, string title, string value)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Sysparm_Update", applicationNameParameter, titleParameter, valueParameter);
        }
    
        public virtual int Co2Db_TilbudHeader_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudHeader_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_TilbudHeader_GetCompanyTilbudCount(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_TilbudHeader_GetCompanyTilbudCount", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Co2Db_TilbudHeader_GetTotalpris(Nullable<int> tilbudID)
        {
            var tilbudIDParameter = tilbudID.HasValue ?
                new ObjectParameter("TilbudID", tilbudID) :
                new ObjectParameter("TilbudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Co2Db_TilbudHeader_GetTotalpris", tilbudIDParameter);
        }
    
        public virtual int Co2Db_TilbudHeader_Insert(Nullable<int> status, Nullable<int> companyID, Nullable<System.DateTime> opretdato, Nullable<System.DateTime> udlobdato, Nullable<int> ansvarligID, Nullable<System.Guid> ansvarligGUID, string kontaktEmail, string kontaktPerson, Nullable<double> transport, string noter, string tilbudsTillaeg, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var opretdatoParameter = opretdato.HasValue ?
                new ObjectParameter("Opretdato", opretdato) :
                new ObjectParameter("Opretdato", typeof(System.DateTime));
    
            var udlobdatoParameter = udlobdato.HasValue ?
                new ObjectParameter("Udlobdato", udlobdato) :
                new ObjectParameter("Udlobdato", typeof(System.DateTime));
    
            var ansvarligIDParameter = ansvarligID.HasValue ?
                new ObjectParameter("AnsvarligID", ansvarligID) :
                new ObjectParameter("AnsvarligID", typeof(int));
    
            var ansvarligGUIDParameter = ansvarligGUID.HasValue ?
                new ObjectParameter("AnsvarligGUID", ansvarligGUID) :
                new ObjectParameter("AnsvarligGUID", typeof(System.Guid));
    
            var kontaktEmailParameter = kontaktEmail != null ?
                new ObjectParameter("KontaktEmail", kontaktEmail) :
                new ObjectParameter("KontaktEmail", typeof(string));
    
            var kontaktPersonParameter = kontaktPerson != null ?
                new ObjectParameter("KontaktPerson", kontaktPerson) :
                new ObjectParameter("KontaktPerson", typeof(string));
    
            var transportParameter = transport.HasValue ?
                new ObjectParameter("Transport", transport) :
                new ObjectParameter("Transport", typeof(double));
    
            var noterParameter = noter != null ?
                new ObjectParameter("Noter", noter) :
                new ObjectParameter("Noter", typeof(string));
    
            var tilbudsTillaegParameter = tilbudsTillaeg != null ?
                new ObjectParameter("TilbudsTillaeg", tilbudsTillaeg) :
                new ObjectParameter("TilbudsTillaeg", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudHeader_Insert", statusParameter, companyIDParameter, opretdatoParameter, udlobdatoParameter, ansvarligIDParameter, ansvarligGUIDParameter, kontaktEmailParameter, kontaktPersonParameter, transportParameter, noterParameter, tilbudsTillaegParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual int Co2Db_TilbudHeader_Purge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudHeader_Purge", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHeader_SelectAll_Result> Co2Db_TilbudHeader_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHeader_SelectAll_Result>("Co2Db_TilbudHeader_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHeader_SelectByCompany_Result> Co2Db_TilbudHeader_SelectByCompany(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHeader_SelectByCompany_Result>("Co2Db_TilbudHeader_SelectByCompany", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHeader_SelectByStatus_Result> Co2Db_TilbudHeader_SelectByStatus(Nullable<int> status, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHeader_SelectByStatus_Result>("Co2Db_TilbudHeader_SelectByStatus", statusParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHeader_SelectByStatusCompany_Result> Co2Db_TilbudHeader_SelectByStatusCompany(Nullable<int> status, Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHeader_SelectByStatusCompany_Result>("Co2Db_TilbudHeader_SelectByStatusCompany", statusParameter, companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHeader_SelectID_Result> Co2Db_TilbudHeader_SelectID(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHeader_SelectID_Result>("Co2Db_TilbudHeader_SelectID", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHeader_SelectOne_Result> Co2Db_TilbudHeader_SelectOne(Nullable<int> iD, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHeader_SelectOne_Result>("Co2Db_TilbudHeader_SelectOne", iDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Co2Db_TilbudHeader_TotalTilbudsPris(Nullable<int> tilbudID)
        {
            var tilbudIDParameter = tilbudID.HasValue ?
                new ObjectParameter("TilbudID", tilbudID) :
                new ObjectParameter("TilbudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Co2Db_TilbudHeader_TotalTilbudsPris", tilbudIDParameter);
        }
    
        public virtual int Co2Db_TilbudHeader_Update(Nullable<int> iD, Nullable<int> status, Nullable<int> companyID, Nullable<System.DateTime> opretdato, Nullable<System.DateTime> udlobdato, Nullable<int> ansvarligID, Nullable<System.Guid> ansvarligGUID, string kontaktEmail, string kontaktPerson, Nullable<double> transport, string noter, string tilbudsTillaeg, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var opretdatoParameter = opretdato.HasValue ?
                new ObjectParameter("Opretdato", opretdato) :
                new ObjectParameter("Opretdato", typeof(System.DateTime));
    
            var udlobdatoParameter = udlobdato.HasValue ?
                new ObjectParameter("Udlobdato", udlobdato) :
                new ObjectParameter("Udlobdato", typeof(System.DateTime));
    
            var ansvarligIDParameter = ansvarligID.HasValue ?
                new ObjectParameter("AnsvarligID", ansvarligID) :
                new ObjectParameter("AnsvarligID", typeof(int));
    
            var ansvarligGUIDParameter = ansvarligGUID.HasValue ?
                new ObjectParameter("AnsvarligGUID", ansvarligGUID) :
                new ObjectParameter("AnsvarligGUID", typeof(System.Guid));
    
            var kontaktEmailParameter = kontaktEmail != null ?
                new ObjectParameter("KontaktEmail", kontaktEmail) :
                new ObjectParameter("KontaktEmail", typeof(string));
    
            var kontaktPersonParameter = kontaktPerson != null ?
                new ObjectParameter("KontaktPerson", kontaktPerson) :
                new ObjectParameter("KontaktPerson", typeof(string));
    
            var transportParameter = transport.HasValue ?
                new ObjectParameter("Transport", transport) :
                new ObjectParameter("Transport", typeof(double));
    
            var noterParameter = noter != null ?
                new ObjectParameter("Noter", noter) :
                new ObjectParameter("Noter", typeof(string));
    
            var tilbudsTillaegParameter = tilbudsTillaeg != null ?
                new ObjectParameter("TilbudsTillaeg", tilbudsTillaeg) :
                new ObjectParameter("TilbudsTillaeg", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudHeader_Update", iDParameter, statusParameter, companyIDParameter, opretdatoParameter, udlobdatoParameter, ansvarligIDParameter, ansvarligGUIDParameter, kontaktEmailParameter, kontaktPersonParameter, transportParameter, noterParameter, tilbudsTillaegParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_TilbudHospital_Delete(Nullable<int> iTilbudHospitalID)
        {
            var iTilbudHospitalIDParameter = iTilbudHospitalID.HasValue ?
                new ObjectParameter("iTilbudHospitalID", iTilbudHospitalID) :
                new ObjectParameter("iTilbudHospitalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudHospital_Delete", iTilbudHospitalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_TilbudHospital_GetCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_TilbudHospital_GetCount");
        }
    
        public virtual int Co2Db_TilbudHospital_Insert(Nullable<int> iStatus, Nullable<int> iCompanyID, Nullable<System.DateTime> dTilbudsDato, Nullable<int> iForfaldsmaade, Nullable<System.DateTime> dHovedForfald, Nullable<int> iPraemieForhold, Nullable<int> iForventetForsikretPersoner, Nullable<int> iEksisterendeLeverandor, Nullable<int> iForsikringsdaekning, Nullable<bool> bForsikringsdaekningStraks, Nullable<int> iIndmeldelseTidspunkt, Nullable<int> iIndmeldelsestidspunktEfter, Nullable<int> iIndmeldelsestidspunktSenestEfter, Nullable<int> iOmfattedeMedarbejdere, string sOmfattedeMedarbejdereAndet, Nullable<int> iTimetalsbegraensning, Nullable<int> iTimetalsbegraensningTimer, Nullable<int> iSkadestatistik, Nullable<int> iOplysningerAKJ, Nullable<int> iTilbudRekvireret, Nullable<int> iTilbudRekvireretIntern, Nullable<int> iTilbudRekvireretMaegler, string sAnsvarlig, string sKvitteret, string sNoter, string sRettetAf, string sRettetIP, Nullable<decimal> fPraemie, ObjectParameter iTilbudHospitalID)
        {
            var iStatusParameter = iStatus.HasValue ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(int));
    
            var iCompanyIDParameter = iCompanyID.HasValue ?
                new ObjectParameter("iCompanyID", iCompanyID) :
                new ObjectParameter("iCompanyID", typeof(int));
    
            var dTilbudsDatoParameter = dTilbudsDato.HasValue ?
                new ObjectParameter("dTilbudsDato", dTilbudsDato) :
                new ObjectParameter("dTilbudsDato", typeof(System.DateTime));
    
            var iForfaldsmaadeParameter = iForfaldsmaade.HasValue ?
                new ObjectParameter("iForfaldsmaade", iForfaldsmaade) :
                new ObjectParameter("iForfaldsmaade", typeof(int));
    
            var dHovedForfaldParameter = dHovedForfald.HasValue ?
                new ObjectParameter("dHovedForfald", dHovedForfald) :
                new ObjectParameter("dHovedForfald", typeof(System.DateTime));
    
            var iPraemieForholdParameter = iPraemieForhold.HasValue ?
                new ObjectParameter("iPraemieForhold", iPraemieForhold) :
                new ObjectParameter("iPraemieForhold", typeof(int));
    
            var iForventetForsikretPersonerParameter = iForventetForsikretPersoner.HasValue ?
                new ObjectParameter("iForventetForsikretPersoner", iForventetForsikretPersoner) :
                new ObjectParameter("iForventetForsikretPersoner", typeof(int));
    
            var iEksisterendeLeverandorParameter = iEksisterendeLeverandor.HasValue ?
                new ObjectParameter("iEksisterendeLeverandor", iEksisterendeLeverandor) :
                new ObjectParameter("iEksisterendeLeverandor", typeof(int));
    
            var iForsikringsdaekningParameter = iForsikringsdaekning.HasValue ?
                new ObjectParameter("iForsikringsdaekning", iForsikringsdaekning) :
                new ObjectParameter("iForsikringsdaekning", typeof(int));
    
            var bForsikringsdaekningStraksParameter = bForsikringsdaekningStraks.HasValue ?
                new ObjectParameter("bForsikringsdaekningStraks", bForsikringsdaekningStraks) :
                new ObjectParameter("bForsikringsdaekningStraks", typeof(bool));
    
            var iIndmeldelseTidspunktParameter = iIndmeldelseTidspunkt.HasValue ?
                new ObjectParameter("iIndmeldelseTidspunkt", iIndmeldelseTidspunkt) :
                new ObjectParameter("iIndmeldelseTidspunkt", typeof(int));
    
            var iIndmeldelsestidspunktEfterParameter = iIndmeldelsestidspunktEfter.HasValue ?
                new ObjectParameter("iIndmeldelsestidspunktEfter", iIndmeldelsestidspunktEfter) :
                new ObjectParameter("iIndmeldelsestidspunktEfter", typeof(int));
    
            var iIndmeldelsestidspunktSenestEfterParameter = iIndmeldelsestidspunktSenestEfter.HasValue ?
                new ObjectParameter("iIndmeldelsestidspunktSenestEfter", iIndmeldelsestidspunktSenestEfter) :
                new ObjectParameter("iIndmeldelsestidspunktSenestEfter", typeof(int));
    
            var iOmfattedeMedarbejdereParameter = iOmfattedeMedarbejdere.HasValue ?
                new ObjectParameter("iOmfattedeMedarbejdere", iOmfattedeMedarbejdere) :
                new ObjectParameter("iOmfattedeMedarbejdere", typeof(int));
    
            var sOmfattedeMedarbejdereAndetParameter = sOmfattedeMedarbejdereAndet != null ?
                new ObjectParameter("sOmfattedeMedarbejdereAndet", sOmfattedeMedarbejdereAndet) :
                new ObjectParameter("sOmfattedeMedarbejdereAndet", typeof(string));
    
            var iTimetalsbegraensningParameter = iTimetalsbegraensning.HasValue ?
                new ObjectParameter("iTimetalsbegraensning", iTimetalsbegraensning) :
                new ObjectParameter("iTimetalsbegraensning", typeof(int));
    
            var iTimetalsbegraensningTimerParameter = iTimetalsbegraensningTimer.HasValue ?
                new ObjectParameter("iTimetalsbegraensningTimer", iTimetalsbegraensningTimer) :
                new ObjectParameter("iTimetalsbegraensningTimer", typeof(int));
    
            var iSkadestatistikParameter = iSkadestatistik.HasValue ?
                new ObjectParameter("iSkadestatistik", iSkadestatistik) :
                new ObjectParameter("iSkadestatistik", typeof(int));
    
            var iOplysningerAKJParameter = iOplysningerAKJ.HasValue ?
                new ObjectParameter("iOplysningerAKJ", iOplysningerAKJ) :
                new ObjectParameter("iOplysningerAKJ", typeof(int));
    
            var iTilbudRekvireretParameter = iTilbudRekvireret.HasValue ?
                new ObjectParameter("iTilbudRekvireret", iTilbudRekvireret) :
                new ObjectParameter("iTilbudRekvireret", typeof(int));
    
            var iTilbudRekvireretInternParameter = iTilbudRekvireretIntern.HasValue ?
                new ObjectParameter("iTilbudRekvireretIntern", iTilbudRekvireretIntern) :
                new ObjectParameter("iTilbudRekvireretIntern", typeof(int));
    
            var iTilbudRekvireretMaeglerParameter = iTilbudRekvireretMaegler.HasValue ?
                new ObjectParameter("iTilbudRekvireretMaegler", iTilbudRekvireretMaegler) :
                new ObjectParameter("iTilbudRekvireretMaegler", typeof(int));
    
            var sAnsvarligParameter = sAnsvarlig != null ?
                new ObjectParameter("sAnsvarlig", sAnsvarlig) :
                new ObjectParameter("sAnsvarlig", typeof(string));
    
            var sKvitteretParameter = sKvitteret != null ?
                new ObjectParameter("sKvitteret", sKvitteret) :
                new ObjectParameter("sKvitteret", typeof(string));
    
            var sNoterParameter = sNoter != null ?
                new ObjectParameter("sNoter", sNoter) :
                new ObjectParameter("sNoter", typeof(string));
    
            var sRettetAfParameter = sRettetAf != null ?
                new ObjectParameter("sRettetAf", sRettetAf) :
                new ObjectParameter("sRettetAf", typeof(string));
    
            var sRettetIPParameter = sRettetIP != null ?
                new ObjectParameter("sRettetIP", sRettetIP) :
                new ObjectParameter("sRettetIP", typeof(string));
    
            var fPraemieParameter = fPraemie.HasValue ?
                new ObjectParameter("fPraemie", fPraemie) :
                new ObjectParameter("fPraemie", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudHospital_Insert", iStatusParameter, iCompanyIDParameter, dTilbudsDatoParameter, iForfaldsmaadeParameter, dHovedForfaldParameter, iPraemieForholdParameter, iForventetForsikretPersonerParameter, iEksisterendeLeverandorParameter, iForsikringsdaekningParameter, bForsikringsdaekningStraksParameter, iIndmeldelseTidspunktParameter, iIndmeldelsestidspunktEfterParameter, iIndmeldelsestidspunktSenestEfterParameter, iOmfattedeMedarbejdereParameter, sOmfattedeMedarbejdereAndetParameter, iTimetalsbegraensningParameter, iTimetalsbegraensningTimerParameter, iSkadestatistikParameter, iOplysningerAKJParameter, iTilbudRekvireretParameter, iTilbudRekvireretInternParameter, iTilbudRekvireretMaeglerParameter, sAnsvarligParameter, sKvitteretParameter, sNoterParameter, sRettetAfParameter, sRettetIPParameter, fPraemieParameter, iTilbudHospitalID);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHospital_SelectAll_Result> Co2Db_TilbudHospital_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHospital_SelectAll_Result>("Co2Db_TilbudHospital_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_TilbudHospital_SelectBySearch_Result> Co2Db_TilbudHospital_SelectBySearch(string sSearch)
        {
            var sSearchParameter = sSearch != null ?
                new ObjectParameter("sSearch", sSearch) :
                new ObjectParameter("sSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHospital_SelectBySearch_Result>("Co2Db_TilbudHospital_SelectBySearch", sSearchParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHospital_SelectByStatus_Result> Co2Db_TilbudHospital_SelectByStatus(Nullable<int> iStatus)
        {
            var iStatusParameter = iStatus.HasValue ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHospital_SelectByStatus_Result>("Co2Db_TilbudHospital_SelectByStatus", iStatusParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHospital_SelectByStatusCompany_Result> Co2Db_TilbudHospital_SelectByStatusCompany(Nullable<int> iStatus, Nullable<int> iCompanyID)
        {
            var iStatusParameter = iStatus.HasValue ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(int));
    
            var iCompanyIDParameter = iCompanyID.HasValue ?
                new ObjectParameter("iCompanyID", iCompanyID) :
                new ObjectParameter("iCompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHospital_SelectByStatusCompany_Result>("Co2Db_TilbudHospital_SelectByStatusCompany", iStatusParameter, iCompanyIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHospital_SelectByUserName_Result> Co2Db_TilbudHospital_SelectByUserName(string sUserName)
        {
            var sUserNameParameter = sUserName != null ?
                new ObjectParameter("sUserName", sUserName) :
                new ObjectParameter("sUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHospital_SelectByUserName_Result>("Co2Db_TilbudHospital_SelectByUserName", sUserNameParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_TilbudHospital_SelectName(Nullable<int> iTilbudHospitalID)
        {
            var iTilbudHospitalIDParameter = iTilbudHospitalID.HasValue ?
                new ObjectParameter("iTilbudHospitalID", iTilbudHospitalID) :
                new ObjectParameter("iTilbudHospitalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_TilbudHospital_SelectName", iTilbudHospitalIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudHospital_SelectOne_Result> Co2Db_TilbudHospital_SelectOne(Nullable<int> iTilbudHospitalID)
        {
            var iTilbudHospitalIDParameter = iTilbudHospitalID.HasValue ?
                new ObjectParameter("iTilbudHospitalID", iTilbudHospitalID) :
                new ObjectParameter("iTilbudHospitalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudHospital_SelectOne_Result>("Co2Db_TilbudHospital_SelectOne", iTilbudHospitalIDParameter);
        }
    
        public virtual int Co2Db_TilbudHospital_Update(Nullable<int> iTilbudHospitalID, Nullable<int> iStatus, Nullable<int> iCompanyID, Nullable<System.DateTime> dTilbudsDato, Nullable<int> iForfaldsmaade, Nullable<System.DateTime> dHovedForfald, Nullable<int> iPraemieForhold, Nullable<int> iForventetForsikretPersoner, Nullable<int> iEksisterendeLeverandor, Nullable<int> iForsikringsdaekning, Nullable<bool> bForsikringsdaekningStraks, Nullable<int> iIndmeldelseTidspunkt, Nullable<int> iIndmeldelsestidspunktEfter, Nullable<int> iIndmeldelsestidspunktSenestEfter, Nullable<int> iOmfattedeMedarbejdere, string sOmfattedeMedarbejdereAndet, Nullable<int> iTimetalsbegraensning, Nullable<int> iTimetalsbegraensningTimer, Nullable<int> iSkadestatistik, Nullable<int> iOplysningerAKJ, Nullable<int> iTilbudRekvireret, Nullable<int> iTilbudRekvireretIntern, Nullable<int> iTilbudRekvireretMaegler, string sAnsvarlig, string sKvitteret, string sNoter, Nullable<decimal> fPraemie, string sRettetAf, string sRettetIP)
        {
            var iTilbudHospitalIDParameter = iTilbudHospitalID.HasValue ?
                new ObjectParameter("iTilbudHospitalID", iTilbudHospitalID) :
                new ObjectParameter("iTilbudHospitalID", typeof(int));
    
            var iStatusParameter = iStatus.HasValue ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(int));
    
            var iCompanyIDParameter = iCompanyID.HasValue ?
                new ObjectParameter("iCompanyID", iCompanyID) :
                new ObjectParameter("iCompanyID", typeof(int));
    
            var dTilbudsDatoParameter = dTilbudsDato.HasValue ?
                new ObjectParameter("dTilbudsDato", dTilbudsDato) :
                new ObjectParameter("dTilbudsDato", typeof(System.DateTime));
    
            var iForfaldsmaadeParameter = iForfaldsmaade.HasValue ?
                new ObjectParameter("iForfaldsmaade", iForfaldsmaade) :
                new ObjectParameter("iForfaldsmaade", typeof(int));
    
            var dHovedForfaldParameter = dHovedForfald.HasValue ?
                new ObjectParameter("dHovedForfald", dHovedForfald) :
                new ObjectParameter("dHovedForfald", typeof(System.DateTime));
    
            var iPraemieForholdParameter = iPraemieForhold.HasValue ?
                new ObjectParameter("iPraemieForhold", iPraemieForhold) :
                new ObjectParameter("iPraemieForhold", typeof(int));
    
            var iForventetForsikretPersonerParameter = iForventetForsikretPersoner.HasValue ?
                new ObjectParameter("iForventetForsikretPersoner", iForventetForsikretPersoner) :
                new ObjectParameter("iForventetForsikretPersoner", typeof(int));
    
            var iEksisterendeLeverandorParameter = iEksisterendeLeverandor.HasValue ?
                new ObjectParameter("iEksisterendeLeverandor", iEksisterendeLeverandor) :
                new ObjectParameter("iEksisterendeLeverandor", typeof(int));
    
            var iForsikringsdaekningParameter = iForsikringsdaekning.HasValue ?
                new ObjectParameter("iForsikringsdaekning", iForsikringsdaekning) :
                new ObjectParameter("iForsikringsdaekning", typeof(int));
    
            var bForsikringsdaekningStraksParameter = bForsikringsdaekningStraks.HasValue ?
                new ObjectParameter("bForsikringsdaekningStraks", bForsikringsdaekningStraks) :
                new ObjectParameter("bForsikringsdaekningStraks", typeof(bool));
    
            var iIndmeldelseTidspunktParameter = iIndmeldelseTidspunkt.HasValue ?
                new ObjectParameter("iIndmeldelseTidspunkt", iIndmeldelseTidspunkt) :
                new ObjectParameter("iIndmeldelseTidspunkt", typeof(int));
    
            var iIndmeldelsestidspunktEfterParameter = iIndmeldelsestidspunktEfter.HasValue ?
                new ObjectParameter("iIndmeldelsestidspunktEfter", iIndmeldelsestidspunktEfter) :
                new ObjectParameter("iIndmeldelsestidspunktEfter", typeof(int));
    
            var iIndmeldelsestidspunktSenestEfterParameter = iIndmeldelsestidspunktSenestEfter.HasValue ?
                new ObjectParameter("iIndmeldelsestidspunktSenestEfter", iIndmeldelsestidspunktSenestEfter) :
                new ObjectParameter("iIndmeldelsestidspunktSenestEfter", typeof(int));
    
            var iOmfattedeMedarbejdereParameter = iOmfattedeMedarbejdere.HasValue ?
                new ObjectParameter("iOmfattedeMedarbejdere", iOmfattedeMedarbejdere) :
                new ObjectParameter("iOmfattedeMedarbejdere", typeof(int));
    
            var sOmfattedeMedarbejdereAndetParameter = sOmfattedeMedarbejdereAndet != null ?
                new ObjectParameter("sOmfattedeMedarbejdereAndet", sOmfattedeMedarbejdereAndet) :
                new ObjectParameter("sOmfattedeMedarbejdereAndet", typeof(string));
    
            var iTimetalsbegraensningParameter = iTimetalsbegraensning.HasValue ?
                new ObjectParameter("iTimetalsbegraensning", iTimetalsbegraensning) :
                new ObjectParameter("iTimetalsbegraensning", typeof(int));
    
            var iTimetalsbegraensningTimerParameter = iTimetalsbegraensningTimer.HasValue ?
                new ObjectParameter("iTimetalsbegraensningTimer", iTimetalsbegraensningTimer) :
                new ObjectParameter("iTimetalsbegraensningTimer", typeof(int));
    
            var iSkadestatistikParameter = iSkadestatistik.HasValue ?
                new ObjectParameter("iSkadestatistik", iSkadestatistik) :
                new ObjectParameter("iSkadestatistik", typeof(int));
    
            var iOplysningerAKJParameter = iOplysningerAKJ.HasValue ?
                new ObjectParameter("iOplysningerAKJ", iOplysningerAKJ) :
                new ObjectParameter("iOplysningerAKJ", typeof(int));
    
            var iTilbudRekvireretParameter = iTilbudRekvireret.HasValue ?
                new ObjectParameter("iTilbudRekvireret", iTilbudRekvireret) :
                new ObjectParameter("iTilbudRekvireret", typeof(int));
    
            var iTilbudRekvireretInternParameter = iTilbudRekvireretIntern.HasValue ?
                new ObjectParameter("iTilbudRekvireretIntern", iTilbudRekvireretIntern) :
                new ObjectParameter("iTilbudRekvireretIntern", typeof(int));
    
            var iTilbudRekvireretMaeglerParameter = iTilbudRekvireretMaegler.HasValue ?
                new ObjectParameter("iTilbudRekvireretMaegler", iTilbudRekvireretMaegler) :
                new ObjectParameter("iTilbudRekvireretMaegler", typeof(int));
    
            var sAnsvarligParameter = sAnsvarlig != null ?
                new ObjectParameter("sAnsvarlig", sAnsvarlig) :
                new ObjectParameter("sAnsvarlig", typeof(string));
    
            var sKvitteretParameter = sKvitteret != null ?
                new ObjectParameter("sKvitteret", sKvitteret) :
                new ObjectParameter("sKvitteret", typeof(string));
    
            var sNoterParameter = sNoter != null ?
                new ObjectParameter("sNoter", sNoter) :
                new ObjectParameter("sNoter", typeof(string));
    
            var fPraemieParameter = fPraemie.HasValue ?
                new ObjectParameter("fPraemie", fPraemie) :
                new ObjectParameter("fPraemie", typeof(decimal));
    
            var sRettetAfParameter = sRettetAf != null ?
                new ObjectParameter("sRettetAf", sRettetAf) :
                new ObjectParameter("sRettetAf", typeof(string));
    
            var sRettetIPParameter = sRettetIP != null ?
                new ObjectParameter("sRettetIP", sRettetIP) :
                new ObjectParameter("sRettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudHospital_Update", iTilbudHospitalIDParameter, iStatusParameter, iCompanyIDParameter, dTilbudsDatoParameter, iForfaldsmaadeParameter, dHovedForfaldParameter, iPraemieForholdParameter, iForventetForsikretPersonerParameter, iEksisterendeLeverandorParameter, iForsikringsdaekningParameter, bForsikringsdaekningStraksParameter, iIndmeldelseTidspunktParameter, iIndmeldelsestidspunktEfterParameter, iIndmeldelsestidspunktSenestEfterParameter, iOmfattedeMedarbejdereParameter, sOmfattedeMedarbejdereAndetParameter, iTimetalsbegraensningParameter, iTimetalsbegraensningTimerParameter, iSkadestatistikParameter, iOplysningerAKJParameter, iTilbudRekvireretParameter, iTilbudRekvireretInternParameter, iTilbudRekvireretMaeglerParameter, sAnsvarligParameter, sKvitteretParameter, sNoterParameter, fPraemieParameter, sRettetAfParameter, sRettetIPParameter);
        }
    
        public virtual int Co2Db_TilbudsLinie_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudsLinie_Delete", iDParameter);
        }
    
        public virtual int Co2Db_TilbudsLinie_Insert(Nullable<int> tilbudID, Nullable<int> vareID, Nullable<double> salgspris, Nullable<double> tilbudspris, Nullable<double> rabat, Nullable<int> status, Nullable<int> pos, Nullable<int> antal, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var tilbudIDParameter = tilbudID.HasValue ?
                new ObjectParameter("TilbudID", tilbudID) :
                new ObjectParameter("TilbudID", typeof(int));
    
            var vareIDParameter = vareID.HasValue ?
                new ObjectParameter("VareID", vareID) :
                new ObjectParameter("VareID", typeof(int));
    
            var salgsprisParameter = salgspris.HasValue ?
                new ObjectParameter("Salgspris", salgspris) :
                new ObjectParameter("Salgspris", typeof(double));
    
            var tilbudsprisParameter = tilbudspris.HasValue ?
                new ObjectParameter("Tilbudspris", tilbudspris) :
                new ObjectParameter("Tilbudspris", typeof(double));
    
            var rabatParameter = rabat.HasValue ?
                new ObjectParameter("Rabat", rabat) :
                new ObjectParameter("Rabat", typeof(double));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("Pos", pos) :
                new ObjectParameter("Pos", typeof(int));
    
            var antalParameter = antal.HasValue ?
                new ObjectParameter("Antal", antal) :
                new ObjectParameter("Antal", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudsLinie_Insert", tilbudIDParameter, vareIDParameter, salgsprisParameter, tilbudsprisParameter, rabatParameter, statusParameter, posParameter, antalParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_TilbudsLinie_SelectAll_Result> Co2Db_TilbudsLinie_SelectAll(Nullable<int> tilbudID)
        {
            var tilbudIDParameter = tilbudID.HasValue ?
                new ObjectParameter("TilbudID", tilbudID) :
                new ObjectParameter("TilbudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudsLinie_SelectAll_Result>("Co2Db_TilbudsLinie_SelectAll", tilbudIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudsLinie_SelectID_Result> Co2Db_TilbudsLinie_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudsLinie_SelectID_Result>("Co2Db_TilbudsLinie_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_TilbudsLinie_SelectOne_Result> Co2Db_TilbudsLinie_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_TilbudsLinie_SelectOne_Result>("Co2Db_TilbudsLinie_SelectOne", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Co2Db_TilbudsLinie_TotalTilbudsPris(Nullable<int> tilbudID)
        {
            var tilbudIDParameter = tilbudID.HasValue ?
                new ObjectParameter("TilbudID", tilbudID) :
                new ObjectParameter("TilbudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Co2Db_TilbudsLinie_TotalTilbudsPris", tilbudIDParameter);
        }
    
        public virtual int Co2Db_TilbudsLinie_Update(Nullable<int> iD, Nullable<int> tilbudID, Nullable<int> vareID, Nullable<double> salgspris, Nullable<double> tilbudspris, Nullable<double> rabat, Nullable<int> status, Nullable<int> pos, Nullable<int> antal, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tilbudIDParameter = tilbudID.HasValue ?
                new ObjectParameter("TilbudID", tilbudID) :
                new ObjectParameter("TilbudID", typeof(int));
    
            var vareIDParameter = vareID.HasValue ?
                new ObjectParameter("VareID", vareID) :
                new ObjectParameter("VareID", typeof(int));
    
            var salgsprisParameter = salgspris.HasValue ?
                new ObjectParameter("Salgspris", salgspris) :
                new ObjectParameter("Salgspris", typeof(double));
    
            var tilbudsprisParameter = tilbudspris.HasValue ?
                new ObjectParameter("Tilbudspris", tilbudspris) :
                new ObjectParameter("Tilbudspris", typeof(double));
    
            var rabatParameter = rabat.HasValue ?
                new ObjectParameter("Rabat", rabat) :
                new ObjectParameter("Rabat", typeof(double));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("Pos", pos) :
                new ObjectParameter("Pos", typeof(int));
    
            var antalParameter = antal.HasValue ?
                new ObjectParameter("Antal", antal) :
                new ObjectParameter("Antal", typeof(int));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_TilbudsLinie_Update", iDParameter, tilbudIDParameter, vareIDParameter, salgsprisParameter, tilbudsprisParameter, rabatParameter, statusParameter, posParameter, antalParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Vare_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Vare_Delete", iDParameter);
        }
    
        public virtual int Co2Db_Vare_Insert(Nullable<int> vareGrpID, string vareNr, string navn, string beskrivelse, Nullable<int> currencyID, Nullable<double> currencyRate, Nullable<double> indkobspris, Nullable<double> fragtPct, Nullable<double> fragt, Nullable<double> kostPrisCUR, Nullable<double> kostPrisDKK, Nullable<double> daekningsBidrag, Nullable<double> daekningsGrad, Nullable<double> salgsPris, Nullable<int> status, Nullable<int> fragtID, string faktaArkPath, string supplierItemNo, string supplierItemName, string rettetAF, string rettetIP, ObjectParameter iD)
        {
            var vareGrpIDParameter = vareGrpID.HasValue ?
                new ObjectParameter("VareGrpID", vareGrpID) :
                new ObjectParameter("VareGrpID", typeof(int));
    
            var vareNrParameter = vareNr != null ?
                new ObjectParameter("VareNr", vareNr) :
                new ObjectParameter("VareNr", typeof(string));
    
            var navnParameter = navn != null ?
                new ObjectParameter("Navn", navn) :
                new ObjectParameter("Navn", typeof(string));
    
            var beskrivelseParameter = beskrivelse != null ?
                new ObjectParameter("Beskrivelse", beskrivelse) :
                new ObjectParameter("Beskrivelse", typeof(string));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(int));
    
            var currencyRateParameter = currencyRate.HasValue ?
                new ObjectParameter("CurrencyRate", currencyRate) :
                new ObjectParameter("CurrencyRate", typeof(double));
    
            var indkobsprisParameter = indkobspris.HasValue ?
                new ObjectParameter("Indkobspris", indkobspris) :
                new ObjectParameter("Indkobspris", typeof(double));
    
            var fragtPctParameter = fragtPct.HasValue ?
                new ObjectParameter("FragtPct", fragtPct) :
                new ObjectParameter("FragtPct", typeof(double));
    
            var fragtParameter = fragt.HasValue ?
                new ObjectParameter("Fragt", fragt) :
                new ObjectParameter("Fragt", typeof(double));
    
            var kostPrisCURParameter = kostPrisCUR.HasValue ?
                new ObjectParameter("KostPrisCUR", kostPrisCUR) :
                new ObjectParameter("KostPrisCUR", typeof(double));
    
            var kostPrisDKKParameter = kostPrisDKK.HasValue ?
                new ObjectParameter("KostPrisDKK", kostPrisDKK) :
                new ObjectParameter("KostPrisDKK", typeof(double));
    
            var daekningsBidragParameter = daekningsBidrag.HasValue ?
                new ObjectParameter("DaekningsBidrag", daekningsBidrag) :
                new ObjectParameter("DaekningsBidrag", typeof(double));
    
            var daekningsGradParameter = daekningsGrad.HasValue ?
                new ObjectParameter("DaekningsGrad", daekningsGrad) :
                new ObjectParameter("DaekningsGrad", typeof(double));
    
            var salgsPrisParameter = salgsPris.HasValue ?
                new ObjectParameter("SalgsPris", salgsPris) :
                new ObjectParameter("SalgsPris", typeof(double));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var fragtIDParameter = fragtID.HasValue ?
                new ObjectParameter("FragtID", fragtID) :
                new ObjectParameter("FragtID", typeof(int));
    
            var faktaArkPathParameter = faktaArkPath != null ?
                new ObjectParameter("FaktaArkPath", faktaArkPath) :
                new ObjectParameter("FaktaArkPath", typeof(string));
    
            var supplierItemNoParameter = supplierItemNo != null ?
                new ObjectParameter("SupplierItemNo", supplierItemNo) :
                new ObjectParameter("SupplierItemNo", typeof(string));
    
            var supplierItemNameParameter = supplierItemName != null ?
                new ObjectParameter("SupplierItemName", supplierItemName) :
                new ObjectParameter("SupplierItemName", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Vare_Insert", vareGrpIDParameter, vareNrParameter, navnParameter, beskrivelseParameter, currencyIDParameter, currencyRateParameter, indkobsprisParameter, fragtPctParameter, fragtParameter, kostPrisCURParameter, kostPrisDKKParameter, daekningsBidragParameter, daekningsGradParameter, salgsPrisParameter, statusParameter, fragtIDParameter, faktaArkPathParameter, supplierItemNoParameter, supplierItemNameParameter, rettetAFParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_Vare_SearchByVareNr_Result> Co2Db_Vare_SearchByVareNr(string search, Nullable<int> status, Nullable<int> vareGrpID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var vareGrpIDParameter = vareGrpID.HasValue ?
                new ObjectParameter("VareGrpID", vareGrpID) :
                new ObjectParameter("VareGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Vare_SearchByVareNr_Result>("Co2Db_Vare_SearchByVareNr", searchParameter, statusParameter, vareGrpIDParameter);
        }
    
        public virtual int Co2Db_Vare_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Vare_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_Vare_SelectAllVareGrp_Result> Co2Db_Vare_SelectAllVareGrp(Nullable<int> vareGrpID)
        {
            var vareGrpIDParameter = vareGrpID.HasValue ?
                new ObjectParameter("VareGrpID", vareGrpID) :
                new ObjectParameter("VareGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Vare_SelectAllVareGrp_Result>("Co2Db_Vare_SelectAllVareGrp", vareGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Vare_SelectBySearch_Result> Co2Db_Vare_SelectBySearch(string search, Nullable<int> status, Nullable<int> vareGrpID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var vareGrpIDParameter = vareGrpID.HasValue ?
                new ObjectParameter("VareGrpID", vareGrpID) :
                new ObjectParameter("VareGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Vare_SelectBySearch_Result>("Co2Db_Vare_SelectBySearch", searchParameter, statusParameter, vareGrpIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Vare_SelectByVarenr_Result> Co2Db_Vare_SelectByVarenr(string varenr)
        {
            var varenrParameter = varenr != null ?
                new ObjectParameter("Varenr", varenr) :
                new ObjectParameter("Varenr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Vare_SelectByVarenr_Result>("Co2Db_Vare_SelectByVarenr", varenrParameter);
        }
    
        public virtual ObjectResult<Co2Db_Vare_SelectID_Result> Co2Db_Vare_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Vare_SelectID_Result>("Co2Db_Vare_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Vare_SelectOne_Result> Co2Db_Vare_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Vare_SelectOne_Result>("Co2Db_Vare_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_Vare_Update(Nullable<int> iD, Nullable<int> vareGrpID, string vareNr, string navn, string beskrivelse, Nullable<int> currencyID, Nullable<double> currencyRate, Nullable<double> indkobspris, Nullable<double> fragtPct, Nullable<double> fragt, Nullable<double> kostPrisCUR, Nullable<double> kostPrisDKK, Nullable<double> daekningsBidrag, Nullable<double> daekningsGrad, Nullable<double> salgsPris, Nullable<int> status, Nullable<int> fragtID, string faktaArkPath, string supplierItemNo, string supplierItemName, string rettetAF, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var vareGrpIDParameter = vareGrpID.HasValue ?
                new ObjectParameter("VareGrpID", vareGrpID) :
                new ObjectParameter("VareGrpID", typeof(int));
    
            var vareNrParameter = vareNr != null ?
                new ObjectParameter("VareNr", vareNr) :
                new ObjectParameter("VareNr", typeof(string));
    
            var navnParameter = navn != null ?
                new ObjectParameter("Navn", navn) :
                new ObjectParameter("Navn", typeof(string));
    
            var beskrivelseParameter = beskrivelse != null ?
                new ObjectParameter("Beskrivelse", beskrivelse) :
                new ObjectParameter("Beskrivelse", typeof(string));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(int));
    
            var currencyRateParameter = currencyRate.HasValue ?
                new ObjectParameter("CurrencyRate", currencyRate) :
                new ObjectParameter("CurrencyRate", typeof(double));
    
            var indkobsprisParameter = indkobspris.HasValue ?
                new ObjectParameter("Indkobspris", indkobspris) :
                new ObjectParameter("Indkobspris", typeof(double));
    
            var fragtPctParameter = fragtPct.HasValue ?
                new ObjectParameter("FragtPct", fragtPct) :
                new ObjectParameter("FragtPct", typeof(double));
    
            var fragtParameter = fragt.HasValue ?
                new ObjectParameter("Fragt", fragt) :
                new ObjectParameter("Fragt", typeof(double));
    
            var kostPrisCURParameter = kostPrisCUR.HasValue ?
                new ObjectParameter("KostPrisCUR", kostPrisCUR) :
                new ObjectParameter("KostPrisCUR", typeof(double));
    
            var kostPrisDKKParameter = kostPrisDKK.HasValue ?
                new ObjectParameter("KostPrisDKK", kostPrisDKK) :
                new ObjectParameter("KostPrisDKK", typeof(double));
    
            var daekningsBidragParameter = daekningsBidrag.HasValue ?
                new ObjectParameter("DaekningsBidrag", daekningsBidrag) :
                new ObjectParameter("DaekningsBidrag", typeof(double));
    
            var daekningsGradParameter = daekningsGrad.HasValue ?
                new ObjectParameter("DaekningsGrad", daekningsGrad) :
                new ObjectParameter("DaekningsGrad", typeof(double));
    
            var salgsPrisParameter = salgsPris.HasValue ?
                new ObjectParameter("SalgsPris", salgsPris) :
                new ObjectParameter("SalgsPris", typeof(double));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var fragtIDParameter = fragtID.HasValue ?
                new ObjectParameter("FragtID", fragtID) :
                new ObjectParameter("FragtID", typeof(int));
    
            var faktaArkPathParameter = faktaArkPath != null ?
                new ObjectParameter("FaktaArkPath", faktaArkPath) :
                new ObjectParameter("FaktaArkPath", typeof(string));
    
            var supplierItemNoParameter = supplierItemNo != null ?
                new ObjectParameter("SupplierItemNo", supplierItemNo) :
                new ObjectParameter("SupplierItemNo", typeof(string));
    
            var supplierItemNameParameter = supplierItemName != null ?
                new ObjectParameter("SupplierItemName", supplierItemName) :
                new ObjectParameter("SupplierItemName", typeof(string));
    
            var rettetAFParameter = rettetAF != null ?
                new ObjectParameter("RettetAF", rettetAF) :
                new ObjectParameter("RettetAF", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Vare_Update", iDParameter, vareGrpIDParameter, vareNrParameter, navnParameter, beskrivelseParameter, currencyIDParameter, currencyRateParameter, indkobsprisParameter, fragtPctParameter, fragtParameter, kostPrisCURParameter, kostPrisDKKParameter, daekningsBidragParameter, daekningsGradParameter, salgsPrisParameter, statusParameter, fragtIDParameter, faktaArkPathParameter, supplierItemNoParameter, supplierItemNameParameter, rettetAFParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Co2Db_Vare_VareList_Result> Co2Db_Vare_VareList(Nullable<int> vareGrpID)
        {
            var vareGrpIDParameter = vareGrpID.HasValue ?
                new ObjectParameter("VareGrpID", vareGrpID) :
                new ObjectParameter("VareGrpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Vare_VareList_Result>("Co2Db_Vare_VareList", vareGrpIDParameter);
        }
    
        public virtual int Co2Db_VareGrp_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_VareGrp_Delete", iDParameter);
        }
    
        public virtual int Co2Db_VareGrp_Insert(Nullable<int> parentID, string vareGrpNr, string vareGrpTekst, string alias, string rettetAf, string rettetIP, ObjectParameter iD)
        {
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var vareGrpNrParameter = vareGrpNr != null ?
                new ObjectParameter("VareGrpNr", vareGrpNr) :
                new ObjectParameter("VareGrpNr", typeof(string));
    
            var vareGrpTekstParameter = vareGrpTekst != null ?
                new ObjectParameter("VareGrpTekst", vareGrpTekst) :
                new ObjectParameter("VareGrpTekst", typeof(string));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_VareGrp_Insert", parentIDParameter, vareGrpNrParameter, vareGrpTekstParameter, aliasParameter, rettetAfParameter, rettetIPParameter, iD);
        }
    
        public virtual ObjectResult<Co2Db_VareGrp_SelectAll_Result> Co2Db_VareGrp_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_VareGrp_SelectAll_Result>("Co2Db_VareGrp_SelectAll");
        }
    
        public virtual ObjectResult<Co2Db_VareGrp_SelectAllByParent_Result> Co2Db_VareGrp_SelectAllByParent(Nullable<int> parentID)
        {
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_VareGrp_SelectAllByParent_Result>("Co2Db_VareGrp_SelectAllByParent", parentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_VareGrp_SelectAllList_Result> Co2Db_VareGrp_SelectAllList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_VareGrp_SelectAllList_Result>("Co2Db_VareGrp_SelectAllList");
        }
    
        public virtual ObjectResult<Co2Db_VareGrp_SelectByAlias_Result> Co2Db_VareGrp_SelectByAlias(string alias)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_VareGrp_SelectByAlias_Result>("Co2Db_VareGrp_SelectByAlias", aliasParameter);
        }
    
        public virtual ObjectResult<Co2Db_VareGrp_SelectBySearch_Result> Co2Db_VareGrp_SelectBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_VareGrp_SelectBySearch_Result>("Co2Db_VareGrp_SelectBySearch", searchParameter);
        }
    
        public virtual ObjectResult<Co2Db_VareGrp_SelectID_Result> Co2Db_VareGrp_SelectID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_VareGrp_SelectID_Result>("Co2Db_VareGrp_SelectID", iDParameter);
        }
    
        public virtual ObjectResult<Co2Db_VareGrp_SelectOne_Result> Co2Db_VareGrp_SelectOne(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_VareGrp_SelectOne_Result>("Co2Db_VareGrp_SelectOne", iDParameter);
        }
    
        public virtual int Co2Db_VareGrp_Update(Nullable<int> iD, Nullable<int> parentID, string vareGrpNr, string vareGrpTekst, string alias, string rettetAf, string rettetIP)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var vareGrpNrParameter = vareGrpNr != null ?
                new ObjectParameter("VareGrpNr", vareGrpNr) :
                new ObjectParameter("VareGrpNr", typeof(string));
    
            var vareGrpTekstParameter = vareGrpTekst != null ?
                new ObjectParameter("VareGrpTekst", vareGrpTekst) :
                new ObjectParameter("VareGrpTekst", typeof(string));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_VareGrp_Update", iDParameter, parentIDParameter, vareGrpNrParameter, vareGrpTekstParameter, aliasParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual int Co2Db_Virksomheder_Delete(Nullable<int> iCompanyID)
        {
            var iCompanyIDParameter = iCompanyID.HasValue ?
                new ObjectParameter("iCompanyID", iCompanyID) :
                new ObjectParameter("iCompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Virksomheder_Delete", iCompanyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Virksomheder_GetChildrenCount(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Virksomheder_GetChildrenCount", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Co2Db_Virksomheder_GetCount(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Co2Db_Virksomheder_GetCount", isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_Virksomheder_Insert(Nullable<int> iProfileType, Nullable<int> iParentID, Nullable<int> iKundeGrpID, string sCvrnr, string sEANnr, string sFirmanavn, string sAdresse1, string sAdresse2, string sPostnr, string sBynavn, string state, Nullable<int> iLandekodeID, Nullable<int> iFirmastatusID, Nullable<int> iAndetID, Nullable<bool> bSamArbejdspartner, Nullable<bool> bMedlemDanskErhverv, Nullable<bool> bMedlemGLSA, Nullable<int> iBrancheForeningID, string sTelefon, string sFax, string sEmail, string sWebSiteUrl, string sNoter, string sBeslutNavn, string sBeslutStilling, string sBeslutTelefon, string sBeslutMobil, string sBeslutEmail, string sAdminNavn, string sAdminStilling, string sAdminTelefon, string sAdminMobil, string sAdminEmail, Nullable<int> iKundeStatusID, Nullable<System.DateTime> dOphortdato, Nullable<int> iBetjeningsansvarligID, Nullable<int> iAfdelingAPID, Nullable<int> iDagligBetjenerAPID, Nullable<int> iKontaktansvarligAPID, Nullable<int> iSelskabID, Nullable<int> iDagligBetjenerEksternID, Nullable<int> iKontaktansvarligEksternID, Nullable<System.Guid> agentID, Nullable<System.DateTime> agentStartDate, Nullable<System.DateTime> agentExpiredDate, Nullable<int> paymentID, Nullable<bool> freightFree, Nullable<bool> vATFree, Nullable<bool> sendInvoiceViaEmail, string invoiceEmail, Nullable<int> aEDsupplierID, Nullable<bool> supplier, string supplierName, string supplierTitle, string supplierPhone, string supplierMobil, string supplierEmail, Nullable<bool> aEDservice, Nullable<bool> weberService, Nullable<System.DateTime> wS_AftaleDato, string wS_KontaktPerson, string wS_KontaktEmail, Nullable<System.DateTime> wS_LastServiceVisitDate, Nullable<System.DateTime> wS_NextServiceVisitDate, Nullable<System.DateTime> wS_ServiceVisitIn, Nullable<int> wS_ServicePeriods, Nullable<System.DateTime> wS_ServiceEmailSendt, Nullable<int> wS_ServiceStatus, Nullable<bool> distrib_AED_tilbehør, Nullable<bool> distrib_PAX, Nullable<bool> distrib_FAB, Nullable<bool> distrib_EyeWash, Nullable<bool> distrib_SnøggPlasterDispenser, Nullable<bool> distrib_112FireExtinguisher, Nullable<bool> distrib_Kimovi, Nullable<bool> purchase_LifeKeys, Nullable<bool> purchase_KimoviCremer, Nullable<bool> purchase_FAK, Nullable<bool> purchase_Shop2rescue, Nullable<bool> rescueInfoEdit, Nullable<bool> rescueInfoEditUdvidet, string rettetAf, string rettetIP, ObjectParameter iCompanyID)
        {
            var iProfileTypeParameter = iProfileType.HasValue ?
                new ObjectParameter("iProfileType", iProfileType) :
                new ObjectParameter("iProfileType", typeof(int));
    
            var iParentIDParameter = iParentID.HasValue ?
                new ObjectParameter("iParentID", iParentID) :
                new ObjectParameter("iParentID", typeof(int));
    
            var iKundeGrpIDParameter = iKundeGrpID.HasValue ?
                new ObjectParameter("iKundeGrpID", iKundeGrpID) :
                new ObjectParameter("iKundeGrpID", typeof(int));
    
            var sCvrnrParameter = sCvrnr != null ?
                new ObjectParameter("sCvrnr", sCvrnr) :
                new ObjectParameter("sCvrnr", typeof(string));
    
            var sEANnrParameter = sEANnr != null ?
                new ObjectParameter("sEANnr", sEANnr) :
                new ObjectParameter("sEANnr", typeof(string));
    
            var sFirmanavnParameter = sFirmanavn != null ?
                new ObjectParameter("sFirmanavn", sFirmanavn) :
                new ObjectParameter("sFirmanavn", typeof(string));
    
            var sAdresse1Parameter = sAdresse1 != null ?
                new ObjectParameter("sAdresse1", sAdresse1) :
                new ObjectParameter("sAdresse1", typeof(string));
    
            var sAdresse2Parameter = sAdresse2 != null ?
                new ObjectParameter("sAdresse2", sAdresse2) :
                new ObjectParameter("sAdresse2", typeof(string));
    
            var sPostnrParameter = sPostnr != null ?
                new ObjectParameter("sPostnr", sPostnr) :
                new ObjectParameter("sPostnr", typeof(string));
    
            var sBynavnParameter = sBynavn != null ?
                new ObjectParameter("sBynavn", sBynavn) :
                new ObjectParameter("sBynavn", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var iLandekodeIDParameter = iLandekodeID.HasValue ?
                new ObjectParameter("iLandekodeID", iLandekodeID) :
                new ObjectParameter("iLandekodeID", typeof(int));
    
            var iFirmastatusIDParameter = iFirmastatusID.HasValue ?
                new ObjectParameter("iFirmastatusID", iFirmastatusID) :
                new ObjectParameter("iFirmastatusID", typeof(int));
    
            var iAndetIDParameter = iAndetID.HasValue ?
                new ObjectParameter("iAndetID", iAndetID) :
                new ObjectParameter("iAndetID", typeof(int));
    
            var bSamArbejdspartnerParameter = bSamArbejdspartner.HasValue ?
                new ObjectParameter("bSamArbejdspartner", bSamArbejdspartner) :
                new ObjectParameter("bSamArbejdspartner", typeof(bool));
    
            var bMedlemDanskErhvervParameter = bMedlemDanskErhverv.HasValue ?
                new ObjectParameter("bMedlemDanskErhverv", bMedlemDanskErhverv) :
                new ObjectParameter("bMedlemDanskErhverv", typeof(bool));
    
            var bMedlemGLSAParameter = bMedlemGLSA.HasValue ?
                new ObjectParameter("bMedlemGLSA", bMedlemGLSA) :
                new ObjectParameter("bMedlemGLSA", typeof(bool));
    
            var iBrancheForeningIDParameter = iBrancheForeningID.HasValue ?
                new ObjectParameter("iBrancheForeningID", iBrancheForeningID) :
                new ObjectParameter("iBrancheForeningID", typeof(int));
    
            var sTelefonParameter = sTelefon != null ?
                new ObjectParameter("sTelefon", sTelefon) :
                new ObjectParameter("sTelefon", typeof(string));
    
            var sFaxParameter = sFax != null ?
                new ObjectParameter("sFax", sFax) :
                new ObjectParameter("sFax", typeof(string));
    
            var sEmailParameter = sEmail != null ?
                new ObjectParameter("sEmail", sEmail) :
                new ObjectParameter("sEmail", typeof(string));
    
            var sWebSiteUrlParameter = sWebSiteUrl != null ?
                new ObjectParameter("sWebSiteUrl", sWebSiteUrl) :
                new ObjectParameter("sWebSiteUrl", typeof(string));
    
            var sNoterParameter = sNoter != null ?
                new ObjectParameter("sNoter", sNoter) :
                new ObjectParameter("sNoter", typeof(string));
    
            var sBeslutNavnParameter = sBeslutNavn != null ?
                new ObjectParameter("sBeslutNavn", sBeslutNavn) :
                new ObjectParameter("sBeslutNavn", typeof(string));
    
            var sBeslutStillingParameter = sBeslutStilling != null ?
                new ObjectParameter("sBeslutStilling", sBeslutStilling) :
                new ObjectParameter("sBeslutStilling", typeof(string));
    
            var sBeslutTelefonParameter = sBeslutTelefon != null ?
                new ObjectParameter("sBeslutTelefon", sBeslutTelefon) :
                new ObjectParameter("sBeslutTelefon", typeof(string));
    
            var sBeslutMobilParameter = sBeslutMobil != null ?
                new ObjectParameter("sBeslutMobil", sBeslutMobil) :
                new ObjectParameter("sBeslutMobil", typeof(string));
    
            var sBeslutEmailParameter = sBeslutEmail != null ?
                new ObjectParameter("sBeslutEmail", sBeslutEmail) :
                new ObjectParameter("sBeslutEmail", typeof(string));
    
            var sAdminNavnParameter = sAdminNavn != null ?
                new ObjectParameter("sAdminNavn", sAdminNavn) :
                new ObjectParameter("sAdminNavn", typeof(string));
    
            var sAdminStillingParameter = sAdminStilling != null ?
                new ObjectParameter("sAdminStilling", sAdminStilling) :
                new ObjectParameter("sAdminStilling", typeof(string));
    
            var sAdminTelefonParameter = sAdminTelefon != null ?
                new ObjectParameter("sAdminTelefon", sAdminTelefon) :
                new ObjectParameter("sAdminTelefon", typeof(string));
    
            var sAdminMobilParameter = sAdminMobil != null ?
                new ObjectParameter("sAdminMobil", sAdminMobil) :
                new ObjectParameter("sAdminMobil", typeof(string));
    
            var sAdminEmailParameter = sAdminEmail != null ?
                new ObjectParameter("sAdminEmail", sAdminEmail) :
                new ObjectParameter("sAdminEmail", typeof(string));
    
            var iKundeStatusIDParameter = iKundeStatusID.HasValue ?
                new ObjectParameter("iKundeStatusID", iKundeStatusID) :
                new ObjectParameter("iKundeStatusID", typeof(int));
    
            var dOphortdatoParameter = dOphortdato.HasValue ?
                new ObjectParameter("dOphortdato", dOphortdato) :
                new ObjectParameter("dOphortdato", typeof(System.DateTime));
    
            var iBetjeningsansvarligIDParameter = iBetjeningsansvarligID.HasValue ?
                new ObjectParameter("iBetjeningsansvarligID", iBetjeningsansvarligID) :
                new ObjectParameter("iBetjeningsansvarligID", typeof(int));
    
            var iAfdelingAPIDParameter = iAfdelingAPID.HasValue ?
                new ObjectParameter("iAfdelingAPID", iAfdelingAPID) :
                new ObjectParameter("iAfdelingAPID", typeof(int));
    
            var iDagligBetjenerAPIDParameter = iDagligBetjenerAPID.HasValue ?
                new ObjectParameter("iDagligBetjenerAPID", iDagligBetjenerAPID) :
                new ObjectParameter("iDagligBetjenerAPID", typeof(int));
    
            var iKontaktansvarligAPIDParameter = iKontaktansvarligAPID.HasValue ?
                new ObjectParameter("iKontaktansvarligAPID", iKontaktansvarligAPID) :
                new ObjectParameter("iKontaktansvarligAPID", typeof(int));
    
            var iSelskabIDParameter = iSelskabID.HasValue ?
                new ObjectParameter("iSelskabID", iSelskabID) :
                new ObjectParameter("iSelskabID", typeof(int));
    
            var iDagligBetjenerEksternIDParameter = iDagligBetjenerEksternID.HasValue ?
                new ObjectParameter("iDagligBetjenerEksternID", iDagligBetjenerEksternID) :
                new ObjectParameter("iDagligBetjenerEksternID", typeof(int));
    
            var iKontaktansvarligEksternIDParameter = iKontaktansvarligEksternID.HasValue ?
                new ObjectParameter("iKontaktansvarligEksternID", iKontaktansvarligEksternID) :
                new ObjectParameter("iKontaktansvarligEksternID", typeof(int));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var agentStartDateParameter = agentStartDate.HasValue ?
                new ObjectParameter("AgentStartDate", agentStartDate) :
                new ObjectParameter("AgentStartDate", typeof(System.DateTime));
    
            var agentExpiredDateParameter = agentExpiredDate.HasValue ?
                new ObjectParameter("AgentExpiredDate", agentExpiredDate) :
                new ObjectParameter("AgentExpiredDate", typeof(System.DateTime));
    
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));
    
            var freightFreeParameter = freightFree.HasValue ?
                new ObjectParameter("FreightFree", freightFree) :
                new ObjectParameter("FreightFree", typeof(bool));
    
            var vATFreeParameter = vATFree.HasValue ?
                new ObjectParameter("VATFree", vATFree) :
                new ObjectParameter("VATFree", typeof(bool));
    
            var sendInvoiceViaEmailParameter = sendInvoiceViaEmail.HasValue ?
                new ObjectParameter("SendInvoiceViaEmail", sendInvoiceViaEmail) :
                new ObjectParameter("SendInvoiceViaEmail", typeof(bool));
    
            var invoiceEmailParameter = invoiceEmail != null ?
                new ObjectParameter("InvoiceEmail", invoiceEmail) :
                new ObjectParameter("InvoiceEmail", typeof(string));
    
            var aEDsupplierIDParameter = aEDsupplierID.HasValue ?
                new ObjectParameter("AEDsupplierID", aEDsupplierID) :
                new ObjectParameter("AEDsupplierID", typeof(int));
    
            var supplierParameter = supplier.HasValue ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(bool));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var supplierTitleParameter = supplierTitle != null ?
                new ObjectParameter("SupplierTitle", supplierTitle) :
                new ObjectParameter("SupplierTitle", typeof(string));
    
            var supplierPhoneParameter = supplierPhone != null ?
                new ObjectParameter("SupplierPhone", supplierPhone) :
                new ObjectParameter("SupplierPhone", typeof(string));
    
            var supplierMobilParameter = supplierMobil != null ?
                new ObjectParameter("SupplierMobil", supplierMobil) :
                new ObjectParameter("SupplierMobil", typeof(string));
    
            var supplierEmailParameter = supplierEmail != null ?
                new ObjectParameter("SupplierEmail", supplierEmail) :
                new ObjectParameter("SupplierEmail", typeof(string));
    
            var aEDserviceParameter = aEDservice.HasValue ?
                new ObjectParameter("AEDservice", aEDservice) :
                new ObjectParameter("AEDservice", typeof(bool));
    
            var weberServiceParameter = weberService.HasValue ?
                new ObjectParameter("WeberService", weberService) :
                new ObjectParameter("WeberService", typeof(bool));
    
            var wS_AftaleDatoParameter = wS_AftaleDato.HasValue ?
                new ObjectParameter("WS_AftaleDato", wS_AftaleDato) :
                new ObjectParameter("WS_AftaleDato", typeof(System.DateTime));
    
            var wS_KontaktPersonParameter = wS_KontaktPerson != null ?
                new ObjectParameter("WS_KontaktPerson", wS_KontaktPerson) :
                new ObjectParameter("WS_KontaktPerson", typeof(string));
    
            var wS_KontaktEmailParameter = wS_KontaktEmail != null ?
                new ObjectParameter("WS_KontaktEmail", wS_KontaktEmail) :
                new ObjectParameter("WS_KontaktEmail", typeof(string));
    
            var wS_LastServiceVisitDateParameter = wS_LastServiceVisitDate.HasValue ?
                new ObjectParameter("WS_LastServiceVisitDate", wS_LastServiceVisitDate) :
                new ObjectParameter("WS_LastServiceVisitDate", typeof(System.DateTime));
    
            var wS_NextServiceVisitDateParameter = wS_NextServiceVisitDate.HasValue ?
                new ObjectParameter("WS_NextServiceVisitDate", wS_NextServiceVisitDate) :
                new ObjectParameter("WS_NextServiceVisitDate", typeof(System.DateTime));
    
            var wS_ServiceVisitInParameter = wS_ServiceVisitIn.HasValue ?
                new ObjectParameter("WS_ServiceVisitIn", wS_ServiceVisitIn) :
                new ObjectParameter("WS_ServiceVisitIn", typeof(System.DateTime));
    
            var wS_ServicePeriodsParameter = wS_ServicePeriods.HasValue ?
                new ObjectParameter("WS_ServicePeriods", wS_ServicePeriods) :
                new ObjectParameter("WS_ServicePeriods", typeof(int));
    
            var wS_ServiceEmailSendtParameter = wS_ServiceEmailSendt.HasValue ?
                new ObjectParameter("WS_ServiceEmailSendt", wS_ServiceEmailSendt) :
                new ObjectParameter("WS_ServiceEmailSendt", typeof(System.DateTime));
    
            var wS_ServiceStatusParameter = wS_ServiceStatus.HasValue ?
                new ObjectParameter("WS_ServiceStatus", wS_ServiceStatus) :
                new ObjectParameter("WS_ServiceStatus", typeof(int));
    
            var distrib_AED_tilbehørParameter = distrib_AED_tilbehør.HasValue ?
                new ObjectParameter("Distrib_AED_tilbehør", distrib_AED_tilbehør) :
                new ObjectParameter("Distrib_AED_tilbehør", typeof(bool));
    
            var distrib_PAXParameter = distrib_PAX.HasValue ?
                new ObjectParameter("Distrib_PAX", distrib_PAX) :
                new ObjectParameter("Distrib_PAX", typeof(bool));
    
            var distrib_FABParameter = distrib_FAB.HasValue ?
                new ObjectParameter("Distrib_FAB", distrib_FAB) :
                new ObjectParameter("Distrib_FAB", typeof(bool));
    
            var distrib_EyeWashParameter = distrib_EyeWash.HasValue ?
                new ObjectParameter("Distrib_EyeWash", distrib_EyeWash) :
                new ObjectParameter("Distrib_EyeWash", typeof(bool));
    
            var distrib_SnøggPlasterDispenserParameter = distrib_SnøggPlasterDispenser.HasValue ?
                new ObjectParameter("Distrib_SnøggPlasterDispenser", distrib_SnøggPlasterDispenser) :
                new ObjectParameter("Distrib_SnøggPlasterDispenser", typeof(bool));
    
            var distrib_112FireExtinguisherParameter = distrib_112FireExtinguisher.HasValue ?
                new ObjectParameter("Distrib_112FireExtinguisher", distrib_112FireExtinguisher) :
                new ObjectParameter("Distrib_112FireExtinguisher", typeof(bool));
    
            var distrib_KimoviParameter = distrib_Kimovi.HasValue ?
                new ObjectParameter("Distrib_Kimovi", distrib_Kimovi) :
                new ObjectParameter("Distrib_Kimovi", typeof(bool));
    
            var purchase_LifeKeysParameter = purchase_LifeKeys.HasValue ?
                new ObjectParameter("Purchase_LifeKeys", purchase_LifeKeys) :
                new ObjectParameter("Purchase_LifeKeys", typeof(bool));
    
            var purchase_KimoviCremerParameter = purchase_KimoviCremer.HasValue ?
                new ObjectParameter("Purchase_KimoviCremer", purchase_KimoviCremer) :
                new ObjectParameter("Purchase_KimoviCremer", typeof(bool));
    
            var purchase_FAKParameter = purchase_FAK.HasValue ?
                new ObjectParameter("Purchase_FAK", purchase_FAK) :
                new ObjectParameter("Purchase_FAK", typeof(bool));
    
            var purchase_Shop2rescueParameter = purchase_Shop2rescue.HasValue ?
                new ObjectParameter("Purchase_Shop2rescue", purchase_Shop2rescue) :
                new ObjectParameter("Purchase_Shop2rescue", typeof(bool));
    
            var rescueInfoEditParameter = rescueInfoEdit.HasValue ?
                new ObjectParameter("RescueInfoEdit", rescueInfoEdit) :
                new ObjectParameter("RescueInfoEdit", typeof(bool));
    
            var rescueInfoEditUdvidetParameter = rescueInfoEditUdvidet.HasValue ?
                new ObjectParameter("RescueInfoEditUdvidet", rescueInfoEditUdvidet) :
                new ObjectParameter("RescueInfoEditUdvidet", typeof(bool));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Virksomheder_Insert", iProfileTypeParameter, iParentIDParameter, iKundeGrpIDParameter, sCvrnrParameter, sEANnrParameter, sFirmanavnParameter, sAdresse1Parameter, sAdresse2Parameter, sPostnrParameter, sBynavnParameter, stateParameter, iLandekodeIDParameter, iFirmastatusIDParameter, iAndetIDParameter, bSamArbejdspartnerParameter, bMedlemDanskErhvervParameter, bMedlemGLSAParameter, iBrancheForeningIDParameter, sTelefonParameter, sFaxParameter, sEmailParameter, sWebSiteUrlParameter, sNoterParameter, sBeslutNavnParameter, sBeslutStillingParameter, sBeslutTelefonParameter, sBeslutMobilParameter, sBeslutEmailParameter, sAdminNavnParameter, sAdminStillingParameter, sAdminTelefonParameter, sAdminMobilParameter, sAdminEmailParameter, iKundeStatusIDParameter, dOphortdatoParameter, iBetjeningsansvarligIDParameter, iAfdelingAPIDParameter, iDagligBetjenerAPIDParameter, iKontaktansvarligAPIDParameter, iSelskabIDParameter, iDagligBetjenerEksternIDParameter, iKontaktansvarligEksternIDParameter, agentIDParameter, agentStartDateParameter, agentExpiredDateParameter, paymentIDParameter, freightFreeParameter, vATFreeParameter, sendInvoiceViaEmailParameter, invoiceEmailParameter, aEDsupplierIDParameter, supplierParameter, supplierNameParameter, supplierTitleParameter, supplierPhoneParameter, supplierMobilParameter, supplierEmailParameter, aEDserviceParameter, weberServiceParameter, wS_AftaleDatoParameter, wS_KontaktPersonParameter, wS_KontaktEmailParameter, wS_LastServiceVisitDateParameter, wS_NextServiceVisitDateParameter, wS_ServiceVisitInParameter, wS_ServicePeriodsParameter, wS_ServiceEmailSendtParameter, wS_ServiceStatusParameter, distrib_AED_tilbehørParameter, distrib_PAXParameter, distrib_FABParameter, distrib_EyeWashParameter, distrib_SnøggPlasterDispenserParameter, distrib_112FireExtinguisherParameter, distrib_KimoviParameter, purchase_LifeKeysParameter, purchase_KimoviCremerParameter, purchase_FAKParameter, purchase_Shop2rescueParameter, rescueInfoEditParameter, rescueInfoEditUdvidetParameter, rettetAfParameter, rettetIPParameter, iCompanyID);
        }
    
        public virtual int Co2Db_Virksomheder_ListConcernID(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID, ObjectParameter concernID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Virksomheder_ListConcernID", companyIDParameter, isAgentParameter, agentIDParameter, concernID);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SearchByCvrnr_Result> Co2Db_Virksomheder_SearchByCvrnr(string cvrnr, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var cvrnrParameter = cvrnr != null ?
                new ObjectParameter("Cvrnr", cvrnr) :
                new ObjectParameter("Cvrnr", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SearchByCvrnr_Result>("Co2Db_Virksomheder_SearchByCvrnr", cvrnrParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SearchFilter_Result> Co2Db_Virksomheder_SearchFilter(string firmanavn, string cvrnr, string postnr, string telefon, Nullable<int> status, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var firmanavnParameter = firmanavn != null ?
                new ObjectParameter("Firmanavn", firmanavn) :
                new ObjectParameter("Firmanavn", typeof(string));
    
            var cvrnrParameter = cvrnr != null ?
                new ObjectParameter("Cvrnr", cvrnr) :
                new ObjectParameter("Cvrnr", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SearchFilter_Result>("Co2Db_Virksomheder_SearchFilter", firmanavnParameter, cvrnrParameter, postnrParameter, telefonParameter, statusParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SearchFilter_ID_Result> Co2Db_Virksomheder_SearchFilter_ID(string firmanavn, string cvrnr, string postnr, string telefon, Nullable<int> status, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var firmanavnParameter = firmanavn != null ?
                new ObjectParameter("Firmanavn", firmanavn) :
                new ObjectParameter("Firmanavn", typeof(string));
    
            var cvrnrParameter = cvrnr != null ?
                new ObjectParameter("Cvrnr", cvrnr) :
                new ObjectParameter("Cvrnr", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SearchFilter_ID_Result>("Co2Db_Virksomheder_SearchFilter_ID", firmanavnParameter, cvrnrParameter, postnrParameter, telefonParameter, statusParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SearchMotherCompany_Result> Co2Db_Virksomheder_SearchMotherCompany(string cvrnr, Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var cvrnrParameter = cvrnr != null ?
                new ObjectParameter("Cvrnr", cvrnr) :
                new ObjectParameter("Cvrnr", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SearchMotherCompany_Result>("Co2Db_Virksomheder_SearchMotherCompany", cvrnrParameter, companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectAll_Result> Co2Db_Virksomheder_SelectAll(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectAll_Result>("Co2Db_Virksomheder_SelectAll", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectAllCvrnr_Result> Co2Db_Virksomheder_SelectAllCvrnr(Nullable<int> companyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectAllCvrnr_Result>("Co2Db_Virksomheder_SelectAllCvrnr", companyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_Virksomheder_SelectAllCvrnr_Test(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Virksomheder_SelectAllCvrnr_Test", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectAllSupplier_Result> Co2Db_Virksomheder_SelectAllSupplier(Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectAllSupplier_Result>("Co2Db_Virksomheder_SelectAllSupplier", isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectBySearch_Result> Co2Db_Virksomheder_SelectBySearch(string sSearch, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var sSearchParameter = sSearch != null ?
                new ObjectParameter("sSearch", sSearch) :
                new ObjectParameter("sSearch", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectBySearch_Result>("Co2Db_Virksomheder_SelectBySearch", sSearchParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectBySearchStatus_Result> Co2Db_Virksomheder_SelectBySearchStatus(string search, Nullable<int> status, Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> searchField)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var searchFieldParameter = searchField.HasValue ?
                new ObjectParameter("SearchField", searchField) :
                new ObjectParameter("SearchField", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectBySearchStatus_Result>("Co2Db_Virksomheder_SelectBySearchStatus", searchParameter, statusParameter, isAgentParameter, agentIDParameter, searchFieldParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectBySearchStatus_ID_Result> Co2Db_Virksomheder_SelectBySearchStatus_ID(string search, Nullable<int> status, Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> searchField)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var searchFieldParameter = searchField.HasValue ?
                new ObjectParameter("SearchField", searchField) :
                new ObjectParameter("SearchField", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectBySearchStatus_ID_Result>("Co2Db_Virksomheder_SelectBySearchStatus_ID", searchParameter, statusParameter, isAgentParameter, agentIDParameter, searchFieldParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectByUserName_Result> Co2Db_Virksomheder_SelectByUserName(string sUserName, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var sUserNameParameter = sUserName != null ?
                new ObjectParameter("sUserName", sUserName) :
                new ObjectParameter("sUserName", typeof(string));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectByUserName_Result>("Co2Db_Virksomheder_SelectByUserName", sUserNameParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectChildren_Result> Co2Db_Virksomheder_SelectChildren(Nullable<int> iD, Nullable<int> medarbGrpID, Nullable<bool> showFree, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var medarbGrpIDParameter = medarbGrpID.HasValue ?
                new ObjectParameter("MedarbGrpID", medarbGrpID) :
                new ObjectParameter("MedarbGrpID", typeof(int));
    
            var showFreeParameter = showFree.HasValue ?
                new ObjectParameter("ShowFree", showFree) :
                new ObjectParameter("ShowFree", typeof(bool));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectChildren_Result>("Co2Db_Virksomheder_SelectChildren", iDParameter, medarbGrpIDParameter, showFreeParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectCvrnrStatus_Result> Co2Db_Virksomheder_SelectCvrnrStatus(string cvrnr, Nullable<int> firmastatusID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var cvrnrParameter = cvrnr != null ?
                new ObjectParameter("Cvrnr", cvrnr) :
                new ObjectParameter("Cvrnr", typeof(string));
    
            var firmastatusIDParameter = firmastatusID.HasValue ?
                new ObjectParameter("FirmastatusID", firmastatusID) :
                new ObjectParameter("FirmastatusID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectCvrnrStatus_Result>("Co2Db_Virksomheder_SelectCvrnrStatus", cvrnrParameter, firmastatusIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<string> Co2Db_Virksomheder_SelectName(Nullable<int> iCompanyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iCompanyIDParameter = iCompanyID.HasValue ?
                new ObjectParameter("iCompanyID", iCompanyID) :
                new ObjectParameter("iCompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Co2Db_Virksomheder_SelectName", iCompanyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_SelectOne_Result> Co2Db_Virksomheder_SelectOne(Nullable<int> iCompanyID, Nullable<bool> isAgent, Nullable<System.Guid> agentID)
        {
            var iCompanyIDParameter = iCompanyID.HasValue ?
                new ObjectParameter("iCompanyID", iCompanyID) :
                new ObjectParameter("iCompanyID", typeof(int));
    
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_SelectOne_Result>("Co2Db_Virksomheder_SelectOne", iCompanyIDParameter, isAgentParameter, agentIDParameter);
        }
    
        public virtual int Co2Db_Virksomheder_Update(Nullable<int> iCompanyID, Nullable<int> iParentID, Nullable<int> iKundeGrpID, Nullable<int> iProfileType, string sCvrnr, string sEANnr, string sFirmanavn, string sAdresse1, string sAdresse2, string sPostnr, string sBynavn, string state, Nullable<int> iLandekodeID, Nullable<int> iFirmastatusID, Nullable<int> iAndetID, Nullable<bool> bSamArbejdspartner, Nullable<bool> bMedlemDanskErhverv, Nullable<bool> bMedlemGLSA, Nullable<int> iBrancheForeningID, string sTelefon, string sFax, string sEmail, string sWebSiteUrl, string sNoter, string sBeslutNavn, string sBeslutStilling, string sBeslutTelefon, string sBeslutMobil, string sBeslutEmail, string sAdminNavn, string sAdminStilling, string sAdminTelefon, string sAdminMobil, string sAdminEmail, Nullable<int> iKundeStatusID, Nullable<System.DateTime> dOphortdato, Nullable<int> iBetjeningsansvarligID, Nullable<int> iAfdelingAPID, Nullable<int> iDagligBetjenerAPID, Nullable<int> iKontaktansvarligAPID, Nullable<int> iSelskabID, Nullable<int> iDagligBetjenerEksternID, Nullable<int> iKontaktansvarligEksternID, Nullable<System.Guid> agentID, Nullable<System.DateTime> agentStartDate, Nullable<System.DateTime> agentExpiredDate, Nullable<int> paymentID, Nullable<bool> freightFree, Nullable<bool> vATFree, Nullable<bool> sendInvoiceViaEmail, string invoiceEmail, Nullable<int> aEDsupplierID, Nullable<bool> supplier, string supplierName, string supplierTitle, string supplierPhone, string supplierMobil, string supplierEmail, Nullable<bool> aEDservice, Nullable<bool> weberService, Nullable<System.DateTime> wS_AftaleDato, string wS_KontaktPerson, string wS_KontaktEmail, Nullable<System.DateTime> wS_LastServiceVisitDate, Nullable<System.DateTime> wS_NextServiceVisitDate, Nullable<System.DateTime> wS_ServiceVisitIn, Nullable<int> wS_ServicePeriods, Nullable<System.DateTime> wS_ServiceEmailSendt, Nullable<int> wS_ServiceStatus, Nullable<bool> distrib_AED_tilbehør, Nullable<bool> distrib_PAX, Nullable<bool> distrib_FAB, Nullable<bool> distrib_EyeWash, Nullable<bool> distrib_SnøggPlasterDispenser, Nullable<bool> distrib_112FireExtinguisher, Nullable<bool> distrib_Kimovi, Nullable<bool> purchase_LifeKeys, Nullable<bool> purchase_KimoviCremer, Nullable<bool> purchase_FAK, Nullable<bool> purchase_Shop2rescue, Nullable<bool> rescueInfoEdit, Nullable<bool> rescueInfoEditUdvidet, string rettetAf, string rettetIP)
        {
            var iCompanyIDParameter = iCompanyID.HasValue ?
                new ObjectParameter("iCompanyID", iCompanyID) :
                new ObjectParameter("iCompanyID", typeof(int));
    
            var iParentIDParameter = iParentID.HasValue ?
                new ObjectParameter("iParentID", iParentID) :
                new ObjectParameter("iParentID", typeof(int));
    
            var iKundeGrpIDParameter = iKundeGrpID.HasValue ?
                new ObjectParameter("iKundeGrpID", iKundeGrpID) :
                new ObjectParameter("iKundeGrpID", typeof(int));
    
            var iProfileTypeParameter = iProfileType.HasValue ?
                new ObjectParameter("iProfileType", iProfileType) :
                new ObjectParameter("iProfileType", typeof(int));
    
            var sCvrnrParameter = sCvrnr != null ?
                new ObjectParameter("sCvrnr", sCvrnr) :
                new ObjectParameter("sCvrnr", typeof(string));
    
            var sEANnrParameter = sEANnr != null ?
                new ObjectParameter("sEANnr", sEANnr) :
                new ObjectParameter("sEANnr", typeof(string));
    
            var sFirmanavnParameter = sFirmanavn != null ?
                new ObjectParameter("sFirmanavn", sFirmanavn) :
                new ObjectParameter("sFirmanavn", typeof(string));
    
            var sAdresse1Parameter = sAdresse1 != null ?
                new ObjectParameter("sAdresse1", sAdresse1) :
                new ObjectParameter("sAdresse1", typeof(string));
    
            var sAdresse2Parameter = sAdresse2 != null ?
                new ObjectParameter("sAdresse2", sAdresse2) :
                new ObjectParameter("sAdresse2", typeof(string));
    
            var sPostnrParameter = sPostnr != null ?
                new ObjectParameter("sPostnr", sPostnr) :
                new ObjectParameter("sPostnr", typeof(string));
    
            var sBynavnParameter = sBynavn != null ?
                new ObjectParameter("sBynavn", sBynavn) :
                new ObjectParameter("sBynavn", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var iLandekodeIDParameter = iLandekodeID.HasValue ?
                new ObjectParameter("iLandekodeID", iLandekodeID) :
                new ObjectParameter("iLandekodeID", typeof(int));
    
            var iFirmastatusIDParameter = iFirmastatusID.HasValue ?
                new ObjectParameter("iFirmastatusID", iFirmastatusID) :
                new ObjectParameter("iFirmastatusID", typeof(int));
    
            var iAndetIDParameter = iAndetID.HasValue ?
                new ObjectParameter("iAndetID", iAndetID) :
                new ObjectParameter("iAndetID", typeof(int));
    
            var bSamArbejdspartnerParameter = bSamArbejdspartner.HasValue ?
                new ObjectParameter("bSamArbejdspartner", bSamArbejdspartner) :
                new ObjectParameter("bSamArbejdspartner", typeof(bool));
    
            var bMedlemDanskErhvervParameter = bMedlemDanskErhverv.HasValue ?
                new ObjectParameter("bMedlemDanskErhverv", bMedlemDanskErhverv) :
                new ObjectParameter("bMedlemDanskErhverv", typeof(bool));
    
            var bMedlemGLSAParameter = bMedlemGLSA.HasValue ?
                new ObjectParameter("bMedlemGLSA", bMedlemGLSA) :
                new ObjectParameter("bMedlemGLSA", typeof(bool));
    
            var iBrancheForeningIDParameter = iBrancheForeningID.HasValue ?
                new ObjectParameter("iBrancheForeningID", iBrancheForeningID) :
                new ObjectParameter("iBrancheForeningID", typeof(int));
    
            var sTelefonParameter = sTelefon != null ?
                new ObjectParameter("sTelefon", sTelefon) :
                new ObjectParameter("sTelefon", typeof(string));
    
            var sFaxParameter = sFax != null ?
                new ObjectParameter("sFax", sFax) :
                new ObjectParameter("sFax", typeof(string));
    
            var sEmailParameter = sEmail != null ?
                new ObjectParameter("sEmail", sEmail) :
                new ObjectParameter("sEmail", typeof(string));
    
            var sWebSiteUrlParameter = sWebSiteUrl != null ?
                new ObjectParameter("sWebSiteUrl", sWebSiteUrl) :
                new ObjectParameter("sWebSiteUrl", typeof(string));
    
            var sNoterParameter = sNoter != null ?
                new ObjectParameter("sNoter", sNoter) :
                new ObjectParameter("sNoter", typeof(string));
    
            var sBeslutNavnParameter = sBeslutNavn != null ?
                new ObjectParameter("sBeslutNavn", sBeslutNavn) :
                new ObjectParameter("sBeslutNavn", typeof(string));
    
            var sBeslutStillingParameter = sBeslutStilling != null ?
                new ObjectParameter("sBeslutStilling", sBeslutStilling) :
                new ObjectParameter("sBeslutStilling", typeof(string));
    
            var sBeslutTelefonParameter = sBeslutTelefon != null ?
                new ObjectParameter("sBeslutTelefon", sBeslutTelefon) :
                new ObjectParameter("sBeslutTelefon", typeof(string));
    
            var sBeslutMobilParameter = sBeslutMobil != null ?
                new ObjectParameter("sBeslutMobil", sBeslutMobil) :
                new ObjectParameter("sBeslutMobil", typeof(string));
    
            var sBeslutEmailParameter = sBeslutEmail != null ?
                new ObjectParameter("sBeslutEmail", sBeslutEmail) :
                new ObjectParameter("sBeslutEmail", typeof(string));
    
            var sAdminNavnParameter = sAdminNavn != null ?
                new ObjectParameter("sAdminNavn", sAdminNavn) :
                new ObjectParameter("sAdminNavn", typeof(string));
    
            var sAdminStillingParameter = sAdminStilling != null ?
                new ObjectParameter("sAdminStilling", sAdminStilling) :
                new ObjectParameter("sAdminStilling", typeof(string));
    
            var sAdminTelefonParameter = sAdminTelefon != null ?
                new ObjectParameter("sAdminTelefon", sAdminTelefon) :
                new ObjectParameter("sAdminTelefon", typeof(string));
    
            var sAdminMobilParameter = sAdminMobil != null ?
                new ObjectParameter("sAdminMobil", sAdminMobil) :
                new ObjectParameter("sAdminMobil", typeof(string));
    
            var sAdminEmailParameter = sAdminEmail != null ?
                new ObjectParameter("sAdminEmail", sAdminEmail) :
                new ObjectParameter("sAdminEmail", typeof(string));
    
            var iKundeStatusIDParameter = iKundeStatusID.HasValue ?
                new ObjectParameter("iKundeStatusID", iKundeStatusID) :
                new ObjectParameter("iKundeStatusID", typeof(int));
    
            var dOphortdatoParameter = dOphortdato.HasValue ?
                new ObjectParameter("dOphortdato", dOphortdato) :
                new ObjectParameter("dOphortdato", typeof(System.DateTime));
    
            var iBetjeningsansvarligIDParameter = iBetjeningsansvarligID.HasValue ?
                new ObjectParameter("iBetjeningsansvarligID", iBetjeningsansvarligID) :
                new ObjectParameter("iBetjeningsansvarligID", typeof(int));
    
            var iAfdelingAPIDParameter = iAfdelingAPID.HasValue ?
                new ObjectParameter("iAfdelingAPID", iAfdelingAPID) :
                new ObjectParameter("iAfdelingAPID", typeof(int));
    
            var iDagligBetjenerAPIDParameter = iDagligBetjenerAPID.HasValue ?
                new ObjectParameter("iDagligBetjenerAPID", iDagligBetjenerAPID) :
                new ObjectParameter("iDagligBetjenerAPID", typeof(int));
    
            var iKontaktansvarligAPIDParameter = iKontaktansvarligAPID.HasValue ?
                new ObjectParameter("iKontaktansvarligAPID", iKontaktansvarligAPID) :
                new ObjectParameter("iKontaktansvarligAPID", typeof(int));
    
            var iSelskabIDParameter = iSelskabID.HasValue ?
                new ObjectParameter("iSelskabID", iSelskabID) :
                new ObjectParameter("iSelskabID", typeof(int));
    
            var iDagligBetjenerEksternIDParameter = iDagligBetjenerEksternID.HasValue ?
                new ObjectParameter("iDagligBetjenerEksternID", iDagligBetjenerEksternID) :
                new ObjectParameter("iDagligBetjenerEksternID", typeof(int));
    
            var iKontaktansvarligEksternIDParameter = iKontaktansvarligEksternID.HasValue ?
                new ObjectParameter("iKontaktansvarligEksternID", iKontaktansvarligEksternID) :
                new ObjectParameter("iKontaktansvarligEksternID", typeof(int));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var agentStartDateParameter = agentStartDate.HasValue ?
                new ObjectParameter("AgentStartDate", agentStartDate) :
                new ObjectParameter("AgentStartDate", typeof(System.DateTime));
    
            var agentExpiredDateParameter = agentExpiredDate.HasValue ?
                new ObjectParameter("AgentExpiredDate", agentExpiredDate) :
                new ObjectParameter("AgentExpiredDate", typeof(System.DateTime));
    
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));
    
            var freightFreeParameter = freightFree.HasValue ?
                new ObjectParameter("FreightFree", freightFree) :
                new ObjectParameter("FreightFree", typeof(bool));
    
            var vATFreeParameter = vATFree.HasValue ?
                new ObjectParameter("VATFree", vATFree) :
                new ObjectParameter("VATFree", typeof(bool));
    
            var sendInvoiceViaEmailParameter = sendInvoiceViaEmail.HasValue ?
                new ObjectParameter("SendInvoiceViaEmail", sendInvoiceViaEmail) :
                new ObjectParameter("SendInvoiceViaEmail", typeof(bool));
    
            var invoiceEmailParameter = invoiceEmail != null ?
                new ObjectParameter("InvoiceEmail", invoiceEmail) :
                new ObjectParameter("InvoiceEmail", typeof(string));
    
            var aEDsupplierIDParameter = aEDsupplierID.HasValue ?
                new ObjectParameter("AEDsupplierID", aEDsupplierID) :
                new ObjectParameter("AEDsupplierID", typeof(int));
    
            var supplierParameter = supplier.HasValue ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(bool));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var supplierTitleParameter = supplierTitle != null ?
                new ObjectParameter("SupplierTitle", supplierTitle) :
                new ObjectParameter("SupplierTitle", typeof(string));
    
            var supplierPhoneParameter = supplierPhone != null ?
                new ObjectParameter("SupplierPhone", supplierPhone) :
                new ObjectParameter("SupplierPhone", typeof(string));
    
            var supplierMobilParameter = supplierMobil != null ?
                new ObjectParameter("SupplierMobil", supplierMobil) :
                new ObjectParameter("SupplierMobil", typeof(string));
    
            var supplierEmailParameter = supplierEmail != null ?
                new ObjectParameter("SupplierEmail", supplierEmail) :
                new ObjectParameter("SupplierEmail", typeof(string));
    
            var aEDserviceParameter = aEDservice.HasValue ?
                new ObjectParameter("AEDservice", aEDservice) :
                new ObjectParameter("AEDservice", typeof(bool));
    
            var weberServiceParameter = weberService.HasValue ?
                new ObjectParameter("WeberService", weberService) :
                new ObjectParameter("WeberService", typeof(bool));
    
            var wS_AftaleDatoParameter = wS_AftaleDato.HasValue ?
                new ObjectParameter("WS_AftaleDato", wS_AftaleDato) :
                new ObjectParameter("WS_AftaleDato", typeof(System.DateTime));
    
            var wS_KontaktPersonParameter = wS_KontaktPerson != null ?
                new ObjectParameter("WS_KontaktPerson", wS_KontaktPerson) :
                new ObjectParameter("WS_KontaktPerson", typeof(string));
    
            var wS_KontaktEmailParameter = wS_KontaktEmail != null ?
                new ObjectParameter("WS_KontaktEmail", wS_KontaktEmail) :
                new ObjectParameter("WS_KontaktEmail", typeof(string));
    
            var wS_LastServiceVisitDateParameter = wS_LastServiceVisitDate.HasValue ?
                new ObjectParameter("WS_LastServiceVisitDate", wS_LastServiceVisitDate) :
                new ObjectParameter("WS_LastServiceVisitDate", typeof(System.DateTime));
    
            var wS_NextServiceVisitDateParameter = wS_NextServiceVisitDate.HasValue ?
                new ObjectParameter("WS_NextServiceVisitDate", wS_NextServiceVisitDate) :
                new ObjectParameter("WS_NextServiceVisitDate", typeof(System.DateTime));
    
            var wS_ServiceVisitInParameter = wS_ServiceVisitIn.HasValue ?
                new ObjectParameter("WS_ServiceVisitIn", wS_ServiceVisitIn) :
                new ObjectParameter("WS_ServiceVisitIn", typeof(System.DateTime));
    
            var wS_ServicePeriodsParameter = wS_ServicePeriods.HasValue ?
                new ObjectParameter("WS_ServicePeriods", wS_ServicePeriods) :
                new ObjectParameter("WS_ServicePeriods", typeof(int));
    
            var wS_ServiceEmailSendtParameter = wS_ServiceEmailSendt.HasValue ?
                new ObjectParameter("WS_ServiceEmailSendt", wS_ServiceEmailSendt) :
                new ObjectParameter("WS_ServiceEmailSendt", typeof(System.DateTime));
    
            var wS_ServiceStatusParameter = wS_ServiceStatus.HasValue ?
                new ObjectParameter("WS_ServiceStatus", wS_ServiceStatus) :
                new ObjectParameter("WS_ServiceStatus", typeof(int));
    
            var distrib_AED_tilbehørParameter = distrib_AED_tilbehør.HasValue ?
                new ObjectParameter("Distrib_AED_tilbehør", distrib_AED_tilbehør) :
                new ObjectParameter("Distrib_AED_tilbehør", typeof(bool));
    
            var distrib_PAXParameter = distrib_PAX.HasValue ?
                new ObjectParameter("Distrib_PAX", distrib_PAX) :
                new ObjectParameter("Distrib_PAX", typeof(bool));
    
            var distrib_FABParameter = distrib_FAB.HasValue ?
                new ObjectParameter("Distrib_FAB", distrib_FAB) :
                new ObjectParameter("Distrib_FAB", typeof(bool));
    
            var distrib_EyeWashParameter = distrib_EyeWash.HasValue ?
                new ObjectParameter("Distrib_EyeWash", distrib_EyeWash) :
                new ObjectParameter("Distrib_EyeWash", typeof(bool));
    
            var distrib_SnøggPlasterDispenserParameter = distrib_SnøggPlasterDispenser.HasValue ?
                new ObjectParameter("Distrib_SnøggPlasterDispenser", distrib_SnøggPlasterDispenser) :
                new ObjectParameter("Distrib_SnøggPlasterDispenser", typeof(bool));
    
            var distrib_112FireExtinguisherParameter = distrib_112FireExtinguisher.HasValue ?
                new ObjectParameter("Distrib_112FireExtinguisher", distrib_112FireExtinguisher) :
                new ObjectParameter("Distrib_112FireExtinguisher", typeof(bool));
    
            var distrib_KimoviParameter = distrib_Kimovi.HasValue ?
                new ObjectParameter("Distrib_Kimovi", distrib_Kimovi) :
                new ObjectParameter("Distrib_Kimovi", typeof(bool));
    
            var purchase_LifeKeysParameter = purchase_LifeKeys.HasValue ?
                new ObjectParameter("Purchase_LifeKeys", purchase_LifeKeys) :
                new ObjectParameter("Purchase_LifeKeys", typeof(bool));
    
            var purchase_KimoviCremerParameter = purchase_KimoviCremer.HasValue ?
                new ObjectParameter("Purchase_KimoviCremer", purchase_KimoviCremer) :
                new ObjectParameter("Purchase_KimoviCremer", typeof(bool));
    
            var purchase_FAKParameter = purchase_FAK.HasValue ?
                new ObjectParameter("Purchase_FAK", purchase_FAK) :
                new ObjectParameter("Purchase_FAK", typeof(bool));
    
            var purchase_Shop2rescueParameter = purchase_Shop2rescue.HasValue ?
                new ObjectParameter("Purchase_Shop2rescue", purchase_Shop2rescue) :
                new ObjectParameter("Purchase_Shop2rescue", typeof(bool));
    
            var rescueInfoEditParameter = rescueInfoEdit.HasValue ?
                new ObjectParameter("RescueInfoEdit", rescueInfoEdit) :
                new ObjectParameter("RescueInfoEdit", typeof(bool));
    
            var rescueInfoEditUdvidetParameter = rescueInfoEditUdvidet.HasValue ?
                new ObjectParameter("RescueInfoEditUdvidet", rescueInfoEditUdvidet) :
                new ObjectParameter("RescueInfoEditUdvidet", typeof(bool));
    
            var rettetAfParameter = rettetAf != null ?
                new ObjectParameter("RettetAf", rettetAf) :
                new ObjectParameter("RettetAf", typeof(string));
    
            var rettetIPParameter = rettetIP != null ?
                new ObjectParameter("RettetIP", rettetIP) :
                new ObjectParameter("RettetIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Co2Db_Virksomheder_Update", iCompanyIDParameter, iParentIDParameter, iKundeGrpIDParameter, iProfileTypeParameter, sCvrnrParameter, sEANnrParameter, sFirmanavnParameter, sAdresse1Parameter, sAdresse2Parameter, sPostnrParameter, sBynavnParameter, stateParameter, iLandekodeIDParameter, iFirmastatusIDParameter, iAndetIDParameter, bSamArbejdspartnerParameter, bMedlemDanskErhvervParameter, bMedlemGLSAParameter, iBrancheForeningIDParameter, sTelefonParameter, sFaxParameter, sEmailParameter, sWebSiteUrlParameter, sNoterParameter, sBeslutNavnParameter, sBeslutStillingParameter, sBeslutTelefonParameter, sBeslutMobilParameter, sBeslutEmailParameter, sAdminNavnParameter, sAdminStillingParameter, sAdminTelefonParameter, sAdminMobilParameter, sAdminEmailParameter, iKundeStatusIDParameter, dOphortdatoParameter, iBetjeningsansvarligIDParameter, iAfdelingAPIDParameter, iDagligBetjenerAPIDParameter, iKontaktansvarligAPIDParameter, iSelskabIDParameter, iDagligBetjenerEksternIDParameter, iKontaktansvarligEksternIDParameter, agentIDParameter, agentStartDateParameter, agentExpiredDateParameter, paymentIDParameter, freightFreeParameter, vATFreeParameter, sendInvoiceViaEmailParameter, invoiceEmailParameter, aEDsupplierIDParameter, supplierParameter, supplierNameParameter, supplierTitleParameter, supplierPhoneParameter, supplierMobilParameter, supplierEmailParameter, aEDserviceParameter, weberServiceParameter, wS_AftaleDatoParameter, wS_KontaktPersonParameter, wS_KontaktEmailParameter, wS_LastServiceVisitDateParameter, wS_NextServiceVisitDateParameter, wS_ServiceVisitInParameter, wS_ServicePeriodsParameter, wS_ServiceEmailSendtParameter, wS_ServiceStatusParameter, distrib_AED_tilbehørParameter, distrib_PAXParameter, distrib_FABParameter, distrib_EyeWashParameter, distrib_SnøggPlasterDispenserParameter, distrib_112FireExtinguisherParameter, distrib_KimoviParameter, purchase_LifeKeysParameter, purchase_KimoviCremerParameter, purchase_FAKParameter, purchase_Shop2rescueParameter, rescueInfoEditParameter, rescueInfoEditUdvidetParameter, rettetAfParameter, rettetIPParameter);
        }
    
        public virtual ObjectResult<Co2Db_Virksomheder_WeberService_YearMonth_Result> Co2Db_Virksomheder_WeberService_YearMonth(Nullable<bool> isAgent, Nullable<System.Guid> agentID, Nullable<int> year, Nullable<int> month, Nullable<System.DateTime> date)
        {
            var isAgentParameter = isAgent.HasValue ?
                new ObjectParameter("IsAgent", isAgent) :
                new ObjectParameter("IsAgent", typeof(bool));
    
            var agentIDParameter = agentID.HasValue ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(System.Guid));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Co2Db_Virksomheder_WeberService_YearMonth_Result>("Co2Db_Virksomheder_WeberService_YearMonth", isAgentParameter, agentIDParameter, yearParameter, monthParameter, dateParameter);
        }
    }
}
